{"version":3,"sources":["node_modules/gl-vec4/transformMat4.js","node_modules/gl-vec4/set.js","node_modules/camera-project/index.js","node_modules/gl-matrix/lib/gl-matrix/common.js","node_modules/gl-matrix/lib/gl-matrix/mat2.js","node_modules/gl-matrix/lib/gl-matrix/mat2d.js","node_modules/gl-matrix/lib/gl-matrix/mat3.js","node_modules/gl-matrix/lib/gl-matrix/mat4.js","node_modules/gl-matrix/lib/gl-matrix/vec3.js","node_modules/gl-matrix/lib/gl-matrix/vec4.js","node_modules/gl-matrix/lib/gl-matrix/quat.js","node_modules/gl-matrix/lib/gl-matrix/quat2.js","node_modules/gl-matrix/lib/gl-matrix/vec2.js","node_modules/gl-matrix/lib/gl-matrix.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","y","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","length","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","i","l","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2","project","require","canvas","document","querySelector","context","getContext","pixelRatio","raf","playing","lastTime","time","fieldOfView","vertices","resize","window","devicePixelRatio","innerWidth","innerHeight","style","animate","requestAnimationFrame","now","Date","delta","render","save","draw","restore","clearRect","fillStyle","fillRect","strokeStyle","orbitDistance","position","viewport","projView","points","map","beginPath","lineTo","closePath","stroke","point","arc","fill","el","cover","update","display","start","ev","stop","cancelAnimationFrame","addEventListener","passive","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxCA;;;;AAKA;AACO,IAAIA,OAAO,GAAG,QAAd;;AACA,IAAIC,UAAU,GAAG,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqDC,KAAtE;;AACA,IAAIC,MAAM,GAAGC,IAAI,CAACC,MAAlB;AAEP;;;;;;;;AAKO,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,uBAAAP,UAAU,GAAGO,IAAb;AACD;;AAED,IAAIC,MAAM,GAAGJ,IAAI,CAACK,EAAL,GAAU,GAAvB;AAEA;;;;;;AAKO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AAC1B,SAAOA,CAAC,GAAGH,MAAX;AACD;AAED;;;;;;;;;;;AASO,SAASI,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,SAAOT,IAAI,CAACU,GAAL,CAASH,CAAC,GAAGE,CAAb,KAAmBd,OAAO,GAAGK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASH,CAAT,CAAd,EAA2BP,IAAI,CAACU,GAAL,CAASD,CAAT,CAA3B,CAApC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCD;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAASG,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACDA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;AAC5BA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASK,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwC;AAC7C,MAAIT,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACA,SAAOT,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAASU,GAAT,CAAaV,GAAb,EAAkBM,GAAlB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAC3CT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACA,SAAOT,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASW,SAAT,CAAmBX,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC;AACA;AACA,MAAIM,GAAG,KAAKN,CAAZ,EAAe;AACb,QAAIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAT;AACD,GAJD,MAIO;AACLZ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACD;;AAED,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAIoB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV,CAD6B,CAM7B;;AACA,MAAIuB,GAAG,GAAGH,EAAE,GAAGE,EAAL,GAAUD,EAAE,GAAGH,EAAzB;;AAEA,MAAI,CAACK,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AACDA,EAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAE,GAAGC,GAAd;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACY,EAAD,GAAMK,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACe,EAAD,GAAME,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGG,GAAd;AAEA,SAAOjB,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASkB,OAAT,CAAiBlB,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9B;AACA,MAAIoB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAT;AAEA,SAAOd,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmB,WAAT,CAAqBzB,CAArB,EAAwB;AAC7B,SAAOA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAA7B;AACD;AAED;;;;;;;;;;AAQO,SAAS0B,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAIAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGO,EAAL,GAAUN,EAAE,GAAGO,EAAxB;AACAtB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGS,EAAL,GAAUL,EAAE,GAAGM,EAAxB;AACAtB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGS,EAAL,GAAUR,EAAE,GAAGS,EAAxB;AACAxB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGW,EAAL,GAAUP,EAAE,GAAGQ,EAAxB;AACA,SAAOxB,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyB,MAAT,CAAgBzB,GAAhB,EAAqBN,CAArB,EAAwBgC,GAAxB,EAA6B;AAClC,MAAIZ,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIiC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGe,CAAL,GAASd,EAAE,GAAGY,CAAvB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGiB,CAAL,GAASb,EAAE,GAAGW,CAAvB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAG,CAACa,CAAN,GAAUZ,EAAE,GAAGc,CAAxB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAG,CAACe,CAAN,GAAUX,EAAE,GAAGa,CAAxB;AACA,SAAO7B,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBsC,CAAvB,EAA0B;AAC/B,MAAIlB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIuC,EAAE,GAAGD,CAAC,CAAC,CAAD,CAAV;AAAA,MACIE,EAAE,GAAGF,CAAC,CAAC,CAAD,CADV;AAEAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGmB,EAAd;AACAjC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGqB,EAAd;AACAjC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASe,EAAE,GAAGmB,EAAd;AACAlC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAE,GAAGkB,EAAd;AACA,SAAOlC,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASmC,YAAT,CAAsBnC,GAAtB,EAA2B0B,GAA3B,EAAgC;AACrC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA,SAAO7B,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASoC,WAAT,CAAqBpC,GAArB,EAA0BgC,CAA1B,EAA6B;AAClChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACA,SAAOhC,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAA2D,GAAlE;AACD;AAED;;;;;;;;AAMO,SAAS4C,IAAT,CAAc5C,CAAd,EAAiB;AACtB,SAAOP,IAAI,CAACoD,IAAL,CAAUpD,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,IAAoBP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApB,GAAwCP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxC,GAA4DP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAtE,CAAP;AACD;AAED;;;;;;;;;AAQO,SAAS+C,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBlD,CAAtB,EAAyB;AAC9BgD,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOhD,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAf;AACAkD,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOlD,CAAC,CAAC,CAAD,CAAR;AACAkD,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOlD,CAAC,CAAC,CAAD,CAAR;AACAkD,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOlD,CAAC,CAAC,CAAD,CAAD,GAAOgD,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAtB;AACA,SAAO,CAACF,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAP;AACD;AAED;;;;;;;;;;AAQO,SAASC,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+C,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAApE;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAIA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAA9S;AACD;AAED;;;;;;;;;;AAQO,SAASwB,cAAT,CAAwBhD,GAAxB,EAA6BN,CAA7B,EAAgCE,CAAhC,EAAmC;AACxCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASiD,oBAAT,CAA8BjD,GAA9B,EAAmCN,CAAnC,EAAsCE,CAAtC,EAAyCmC,KAAzC,EAAgD;AACrD/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;AAIO,IAAIkD,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAI+B,GAAG,GAAGL,QAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjbP;;;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;AAKO,SAAS/C,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACDA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;AAC5BA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASK,UAAT,CAAoBX,CAApB,EAAuBE,CAAvB,EAA0BiC,CAA1B,EAA6BuB,CAA7B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwC;AAC7C,MAAItD,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoD,CAAT;AACApD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqD,EAAT;AACArD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsD,EAAT;AACA,SAAOtD,GAAP;AACD;AAED;;;;;;;;;;;;;;AAYO,SAASU,GAAT,CAAaV,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwBiC,CAAxB,EAA2BuB,CAA3B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AAC3CtD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoD,CAAT;AACApD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqD,EAAT;AACArD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsD,EAAT;AACA,SAAOtD,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAI6D,EAAE,GAAG7D,CAAC,CAAC,CAAD,CAAV;AAAA,MACI8D,EAAE,GAAG9D,CAAC,CAAC,CAAD,CADV;AAAA,MAEI+D,EAAE,GAAG/D,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIgE,EAAE,GAAGhE,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIiE,GAAG,GAAGjE,CAAC,CAAC,CAAD,CAAX;AAAA,MACIkE,GAAG,GAAGlE,CAAC,CAAC,CAAD,CADX;AAGA,MAAIuB,GAAG,GAAGsC,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGC,EAAzB;;AACA,MAAI,CAACxC,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AACDA,EAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0D,EAAE,GAAGzC,GAAd;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACwD,EAAD,GAAMvC,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyD,EAAD,GAAMxC,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuD,EAAE,GAAGtC,GAAd;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyD,EAAE,GAAGG,GAAL,GAAWF,EAAE,GAAGC,GAAjB,IAAwB1C,GAAjC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACwD,EAAE,GAAGG,GAAL,GAAWJ,EAAE,GAAGK,GAAjB,IAAwB3C,GAAjC;AACA,SAAOjB,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmB,WAAT,CAAqBzB,CAArB,EAAwB;AAC7B,SAAOA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAA7B;AACD;AAED;;;;;;;;;;AAQO,SAAS0B,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGO,EAAL,GAAUN,EAAE,GAAGO,EAAxB;AACAtB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGS,EAAL,GAAUL,EAAE,GAAGM,EAAxB;AACAtB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGS,EAAL,GAAUR,EAAE,GAAGS,EAAxB;AACAxB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGW,EAAL,GAAUP,EAAE,GAAGQ,EAAxB;AACAxB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGiD,EAAL,GAAUhD,EAAE,GAAGiD,EAAf,GAAoBH,EAA7B;AACA7D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGmD,EAAL,GAAU/C,EAAE,GAAGgD,EAAf,GAAoBF,EAA7B;AACA,SAAO9D,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyB,MAAT,CAAgBzB,GAAhB,EAAqBN,CAArB,EAAwBgC,GAAxB,EAA6B;AAClC,MAAIZ,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,MAAIiC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGe,CAAL,GAASd,EAAE,GAAGY,CAAvB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGiB,CAAL,GAASb,EAAE,GAAGW,CAAvB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAG,CAACa,CAAN,GAAUZ,EAAE,GAAGc,CAAxB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAG,CAACe,CAAN,GAAUX,EAAE,GAAGa,CAAxB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6D,EAAT;AACA7D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8D,EAAT;AACA,SAAO9D,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBsC,CAAvB,EAA0B;AAC/B,MAAIlB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,MAAIuC,EAAE,GAAGD,CAAC,CAAC,CAAD,CAAV;AAAA,MACIE,EAAE,GAAGF,CAAC,CAAC,CAAD,CADV;AAEAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGmB,EAAd;AACAjC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGqB,EAAd;AACAjC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASe,EAAE,GAAGmB,EAAd;AACAlC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAE,GAAGkB,EAAd;AACAlC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6D,EAAT;AACA7D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8D,EAAT;AACA,SAAO9D,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiE,SAAT,CAAmBjE,GAAnB,EAAwBN,CAAxB,EAA2BsC,CAA3B,EAA8B;AACnC,MAAIlB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,MAAIuC,EAAE,GAAGD,CAAC,CAAC,CAAD,CAAV;AAAA,MACIE,EAAE,GAAGF,CAAC,CAAC,CAAD,CADV;AAEAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAT;AACAd,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAT;AACAZ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASe,EAAT;AACAf,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAT;AACAhB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGmB,EAAL,GAAUlB,EAAE,GAAGmB,EAAf,GAAoB2B,EAA7B;AACA7D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGqB,EAAL,GAAUjB,EAAE,GAAGkB,EAAf,GAAoB4B,EAA7B;AACA,SAAO9D,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASmC,YAAT,CAAsBnC,GAAtB,EAA2B0B,GAA3B,EAAgC;AACrC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AAAA,MACIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CADR;AAEA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASoC,WAAT,CAAqBpC,GAArB,EAA0BgC,CAA1B,EAA6B;AAClChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASkE,eAAT,CAAyBlE,GAAzB,EAA8BgC,CAA9B,EAAiC;AACtChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACA,SAAOhC,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,WAAWA,CAAC,CAAC,CAAD,CAAZ,GAAkB,IAAlB,GAAyBA,CAAC,CAAC,CAAD,CAA1B,GAAgC,IAAhC,GAAuCA,CAAC,CAAC,CAAD,CAAxC,GAA8C,IAA9C,GAAqDA,CAAC,CAAC,CAAD,CAAtD,GAA4D,IAA5D,GAAmEA,CAAC,CAAC,CAAD,CAApE,GAA0E,IAA1E,GAAiFA,CAAC,CAAC,CAAD,CAAlF,GAAwF,GAA/F;AACD;AAED;;;;;;;;AAMO,SAAS4C,IAAT,CAAc5C,CAAd,EAAiB;AACtB,SAAOP,IAAI,CAACoD,IAAL,CAAUpD,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,IAAoBP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApB,GAAwCP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxC,GAA4DP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA5D,GAAgFP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAhF,GAAoGP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApG,GAAwH,CAAlI,CAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmD,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgD,cAAT,CAAwBhD,GAAxB,EAA6BN,CAA7B,EAAgCE,CAAhC,EAAmC;AACxCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASiD,oBAAT,CAA8BjD,GAA9B,EAAmCN,CAAnC,EAAsCE,CAAtC,EAAyCmC,KAAzC,EAAgD;AACrD/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+C,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA7D,IAAoEF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA9E,IAAqFF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAtG;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAMA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAAvS,IAAoVrC,IAAI,CAACU,GAAL,CAASgE,EAAE,GAAGE,EAAd,KAAqB9D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASgE,EAAT,CAAd,EAA4B1E,IAAI,CAACU,GAAL,CAASkE,EAAT,CAA5B,CAA5X,IAAya5E,IAAI,CAACU,GAAL,CAASiE,EAAE,GAAGE,EAAd,KAAqB/D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiE,EAAT,CAAd,EAA4B3E,IAAI,CAACU,GAAL,CAASmE,EAAT,CAA5B,CAAxd;AACD;AAED;;;;;;AAIO,IAAId,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAI+B,GAAG,GAAGL,QAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACneP;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAAS/C,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACDA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASmE,QAAT,CAAkBnE,GAAlB,EAAuBN,CAAvB,EAA0B;AAC/BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,EAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;;;;;;AAcO,SAASK,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B6D,GAA9B,EAAmC5D,GAAnC,EAAwCC,GAAxC,EAA6C4D,GAA7C,EAAkDC,GAAlD,EAAuDC,GAAvD,EAA4DC,GAA5D,EAAiE;AACtE,MAAIxE,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoE,GAAT;AACApE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACAT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqE,GAAT;AACArE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsE,GAAT;AACAtE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuE,GAAT;AACAvE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwE,GAAT;AACA,SAAOxE,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;AAeO,SAASU,GAAT,CAAaV,GAAb,EAAkBM,GAAlB,EAAuBC,GAAvB,EAA4B6D,GAA5B,EAAiC5D,GAAjC,EAAsCC,GAAtC,EAA2C4D,GAA3C,EAAgDC,GAAhD,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+D;AACpExE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoE,GAAT;AACApE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACAT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqE,GAAT;AACArE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsE,GAAT;AACAtE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuE,GAAT;AACAvE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwE,GAAT;AACA,SAAOxE,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;AAC5BA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASW,SAAT,CAAmBX,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC;AACA,MAAIM,GAAG,KAAKN,CAAZ,EAAe;AACb,QAAI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAX;AAAA,QACIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CADX;AAAA,QAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAGAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAT;AACAzE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAT;AACA1E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAT;AACD,GAVD,MAUO;AACL3E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACD;;AAED,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CAFX;AAIA,MAAIwF,GAAG,GAAGD,GAAG,GAAGH,GAAN,GAAYH,GAAG,GAAGK,GAA5B;AACA,MAAIG,GAAG,GAAG,CAACF,GAAD,GAAOJ,GAAP,GAAaF,GAAG,GAAGI,GAA7B;AACA,MAAIK,GAAG,GAAGJ,GAAG,GAAGH,GAAN,GAAYC,GAAG,GAAGC,GAA5B,CAb6B,CAe7B;;AACA,MAAI9D,GAAG,GAAG2D,GAAG,GAAGM,GAAN,GAAYT,GAAG,GAAGU,GAAlB,GAAwBT,GAAG,GAAGU,GAAxC;;AAEA,MAAI,CAACnE,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AACDA,EAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkF,GAAG,GAAGjE,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAACiF,GAAD,GAAOR,GAAP,GAAaC,GAAG,GAAGM,GAApB,IAA2B/D,GAApC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2E,GAAG,GAAGF,GAAN,GAAYC,GAAG,GAAGI,GAAnB,IAA0B7D,GAAnC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmF,GAAG,GAAGlE,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACiF,GAAG,GAAGL,GAAN,GAAYF,GAAG,GAAGK,GAAnB,IAA0B9D,GAAnC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAAC2E,GAAD,GAAOC,GAAP,GAAaF,GAAG,GAAGG,GAApB,IAA2B5D,GAApC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoF,GAAG,GAAGnE,GAAf;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAACgF,GAAD,GAAOJ,GAAP,GAAaH,GAAG,GAAGM,GAApB,IAA2B9D,GAApC;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC8E,GAAG,GAAGF,GAAN,GAAYH,GAAG,GAAGI,GAAnB,IAA0B5D,GAAnC;AACA,SAAOjB,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASkB,OAAT,CAAiBlB,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CAFX;AAIAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAG,GAAGG,GAAN,GAAYN,GAAG,GAAGK,GAA3B;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAGM,GAAN,GAAYP,GAAG,GAAGQ,GAA3B;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAA3B;AACA9E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAG,GAAGI,GAAN,GAAYF,GAAG,GAAGI,GAA3B;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGK,GAAN,GAAYP,GAAG,GAAGK,GAA3B;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAGG,GAAN,GAAYD,GAAG,GAAGD,GAA3B;AACA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAA3B;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAGM,GAAN,GAAYH,GAAG,GAAGI,GAA3B;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGE,GAAN,GAAYL,GAAG,GAAGI,GAA3B;AACA,SAAO7E,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmB,WAAT,CAAqBzB,CAArB,EAAwB;AAC7B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CAFX;AAIA,SAAOkF,GAAG,IAAIK,GAAG,GAAGH,GAAN,GAAYH,GAAG,GAAGK,GAAtB,CAAH,GAAgCP,GAAG,IAAI,CAACQ,GAAD,GAAOJ,GAAP,GAAaF,GAAG,GAAGI,GAAvB,CAAnC,GAAiEL,GAAG,IAAIM,GAAG,GAAGH,GAAN,GAAYC,GAAG,GAAGC,GAAtB,CAA3E;AACD;AAED;;;;;;;;;;AAQO,SAAS3D,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAIgF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAGA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CAFX;AAIA,MAAI2F,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEI0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAFX;AAGA,MAAI2F,GAAG,GAAG3F,CAAC,CAAC,CAAD,CAAX;AAAA,MACIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CADX;AAAA,MAEI4F,GAAG,GAAG5F,CAAC,CAAC,CAAD,CAFX;AAGA,MAAI6F,GAAG,GAAG7F,CAAC,CAAC,CAAD,CAAX;AAAA,MACIwF,GAAG,GAAGxF,CAAC,CAAC,CAAD,CADX;AAAA,MAEI8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAFX;AAIAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqF,GAAG,GAAGT,GAAN,GAAYM,GAAG,GAAGL,GAAlB,GAAwBS,GAAG,GAAGP,GAAvC;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqF,GAAG,GAAGZ,GAAN,GAAYS,GAAG,GAAGJ,GAAlB,GAAwBQ,GAAG,GAAGN,GAAvC;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqF,GAAG,GAAGX,GAAN,GAAYQ,GAAG,GAAGP,GAAlB,GAAwBW,GAAG,GAAGL,GAAvC;AAEAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuF,GAAG,GAAGX,GAAN,GAAYO,GAAG,GAAGN,GAAlB,GAAwBW,GAAG,GAAGT,GAAvC;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuF,GAAG,GAAGd,GAAN,GAAYU,GAAG,GAAGL,GAAlB,GAAwBU,GAAG,GAAGR,GAAvC;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuF,GAAG,GAAGb,GAAN,GAAYS,GAAG,GAAGR,GAAlB,GAAwBa,GAAG,GAAGP,GAAvC;AAEAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyF,GAAG,GAAGb,GAAN,GAAYQ,GAAG,GAAGP,GAAlB,GAAwBa,GAAG,GAAGX,GAAvC;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyF,GAAG,GAAGhB,GAAN,GAAYW,GAAG,GAAGN,GAAlB,GAAwBY,GAAG,GAAGV,GAAvC;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyF,GAAG,GAAGf,GAAN,GAAYU,GAAG,GAAGT,GAAlB,GAAwBe,GAAG,GAAGT,GAAvC;AACA,SAAOjF,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiE,SAAT,CAAmBjE,GAAnB,EAAwBN,CAAxB,EAA2BsC,CAA3B,EAA8B;AACnC,MAAI4C,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAHX;AAAA,MAIIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAJX;AAAA,MAKIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CALX;AAAA,MAMIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CANX;AAAA,MAOIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAPX;AAAA,MAQIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CARX;AAAA,MASIiG,CAAC,GAAG3D,CAAC,CAAC,CAAD,CATT;AAAA,MAUI4D,CAAC,GAAG5D,CAAC,CAAC,CAAD,CAVT;AAYAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAT;AACA5E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAT;AACAzE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAT;AAEA1E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAT;AACA7E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAT;AACA9E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAT;AAEA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGf,GAAJ,GAAUgB,CAAC,GAAGf,GAAd,GAAoBE,GAA7B;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGlB,GAAJ,GAAUmB,CAAC,GAAGd,GAAd,GAAoBE,GAA7B;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGjB,GAAJ,GAAUkB,CAAC,GAAGjB,GAAd,GAAoBM,GAA7B;AACA,SAAOjF,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyB,MAAT,CAAgBzB,GAAhB,EAAqBN,CAArB,EAAwBgC,GAAxB,EAA6B;AAClC,MAAIkD,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAHX;AAAA,MAIIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAJX;AAAA,MAKIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CALX;AAAA,MAMIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CANX;AAAA,MAOIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAPX;AAAA,MAQIuF,GAAG,GAAGvF,CAAC,CAAC,CAAD,CARX;AAAA,MASIiC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CATR;AAAA,MAUIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAVR;AAYA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAG+C,GAAJ,GAAUjD,CAAC,GAAGkD,GAAvB;AACA7E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAG4C,GAAJ,GAAU9C,CAAC,GAAGmD,GAAvB;AACA9E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAG6C,GAAJ,GAAU/C,CAAC,GAAGgD,GAAvB;AAEA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAGgD,GAAJ,GAAUlD,CAAC,GAAGiD,GAAvB;AACA5E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAGiD,GAAJ,GAAUnD,CAAC,GAAG8C,GAAvB;AACAzE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAC,GAAG8C,GAAJ,GAAUhD,CAAC,GAAG+C,GAAvB;AAEA1E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+E,GAAT;AACA/E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgF,GAAT;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiF,GAAT;AACA,SAAOjF,GAAP;AACD;;AAAA;AAED;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBsC,CAAvB,EAA0B;AAC/B,MAAI2D,CAAC,GAAG3D,CAAC,CAAC,CAAD,CAAT;AAAA,MACI4D,CAAC,GAAG5D,CAAC,CAAC,CAAD,CADT;AAGAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAd;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAd;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAd;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAd;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAd;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAd;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASkE,eAAT,CAAyBlE,GAAzB,EAA8BgC,CAA9B,EAAiC;AACtChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASmC,YAAT,CAAsBnC,GAAtB,EAA2B0B,GAA3B,EAAgC;AACrC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AAAA,MACIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CADR;AAGA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASoC,WAAT,CAAqBpC,GAArB,EAA0BgC,CAA1B,EAA6B;AAClChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS6F,SAAT,CAAmB7F,GAAnB,EAAwBN,CAAxB,EAA2B;AAChkB9F,GAAlB,EAAuB+F,CAAvB,EAA0B;AAC/B,MAAIJ,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAT;AAAA,MACIH,CAAC,GAAGG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAHT;AAIA,MAAIG,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGJ,CAAC,GAAGA,CAAb;AAEA,MAAIK,EAAE,GAAGV,CAAC,GAAGO,EAAb;AACA,MAAII,EAAE,GAAGV,CAAC,GAAGM,EAAb;AACA,MAAIK,EAAE,GAAGX,CAAC,GAAGO,EAAb;AACA,MAAIK,EAAE,GAAGR,CAAC,GAAGE,EAAb;AACA,MAAIO,EAAE,GAAGT,CAAC,GAAGG,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGI,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGC,EAAb;AACA,MAAIU,EAAE,GAAGX,CAAC,GAAGE,EAAb;AACA,MAAIU,EAAE,GAAGZ,CAAC,GAAGG,EAAb;AAEApG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIuG,EAAJ,GAASG,EAAlB;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsG,EAAE,GAAGO,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwG,EAAE,GAAGI,EAAd;AAEA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsG,EAAE,GAAGO,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIqG,EAAJ,GAASK,EAAlB;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyG,EAAE,GAAGE,EAAd;AAEA3G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwG,EAAE,GAAGI,EAAd;AACA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyG,EAAE,GAAGE,EAAd;AACA3G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIqG,EAAJ,GAASE,EAAlB;AAEA,SAAOvG,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8G,cAAT,CAAwB9G,GAAxB,EAA6BN,CAA7B,EAAgC;AACrC,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIwH,GAAG,GAAGxH,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyH,GAAG,GAAGzH,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0H,GAAG,GAAG1H,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2H,GAAG,GAAG3H,CAAC,CAAC,EAAD,CAHX;AAKA,MAAI2F,GAAG,GAAGT,GAAG,GAAGE,GAAN,GAAYL,GAAG,GAAGI,GAA5B;AACA,MAAIK,GAAG,GAAGN,GAAG,GAAGD,GAAN,GAAYD,GAAG,GAAGG,GAA5B;AACA,MAAIS,GAAG,GAAGV,GAAG,GAAGoC,GAAN,GAAYD,GAAG,GAAGlC,GAA5B;AACA,MAAIyC,GAAG,GAAG7C,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAA5B;AACA,MAAIyC,GAAG,GAAG9C,GAAG,GAAGuC,GAAN,GAAYD,GAAG,GAAGjC,GAA5B;AACA,MAAI0C,GAAG,GAAG9C,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAA5B;AACA,MAAI8C,GAAG,GAAG1C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAIQ,GAAG,GAAG3C,GAAG,GAAGqC,GAAN,GAAYnC,GAAG,GAAGiC,GAA5B;AACA,MAAIS,GAAG,GAAG5C,GAAG,GAAGsC,GAAN,GAAYJ,GAAG,GAAGC,GAA5B;AACA,MAAIU,GAAG,GAAG5C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAI5B,GAAG,GAAGP,GAAG,GAAGqC,GAAN,GAAYJ,GAAG,GAAGE,GAA5B;AACA,MAAIhC,GAAG,GAAGF,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAA5B,CA7BqC,CA+BrC;;AACA,MAAInG,GAAG,GAAGoE,GAAG,GAAGF,GAAN,GAAYD,GAAG,GAAGK,GAAlB,GAAwBD,GAAG,GAAGsC,GAA9B,GAAoCN,GAAG,GAAGK,GAA1C,GAAgDJ,GAAG,GAAGG,GAAtD,GAA4DF,GAAG,GAAGC,GAA5E;;AAEA,MAAI,CAACxG,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AACDA,EAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC8E,GAAG,GAAGK,GAAN,GAAYR,GAAG,GAAGY,GAAlB,GAAwByB,GAAG,GAAGY,GAA/B,IAAsC3G,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2E,GAAG,GAAGgD,GAAN,GAAY9C,GAAG,GAAGM,GAAlB,GAAwB6B,GAAG,GAAGU,GAA/B,IAAsCzG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC6E,GAAG,GAAGU,GAAN,GAAYT,GAAG,GAAG6C,GAAlB,GAAwBX,GAAG,GAAGS,GAA/B,IAAsCxG,GAA/C;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC0E,GAAG,GAAGa,GAAN,GAAYd,GAAG,GAAGU,GAAlB,GAAwB4B,GAAG,GAAGa,GAA/B,IAAsC3G,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC4E,GAAG,GAAGO,GAAN,GAAYT,GAAG,GAAGiD,GAAlB,GAAwBZ,GAAG,GAAGW,GAA/B,IAAsCzG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyE,GAAG,GAAGkD,GAAN,GAAY/C,GAAG,GAAGW,GAAlB,GAAwBwB,GAAG,GAAGU,GAA/B,IAAsCxG,GAA/C;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACmH,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGG,GAAlB,GAAwBF,GAAG,GAAGC,GAA/B,IAAsCrG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoH,GAAG,GAAG9B,GAAN,GAAY4B,GAAG,GAAGM,GAAlB,GAAwBH,GAAG,GAAGnC,GAA/B,IAAsCjE,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACkH,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAG7B,GAAlB,GAAwB+B,GAAG,GAAGhC,GAA/B,IAAsCpE,GAA/C;AAEA,SAAOjB,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS6H,UAAT,CAAoB7H,GAApB,EAAyB8H,KAAzB,EAAgCC,MAAhC,EAAwC;AAC7C/H,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAI8H,KAAb;AACA9H,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAAD,GAAK+H,MAAd;AACA/H,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAAV;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAA2D,IAA3D,GAAkEA,CAAC,CAAC,CAAD,CAAnE,GAAyE,IAAzE,GAAgFA,CAAC,CAAC,CAAD,CAAjF,GAAuF,IAAvF,GAA8FA,CAAC,CAAC,CAAD,CAA/F,GAAqG,IAArG,GAA4GA,CAAC,CAAC,CAAD,CAA7G,GAAmH,IAAnH,GAA0HA,CAAC,CAAC,CAAD,CAA3H,GAAiI,GAAxI;AACD;AAED;;;;;;;;AAMO,SAAS4C,IAAT,CAAc5C,CAAd,EAAiB;AACtB,SAAOP,IAAI,CAACoD,IAAL,CAAUpD,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,IAAoBP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApB,GAAwCP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxC,GAA4DP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA5D,GAAgFP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAhF,GAAoGP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApG,GAAwHP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxH,GAA4IP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA5I,GAAgKP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA1K,CAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmD,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgD,cAAT,CAAwBhD,GAAxB,EAA6BN,CAA7B,EAAgCE,CAAhC,EAAmC;AACxCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASiD,oBAAT,CAA8BjD,GAA9B,EAAmCN,CAAnC,EAAsCE,CAAtC,EAAyCmC,KAAzC,EAAgD;AACrD/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+C,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA7D,IAAoEF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA9E,IAAqFF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA/F,IAAsGF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAhH,IAAuHF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAjI,IAAwIF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAzJ;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAAA,MAMIsI,EAAE,GAAGtI,CAAC,CAAC,CAAD,CANV;AAAA,MAOIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CAPV;AAAA,MAQIwI,EAAE,GAAGxI,CAAC,CAAC,CAAD,CARV;AASA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAAA,MAMIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CANV;AAAA,MAOIwI,EAAE,GAAGxI,CAAC,CAAC,CAAD,CAPV;AAAA,MAQIyI,EAAE,GAAGzI,CAAC,CAAC,CAAD,CARV;AASA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAAvS,IAAoVrC,IAAI,CAACU,GAAL,CAASgE,EAAE,GAAGE,EAAd,KAAqB9D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASgE,EAAT,CAAd,EAA4B1E,IAAI,CAACU,GAAL,CAASkE,EAAT,CAA5B,CAA5X,IAAya5E,IAAI,CAACU,GAAL,CAASiE,EAAE,GAAGE,EAAd,KAAqB/D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiE,EAAT,CAAd,EAA4B3E,IAAI,CAACU,GAAL,CAASmE,EAAT,CAA5B,CAAjd,IAA8f7E,IAAI,CAACU,GAAL,CAASmI,EAAE,GAAGG,EAAd,KAAqBlI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmI,EAAT,CAAd,EAA4B7I,IAAI,CAACU,GAAL,CAASsI,EAAT,CAA5B,CAAtiB,IAAmlBhJ,IAAI,CAACU,GAAL,CAASoI,EAAE,GAAGG,EAAd,KAAqBnI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASoI,EAAT,CAAd,EAA4B9I,IAAI,CAACU,GAAL,CAASuI,EAAT,CAA5B,CAA3nB,IAAwqBjJ,IAAI,CAACU,GAAL,CAASqI,EAAE,GAAGG,EAAd,KAAqBpI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASqI,EAAT,CAAd,EAA4B/I,IAAI,CAACU,GAAL,CAASwI,EAAT,CAA5B,CAAvtB;AACD;AAED;;;;;;AAIO,IAAInF,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAI+B,GAAG,GAAGL,QAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzyBP;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAAS/C,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,EAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,EAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;AAqBO,SAASK,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B6D,GAA9B,EAAmCkE,GAAnC,EAAwC9H,GAAxC,EAA6CC,GAA7C,EAAkD4D,GAAlD,EAAuDkE,GAAvD,EAA4DjE,GAA5D,EAAiEC,GAAjE,EAAsEC,GAAtE,EAA2EgE,GAA3E,EAAgFC,GAAhF,EAAqFC,GAArF,EAA0FC,GAA1F,EAA+FC,GAA/F,EAAoG;AACzG,MAAI5I,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,EAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoE,GAAT;AACApE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsI,GAAT;AACAtI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACAT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqE,GAAT;AACArE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuI,GAAT;AACAvI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsE,GAAT;AACAtE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuE,GAAT;AACAvE,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUwE,GAAV;AACAxE,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUwI,GAAV;AACAxI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUyI,GAAV;AACAzI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU0I,GAAV;AACA1I,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU2I,GAAV;AACA3I,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4I,GAAV;AACA,SAAO5I,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,SAASU,GAAT,CAAaV,GAAb,EAAkBM,GAAlB,EAAuBC,GAAvB,EAA4B6D,GAA5B,EAAiCkE,GAAjC,EAAsC9H,GAAtC,EAA2CC,GAA3C,EAAgD4D,GAAhD,EAAqDkE,GAArD,EAA0DjE,GAA1D,EAA+DC,GAA/D,EAAoEC,GAApE,EAAyEgE,GAAzE,EAA8EC,GAA9E,EAAmFC,GAAnF,EAAwFC,GAAxF,EAA6FC,GAA7F,EAAkG;AACvG5I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,GAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,GAAT;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoE,GAAT;AACApE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsI,GAAT;AACAtI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,GAAT;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,GAAT;AACAT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqE,GAAT;AACArE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuI,GAAT;AACAvI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsE,GAAT;AACAtE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuE,GAAT;AACAvE,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUwE,GAAV;AACAxE,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUwI,GAAV;AACAxI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUyI,GAAV;AACAzI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU0I,GAAV;AACA1I,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU2I,GAAV;AACA3I,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4I,GAAV;AACA,SAAO5I,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAumBX,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC;AACA,MAAIM,GAAG,KAAKN,CAAZ,EAAe;AACb,QAAI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAX;AAAA,QACIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CADX;AAAA,QAEIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAFX;AAGA,QAAIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAAX;AAAA,QACIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CADX;AAEA,QAAIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAAX;AAEAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,EAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAT;AACAzE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,EAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAT;AACA1E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAT;AACA3E,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU+G,GAAV;AACA/G,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgH,GAAV;AACAhH,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUiH,GAAV;AACD,GApBD,MAoBO;AACLjH,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,EAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,EAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACD;;AAED,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIwH,GAAG,GAAGxH,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyH,GAAG,GAAGzH,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0H,GAAG,GAAG1H,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2H,GAAG,GAAG3H,CAAC,CAAC,EAAD,CAHX;AAKA,MAAI2F,GAAG,GAAGT,GAAG,GAAGE,GAAN,GAAYL,GAAG,GAAGI,GAA5B;AACA,MAAIK,GAAG,GAAGN,GAAG,GAAGD,GAAN,GAAYD,GAAG,GAAGG,GAA5B;AACA,MAAIS,GAAG,GAAGV,GAAG,GAAGoC,GAAN,GAAYD,GAAG,GAAGlC,GAA5B;AACA,MAAIyC,GAAG,GAAG7C,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAA5B;AACA,MAAIyC,GAAG,GAAG9C,GAAG,GAAGuC,GAAN,GAAYD,GAAG,GAAGjC,GAA5B;AACA,MAAI0C,GAAG,GAAG9C,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAA5B;AACA,MAAI8C,GAAG,GAAG1C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAIQ,GAAG,GAAG3C,GAAG,GAAGqC,GAAN,GAAYnC,GAAG,GAAGiC,GAA5B;AACA,MAAIS,GAAG,GAAG5C,GAAG,GAAGsC,GAAN,GAAYJ,GAAG,GAAGC,GAA5B;AACA,MAAIU,GAAG,GAAG5C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAI5B,GAAG,GAAGP,GAAG,GAAGqC,GAAN,GAAYJ,GAAG,GAAGE,GAA5B;AACA,MAAIhC,GAAG,GAAGF,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAA5B,CA7B6B,CA+B7B;;AACA,MAAInG,GAAG,GAAGoE,GAAG,GAAGF,GAAN,GAAYD,GAAG,GAAGK,GAAlB,GAAwBD,GAAG,GAAGsC,GAA9B,GAAoCN,GAAG,GAAGK,GAA1C,GAAgDJ,GAAG,GAAGG,GAAtD,GAA4DF,GAAG,GAAGC,GAA5E;;AAEA,MAAI,CAACxG,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AACDA,EAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC8E,GAAG,GAAGK,GAAN,GAAYR,GAAG,GAAGY,GAAlB,GAAwByB,GAAG,GAAGY,GAA/B,IAAsC3G,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC0E,GAAG,GAAGa,GAAN,GAAYd,GAAG,GAAGU,GAAlB,GAAwB4B,GAAG,GAAGa,GAA/B,IAAsC3G,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACmH,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGG,GAAlB,GAAwBF,GAAG,GAAGC,GAA/B,IAAsCrG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACiF,GAAG,GAAGsC,GAAN,GAAYvC,GAAG,GAAGwC,GAAlB,GAAwBP,GAAG,GAAGK,GAA/B,IAAsCrG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2E,GAAG,GAAGgD,GAAN,GAAY9C,GAAG,GAAGM,GAAlB,GAAwB6B,GAAG,GAAGU,GAA/B,IAAsCzG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC4E,GAAG,GAAGO,GAAN,GAAYT,GAAG,GAAGiD,GAAlB,GAAwBZ,GAAG,GAAGW,GAA/B,IAAsCzG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoH,GAAG,GAAG9B,GAAN,GAAY4B,GAAG,GAAGM,GAAlB,GAAwBH,GAAG,GAAGnC,GAA/B,IAAsCjE,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC+E,GAAG,GAAGyC,GAAN,GAAYvC,GAAG,GAAGK,GAAlB,GAAwB2B,GAAG,GAAG/B,GAA/B,IAAsCjE,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC6E,GAAG,GAAGU,GAAN,GAAYT,GAAG,GAAG6C,GAAlB,GAAwBX,GAAG,GAAGS,GAA/B,IAAsCxG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyE,GAAG,GAAGkD,GAAN,GAAY/C,GAAG,GAAGW,GAAlB,GAAwBwB,GAAG,GAAGU,GAA/B,IAAsCxG,GAA/C;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACkH,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAG7B,GAAlB,GAAwB+B,GAAG,GAAGhC,GAA/B,IAAsCpE,GAAhD;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACgF,GAAG,GAAGM,GAAN,GAAYP,GAAG,GAAGwC,GAAlB,GAAwBN,GAAG,GAAG5B,GAA/B,IAAsCpE,GAAhD;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC8E,GAAG,GAAG4C,GAAN,GAAY7C,GAAG,GAAG+C,GAAlB,GAAwBjD,GAAG,GAAG8C,GAA/B,IAAsCxG,GAAhD;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC4E,GAAG,GAAGgD,GAAN,GAAYnD,GAAG,GAAGiD,GAAlB,GAAwBhD,GAAG,GAAG+C,GAA/B,IAAsCxG,GAAhD;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACmH,GAAG,GAAGjC,GAAN,GAAYgC,GAAG,GAAGI,GAAlB,GAAwBF,GAAG,GAAG/B,GAA/B,IAAsCpE,GAAhD;AACAjB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC+E,GAAG,GAAGuC,GAAN,GAAYtC,GAAG,GAAGE,GAAlB,GAAwBD,GAAG,GAAGI,GAA/B,IAAsCpE,GAAhD;AAEA,SAAOjB,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASkB,OAAT,CAAiBlB,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIwH,GAAG,GAAGxH,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyH,GAAG,GAAGzH,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0H,GAAG,GAAG1H,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2H,GAAG,GAAG3H,CAAC,CAAC,EAAD,CAHX;AAKAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAG,IAAIG,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAAtB,CAAH,GAAgCpC,GAAG,IAAIL,GAAG,GAAG0C,GAAN,GAAYL,GAAG,GAAGI,GAAtB,CAAnC,GAAgED,GAAG,IAAIxC,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAG/B,GAAtB,CAA5E;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAEyE,GAAG,IAAIQ,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAAtB,CAAH,GAAgCpC,GAAG,IAAIN,GAAG,GAAG2C,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGuC,GAAN,GAAYF,GAAG,GAAG9B,GAAtB,CAArE,CAAT;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,IAAIE,GAAG,GAAG0C,GAAN,GAAYL,GAAG,GAAGI,GAAtB,CAAH,GAAgCtC,GAAG,IAAIJ,GAAG,GAAG2C,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAAtB,CAA5E;AACA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAEyE,GAAG,IAAIE,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAG/B,GAAtB,CAAH,GAAgCH,GAAG,IAAIJ,GAAG,GAAGuC,GAAN,GAAYF,GAAG,GAAG9B,GAAtB,CAAnC,GAAgED,GAAG,IAAIN,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAAtB,CAArE,CAAT;AACA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAE6E,GAAG,IAAII,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAAtB,CAAH,GAAgCrC,GAAG,IAAIJ,GAAG,GAAG0C,GAAN,GAAYL,GAAG,GAAGI,GAAtB,CAAnC,GAAgEF,GAAG,IAAIvC,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAG/B,GAAtB,CAArE,CAAT;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,IAAIK,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAAtB,CAAH,GAAgCrC,GAAG,IAAIL,GAAG,GAAG2C,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAAnC,GAAgEF,GAAG,IAAIxC,GAAG,GAAGuC,GAAN,GAAYF,GAAG,GAAG9B,GAAtB,CAA5E;AACAjF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAE4E,GAAG,IAAID,GAAG,GAAG0C,GAAN,GAAYL,GAAG,GAAGI,GAAtB,CAAH,GAAgCvC,GAAG,IAAIH,GAAG,GAAG2C,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAAnC,GAAgEF,GAAG,IAAIxC,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAAtB,CAArE,CAAT;AACA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,IAAID,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAG/B,GAAtB,CAAH,GAAgCJ,GAAG,IAAIH,GAAG,GAAGuC,GAAN,GAAYF,GAAG,GAAG9B,GAAtB,CAAnC,GAAgEF,GAAG,IAAIL,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAAtB,CAA5E;AACA3E,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAG,IAAIG,GAAG,GAAGqC,GAAN,GAAYJ,GAAG,GAAGE,GAAtB,CAAH,GAAgCpC,GAAG,IAAID,GAAG,GAAGuC,GAAN,GAAYL,GAAG,GAAGG,GAAtB,CAAnC,GAAgED,GAAG,IAAIpC,GAAG,GAAGmC,GAAN,GAAYD,GAAG,GAAGhC,GAAtB,CAA5E;AACAhF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAE4E,GAAG,IAAII,GAAG,GAAGqC,GAAN,GAAYJ,GAAG,GAAGE,GAAtB,CAAH,GAAgCpC,GAAG,IAAIN,GAAG,GAAG4C,GAAN,GAAYN,GAAG,GAAGI,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGwC,GAAN,GAAYF,GAAG,GAAG/B,GAAtB,CAArE,CAAT;AACAhF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4E,GAAG,IAAIE,GAAG,GAAGuC,GAAN,GAAYL,GAAG,GAAGG,GAAtB,CAAH,GAAgCtC,GAAG,IAAIJ,GAAG,GAAG4C,GAAN,GAAYN,GAAG,GAAGI,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGuC,GAAN,GAAYD,GAAG,GAAGjC,GAAtB,CAA7E;AACA9E,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAE4E,GAAG,IAAIE,GAAG,GAAGmC,GAAN,GAAYD,GAAG,GAAGhC,GAAtB,CAAH,GAAgCH,GAAG,IAAIJ,GAAG,GAAGwC,GAAN,GAAYF,GAAG,GAAG/B,GAAtB,CAAnC,GAAgED,GAAG,IAAIN,GAAG,GAAGuC,GAAN,GAAYD,GAAG,GAAGjC,GAAtB,CAArE,CAAV;AACA9E,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAE6E,GAAG,IAAIG,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAAtB,CAAH,GAAgCpC,GAAG,IAAID,GAAG,GAAGsC,GAAN,GAAYzC,GAAG,GAAGwC,GAAtB,CAAnC,GAAgED,GAAG,IAAIpC,GAAG,GAAGG,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAArE,CAAV;AACAhF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4E,GAAG,IAAII,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAAtB,CAAH,GAAgCpC,GAAG,IAAIN,GAAG,GAAG2C,GAAN,GAAY1C,GAAG,GAAGyC,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGQ,GAAN,GAAYP,GAAG,GAAGM,GAAtB,CAA7E;AACAhF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAE4E,GAAG,IAAIE,GAAG,GAAGsC,GAAN,GAAYzC,GAAG,GAAGwC,GAAtB,CAAH,GAAgCtC,GAAG,IAAIJ,GAAG,GAAG2C,GAAN,GAAY1C,GAAG,GAAGyC,GAAtB,CAAnC,GAAgED,GAAG,IAAIzC,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAAtB,CAArE,CAAV;AACA9E,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4E,GAAG,IAAIE,GAAG,GAAGG,GAAN,GAAYN,GAAG,GAAGK,GAAtB,CAAH,GAAgCH,GAAG,IAAIJ,GAAG,GAAGQ,GAAN,GAAYP,GAAG,GAAGM,GAAtB,CAAnC,GAAgED,GAAG,IAAIN,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAAtB,CAA7E;AACA,SAAO9E,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmB,WAAT,CAAqBzB,CAArB,EAAwB;AAC7B,MAAIkF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIwH,GAAG,GAAGxH,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyH,GAAG,GAAGzH,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0H,GAAG,GAAG1H,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2H,GAAG,GAAG3H,CAAC,CAAC,EAAD,CAHX;AAKA,MAAI2F,GAAG,GAAGT,GAAG,GAAGE,GAAN,GAAYL,GAAG,GAAGI,GAA5B;AACA,MAAIK,GAAG,GAAGN,GAAG,GAAGD,GAAN,GAAYD,GAAG,GAAGG,GAA5B;AACA,MAAIS,GAAG,GAAGV,GAAG,GAAGoC,GAAN,GAAYD,GAAG,GAAGlC,GAA5B;AACA,MAAIyC,GAAG,GAAG7C,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGI,GAA5B;AACA,MAAIyC,GAAG,GAAG9C,GAAG,GAAGuC,GAAN,GAAYD,GAAG,GAAGjC,GAA5B;AACA,MAAI0C,GAAG,GAAG9C,GAAG,GAAGsC,GAAN,GAAYD,GAAG,GAAGpC,GAA5B;AACA,MAAI8C,GAAG,GAAG1C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAIQ,GAAG,GAAG3C,GAAG,GAAGqC,GAAN,GAAYnC,GAAG,GAAGiC,GAA5B;AACA,MAAIS,GAAG,GAAG5C,GAAG,GAAGsC,GAAN,GAAYJ,GAAG,GAAGC,GAA5B;AACA,MAAIU,GAAG,GAAG5C,GAAG,GAAGoC,GAAN,GAAYnC,GAAG,GAAGkC,GAA5B;AACA,MAAI5B,GAAG,GAAGP,GAAG,GAAGqC,GAAN,GAAYJ,GAAG,GAAGE,GAA5B;AACA,MAAIhC,GAAG,GAAGF,GAAG,GAAGoC,GAAN,GAAYJ,GAAG,GAAGG,GAA5B,CA7B6B,CA+B7B;;AACA,SAAO/B,GAAG,GAAGF,GAAN,GAAYD,GAAG,GAAGK,GAAlB,GAAwBD,GAAG,GAAGsC,GAA9B,GAAoCN,GAAG,GAAGK,GAA1C,GAAgDJ,GAAG,GAAGG,GAAtD,GAA4DF,GAAG,GAAGC,GAAzE;AACD;AAED;;;;;;;;;;AAQO,SAASrG,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAIgF,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AAAA,MACI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CADX;AAAA,MAEIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAHX;AAIA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIwH,GAAG,GAAGxH,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyH,GAAG,GAAGzH,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0H,GAAG,GAAG1H,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2H,GAAG,GAAG3H,CAAC,CAAC,EAAD,CAHX,CAbkC,CAkBlC;;AACA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAIAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGuD,GAAL,GAAWtD,EAAE,GAAGuD,GAAhB,GAAsBtD,EAAE,GAAGwD,GAA3B,GAAiCvD,EAAE,GAAG0F,GAA/C;AACAlH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGoD,GAAL,GAAWnD,EAAE,GAAGwD,GAAhB,GAAsBvD,EAAE,GAAGyD,GAA3B,GAAiCxD,EAAE,GAAG2F,GAA/C;AACAnH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGqD,GAAL,GAAWpD,EAAE,GAAGqD,GAAhB,GAAsBpD,EAAE,GAAG0D,GAA3B,GAAiCzD,EAAE,GAAG4F,GAA/C;AACApH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAG0F,GAAL,GAAWzF,EAAE,GAAG0F,GAAhB,GAAsBzF,EAAE,GAAG0F,GAA3B,GAAiCzF,EAAE,GAAG6F,GAA/C;AAEAhG,EAAAA,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAN;AAAU0B,EAAAA,EAAE,GAAG1B,CAAC,CAAC,CAAD,CAAN;AAAU2B,EAAAA,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAAN;AAAU4B,EAAAA,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAAN;AAC9BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGuD,GAAL,GAAWtD,EAAE,GAAGuD,GAAhB,GAAsBtD,EAAE,GAAGwD,GAA3B,GAAiCvD,EAAE,GAAG0F,GAA/C;AACAlH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGoD,GAAL,GAAWnD,EAAE,GAAGwD,GAAhB,GAAsBvD,EAAE,GAAGyD,GAA3B,GAAiCxD,EAAE,GAAG2F,GAA/C;AACAnH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGqD,GAAL,GAAWpD,EAAE,GAAGqD,GAAhB,GAAsBpD,EAAE,GAAG0D,GAA3B,GAAiCzD,EAAE,GAAG4F,GAA/C;AACApH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAG0F,GAAL,GAAWzF,EAAE,GAAG0F,GAAhB,GAAsBzF,EAAE,GAAG0F,GAA3B,GAAiCzF,EAAE,GAAG6F,GAA/C;AAEAhG,EAAAA,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAN;AAAU0B,EAAAA,EAAE,GAAG1B,CAAC,CAAC,CAAD,CAAN;AAAU2B,EAAAA,EAAE,GAAG3B,CAAC,CAAC,EAAD,CAAN;AAAW4B,EAAAA,EAAE,GAAG5B,CAAC,CAAC,EAAD,CAAN;AAC/BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGuD,GAAL,GAAWtD,EAAE,GAAGuD,GAAhB,GAAsBtD,EAAE,GAAGwD,GAA3B,GAAiCvD,EAAE,GAAG0F,GAA/C;AACAlH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqB,EAAE,GAAGoD,GAAL,GAAWnD,EAAE,GAAGwD,GAAhB,GAAsBvD,EAAE,GAAGyD,GAA3B,GAAiCxD,EAAE,GAAG2F,GAA/C;AACAnH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAGqD,GAAL,GAAWpD,EAAE,GAAGqD,GAAhB,GAAsBpD,EAAE,GAAG0D,GAA3B,GAAiCzD,EAAE,GAAG4F,GAAhD;AACApH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAG0F,GAAL,GAAWzF,EAAE,GAAG0F,GAAhB,GAAsBzF,EAAE,GAAG0F,GAA3B,GAAiCzF,EAAE,GAAG6F,GAAhD;AAEAhG,EAAAA,EAAE,GAAGzB,CAAC,CAAC,EAAD,CAAN;AAAW0B,EAAAA,EAAE,GAAG1B,CAAC,CAAC,EAAD,CAAN;AAAW2B,EAAAA,EAAE,GAAG3B,CAAC,CAAC,EAAD,CAAN;AAAW4B,EAAAA,EAAE,GAAG5B,CAAC,CAAC,EAAD,CAAN;AACjCI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAGuD,GAAL,GAAWtD,EAAE,GAAGuD,GAAhB,GAAsBtD,EAAE,GAAGwD,GAA3B,GAAiCvD,EAAE,GAAG0F,GAAhD;AACAlH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAGoD,GAAL,GAAWnD,EAAE,GAAGwD,GAAhB,GAAsBvD,EAAE,GAAGyD,GAA3B,GAAiCxD,EAAE,GAAG2F,GAAhD;AACAnH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAGqD,GAAL,GAAWpD,EAAE,GAAGqD,GAAhB,GAAsBpD,EAAE,GAAG0D,GAA3B,GAAiCzD,EAAE,GAAG4F,GAAhD;AACApH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUqB,EAAE,GAAG0F,GAAL,GAAWzF,EAAE,GAAG0F,GAAhB,GAAsBzF,EAAE,GAAG0F,GAA3B,GAAiCzF,EAAE,GAAG6F,GAAhD;AACA,SAAOrH,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiE,SAAT,CAAmBjE,GAAnB,EAAwBN,CAAxB,EAA2BsC,CAA3B,EAA8B;AACnC,MAAI2D,CAAC,GAAG3D,CAAC,CAAC,CAAD,CAAT;AAAA,MACI4D,CAAC,GAAG5D,CAAC,CAAC,CAAD,CADT;AAAA,MAEIgE,CAAC,GAAGhE,CAAC,CAAC,CAAD,CAFT;AAGA,MAAI4C,GAAG,GAAG,KAAK,CAAf;AAAA,MACIH,GAAG,GAAG,KAAK,CADf;AAAA,MAEIC,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIqC,GAAG,GAAG,KAAK,CAHf;AAIA,MAAIlC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIC,GAAG,GAAG,KAAK,CADf;AAAA,MAEIH,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIqC,GAAG,GAAG,KAAK,CAHf;AAIA,MAAIjC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIC,GAAG,GAAG,KAAK,CADf;AAAA,MAEIC,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIgC,GAAG,GAAG,KAAK,CAHf;;AAKA,MAAIvH,CAAC,KAAKM,GAAV,EAAe;AACbA,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAP,GAAWjG,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAlB,GAAsBlG,CAAC,CAAC,CAAD,CAAD,GAAOsG,CAA7B,GAAiCtG,CAAC,CAAC,EAAD,CAA5C;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAP,GAAWjG,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAlB,GAAsBlG,CAAC,CAAC,CAAD,CAAD,GAAOsG,CAA7B,GAAiCtG,CAAC,CAAC,EAAD,CAA5C;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAP,GAAWjG,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAlB,GAAsBlG,CAAC,CAAC,EAAD,CAAD,GAAQsG,CAA9B,GAAkCtG,CAAC,CAAC,EAAD,CAA7C;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAP,GAAWjG,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAlB,GAAsBlG,CAAC,CAAC,EAAD,CAAD,GAAQsG,CAA9B,GAAkCtG,CAAC,CAAC,EAAD,CAA7C;AACD,GALD,MAKO;AACLkF,IAAAA,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAP;AAAW+E,IAAAA,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP;AAAWgF,IAAAA,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP;AAAWqH,IAAAA,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAAP;AACjCmF,IAAAA,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAP;AAAWoF,IAAAA,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAAP;AAAWiF,IAAAA,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAAP;AAAWsH,IAAAA,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAAP;AACjCqF,IAAAA,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAP;AAAWsF,IAAAA,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAAP;AAAWuF,IAAAA,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAAP;AAAYuH,IAAAA,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAAP;AAElCM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAT;AAAa5E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAT;AAAazE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAT;AAAa1E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+G,GAAT;AACvC/G,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAT;AAAa7E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAT;AAAa9E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAT;AAAa3E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASgH,GAAT;AACvChH,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+E,GAAT;AAAa/E,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASgF,GAAT;AAAahF,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUiF,GAAV;AAAcjF,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUiH,GAAV;AAExCjH,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4E,GAAG,GAAGe,CAAN,GAAUd,GAAG,GAAGe,CAAhB,GAAoBb,GAAG,GAAGiB,CAA1B,GAA8BtG,CAAC,CAAC,EAAD,CAAzC;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUyE,GAAG,GAAGkB,CAAN,GAAUb,GAAG,GAAGc,CAAhB,GAAoBZ,GAAG,GAAGgB,CAA1B,GAA8BtG,CAAC,CAAC,EAAD,CAAzC;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU0E,GAAG,GAAGiB,CAAN,GAAUhB,GAAG,GAAGiB,CAAhB,GAAoBX,GAAG,GAAGe,CAA1B,GAA8BtG,CAAC,CAAC,EAAD,CAAzC;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU+G,GAAG,GAAGpB,CAAN,GAAUqB,GAAG,GAAGpB,CAAhB,GAAoBqB,GAAG,GAAGjB,CAA1B,GAA8BtG,CAAC,CAAC,EAAD,CAAzC;AACD;;AAED,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBsC,CAAvB,EAA0B;AAC/B,MAAI2D,CAAC,GAAG3D,CAAC,CAAC,CAAD,CAAT;AAAA,MACI4D,CAAC,GAAG5D,CAAC,CAAC,CAAD,CADT;AAAA,MAEIgE,CAAC,GAAGhE,CAAC,CAAC,CAAD,CAFT;AAIAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAhB;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAhB;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAhB;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOiG,CAAhB;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAhB;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAhB;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAhB;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOkG,CAAhB;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOsG,CAAhB;AACAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOsG,CAAhB;AACAhG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQsG,CAAlB;AACAhG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQsG,CAAlB;AACAhG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASyB,MAAT,CAAgBzB,GAAhB,EAAqBN,CAArB,EAAwBgC,GAAxB,EAA6BmH,IAA7B,EAAmC;AACxC,MAAIlD,CAAC,GAAGkD,IAAI,CAAC,CAAD,CAAZ;AAAA,MACIjD,CAAC,GAAGiD,IAAI,CAAC,CAAD,CADZ;AAAA,MAEI7C,CAAC,GAAG6C,IAAI,CAAC,CAAD,CAFZ;AAGA,MAAIC,GAAG,GAAG3J,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA9B,CAAV;AACA,MAAIrE,CAAC,GAAG,KAAK,CAAb;AAAA,MACIE,CAAC,GAAG,KAAK,CADb;AAAA,MAEIkH,CAAC,GAAG,KAAK,CAFb;AAGA,MAAInE,GAAG,GAAG,KAAK,CAAf;AAAA,MACIH,GAAG,GAAG,KAAK,CADf;AAAA,MAEIC,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIqC,GAAG,GAAG,KAAK,CAHf;AAIA,MAAIlC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIC,GAAG,GAAG,KAAK,CADf;AAAA,MAEIH,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIqC,GAAG,GAAG,KAAK,CAHf;AAIA,MAAIjC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIC,GAAG,GAAG,KAAK,CADf;AAAA,MAEIC,GAAG,GAAG,KAAK,CAFf;AAAA,MAGIgC,GAAG,GAAG,KAAK,CAHf;AAIA,MAAI5B,GAAG,GAAG,KAAK,CAAf;AAAA,MACIH,GAAG,GAAG,KAAK,CADf;AAAA,MAEII,GAAG,GAAG,KAAK,CAFf;AAGA,MAAIC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIJ,GAAG,GAAG,KAAK,CADf;AAAA,MAEIK,GAAG,GAAG,KAAK,CAFf;AAGA,MAAIC,GAAG,GAAG,KAAK,CAAf;AAAA,MACIL,GAAG,GAAG,KAAK,CADf;AAAA,MAEIM,GAAG,GAAG,KAAK,CAFf;;AAIA,MAAIoD,GAAG,GAAG7I,QAAQ,CAACnB,OAAnB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAEDgK,EAAAA,GAAG,GAAG,IAAIA,GAAV;AACAnD,EAAAA,CAAC,IAAImD,GAAL;AACAlD,EAAAA,CAAC,IAAIkD,GAAL;AACA9C,EAAAA,CAAC,IAAI8C,GAAL;AAEAnH,EAAAA,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAJ;AACAG,EAAAA,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAJ;AACAqH,EAAAA,CAAC,GAAG,IAAIlH,CAAR;AAEA+C,EAAAA,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAP;AAAW+E,EAAAA,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP;AAAWgF,EAAAA,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP;AAAWqH,EAAAA,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAAP;AACjCmF,EAAAA,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAP;AAAWoF,EAAAA,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAAP;AAAWiF,EAAAA,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAAP;AAAWsH,EAAAA,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAAP;AACjCqF,EAAAA,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAP;AAAWsF,EAAAA,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAAP;AAAWuF,EAAAA,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAAP;AAAYuH,EAAAA,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAAP,CA7CM,CA+CxC;;AACA2F,EAAAA,GAAG,GAAGM,CAAC,GAAGA,CAAJ,GAAQoD,CAAR,GAAYlH,CAAlB;AAAoBqD,EAAAA,GAAG,GAAGU,CAAC,GAAGD,CAAJ,GAAQoD,CAAR,GAAY/C,CAAC,GAAGrE,CAAtB;AAAwB2D,EAAAA,GAAG,GAAGU,CAAC,GAAGL,CAAJ,GAAQoD,CAAR,GAAYnD,CAAC,GAAGjE,CAAtB;AAC5C4D,EAAAA,GAAG,GAAGI,CAAC,GAAGC,CAAJ,GAAQmD,CAAR,GAAY/C,CAAC,GAAGrE,CAAtB;AAAwBwD,EAAAA,GAAG,GAAGS,CAAC,GAAGA,CAAJ,GAAQmD,CAAR,GAAYlH,CAAlB;AAAoB2D,EAAAA,GAAG,GAAGQ,CAAC,GAAGJ,CAAJ,GAAQmD,CAAR,GAAYpD,CAAC,GAAGhE,CAAtB;AAC5C8D,EAAAA,GAAG,GAAGE,CAAC,GAAGK,CAAJ,GAAQ+C,CAAR,GAAYnD,CAAC,GAAGjE,CAAtB;AAAwByD,EAAAA,GAAG,GAAGQ,CAAC,GAAGI,CAAJ,GAAQ+C,CAAR,GAAYpD,CAAC,GAAGhE,CAAtB;AAAwB+D,EAAAA,GAAG,GAAGM,CAAC,GAAGA,CAAJ,GAAQ+C,CAAR,GAAYlH,CAAlB,CAlDR,CAoDxC;;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGS,GAAN,GAAYR,GAAG,GAAGK,GAAlB,GAAwBH,GAAG,GAAGO,GAAvC;AACAtF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAGY,GAAN,GAAYP,GAAG,GAAGI,GAAlB,GAAwBF,GAAG,GAAGM,GAAvC;AACAtF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAGW,GAAN,GAAYV,GAAG,GAAGO,GAAlB,GAAwBD,GAAG,GAAGK,GAAvC;AACAtF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+G,GAAG,GAAG1B,GAAN,GAAY2B,GAAG,GAAG9B,GAAlB,GAAwB+B,GAAG,GAAG3B,GAAvC;AACAtF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGW,GAAN,GAAYV,GAAG,GAAGM,GAAlB,GAAwBJ,GAAG,GAAGS,GAAvC;AACAxF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAGc,GAAN,GAAYT,GAAG,GAAGK,GAAlB,GAAwBH,GAAG,GAAGQ,GAAvC;AACAxF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAGa,GAAN,GAAYZ,GAAG,GAAGQ,GAAlB,GAAwBF,GAAG,GAAGO,GAAvC;AACAxF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+G,GAAG,GAAGxB,GAAN,GAAYyB,GAAG,GAAG7B,GAAlB,GAAwB8B,GAAG,GAAGzB,GAAvC;AACAxF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGa,GAAN,GAAYZ,GAAG,GAAGO,GAAlB,GAAwBL,GAAG,GAAGW,GAAvC;AACA1F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAGgB,GAAN,GAAYX,GAAG,GAAGM,GAAlB,GAAwBJ,GAAG,GAAGU,GAAvC;AACA1F,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU0E,GAAG,GAAGe,GAAN,GAAYd,GAAG,GAAGS,GAAlB,GAAwBH,GAAG,GAAGS,GAAxC;AACA1F,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU+G,GAAG,GAAGtB,GAAN,GAAYuB,GAAG,GAAG5B,GAAlB,GAAwB6B,GAAG,GAAGvB,GAAxC;;AAEA,MAAIhG,CAAC,KAAKM,GAAV,EAAe;AACb;AACAA,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACD;;AACD,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgJ,OAAT,CAAiBhJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA,MAAImD,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAAX;AACA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAAX;AACA,MAAIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAAX;;AAEA,MAAIA,CAAC,KAAKM,GAAV,EAAe;AACb;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACD,GAtBkC,CAwBnC;;;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAG,GAAGhD,CAAN,GAAUkD,GAAG,GAAGpD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAG,GAAGjD,CAAN,GAAUmD,GAAG,GAAGrD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAG,GAAG9C,CAAN,GAAUoD,GAAG,GAAGtD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgH,GAAG,GAAGnF,CAAN,GAAUoF,GAAG,GAAGtF,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+E,GAAG,GAAGlD,CAAN,GAAUgD,GAAG,GAAGlD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgF,GAAG,GAAGnD,CAAN,GAAUiD,GAAG,GAAGnD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUiF,GAAG,GAAGpD,CAAN,GAAU8C,GAAG,GAAGhD,CAA1B;AACA3B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUiH,GAAG,GAAGpF,CAAN,GAAUmF,GAAG,GAAGrF,CAA1B;AACA,SAAO3B,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiJ,OAAT,CAAiBjJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA,MAAIkD,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AACA,MAAI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAX;AACA,MAAIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAAX;AACA,MAAIqF,GAAG,GAAGrF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIsF,GAAG,GAAGtF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAAX;AACA,MAAIuH,GAAG,GAAGvH,CAAC,CAAC,EAAD,CAAX;;AAEA,MAAIA,CAAC,KAAKM,GAAV,EAAe;AACb;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACD,GAtBkC,CAwBnC;;;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAG/C,CAAN,GAAUkD,GAAG,GAAGpD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAG5C,CAAN,GAAUmD,GAAG,GAAGrD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAG7C,CAAN,GAAUoD,GAAG,GAAGtD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+G,GAAG,GAAGlF,CAAN,GAAUoF,GAAG,GAAGtF,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAGjD,CAAN,GAAUoD,GAAG,GAAGlD,CAAzB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAG9C,CAAN,GAAUqD,GAAG,GAAGnD,CAAzB;AACA7B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU0E,GAAG,GAAG/C,CAAN,GAAUsD,GAAG,GAAGpD,CAA1B;AACA7B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU+G,GAAG,GAAGpF,CAAN,GAAUsF,GAAG,GAAGpF,CAA1B;AACA,SAAO7B,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASkJ,OAAT,CAAiBlJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR;AACA,MAAIkD,GAAG,GAAGlF,CAAC,CAAC,CAAD,CAAX;AACA,MAAI+E,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAX;AACA,MAAIgF,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIqH,GAAG,GAAGrH,CAAC,CAAC,CAAD,CAAX;AACA,MAAImF,GAAG,GAAGnF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIoF,GAAG,GAAGpF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIiF,GAAG,GAAGjF,CAAC,CAAC,CAAD,CAAX;AACA,MAAIsH,GAAG,GAAGtH,CAAC,CAAC,CAAD,CAAX;;AAEA,MAAIA,CAAC,KAAKM,GAAV,EAAe;AACb;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACAM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAX;AACD,GAtBkC,CAwBnC;;;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4E,GAAG,GAAG/C,CAAN,GAAUgD,GAAG,GAAGlD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyE,GAAG,GAAG5C,CAAN,GAAUiD,GAAG,GAAGnD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0E,GAAG,GAAG7C,CAAN,GAAU8C,GAAG,GAAGhD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+G,GAAG,GAAGlF,CAAN,GAAUmF,GAAG,GAAGrF,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6E,GAAG,GAAGhD,CAAN,GAAU+C,GAAG,GAAGjD,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8E,GAAG,GAAGjD,CAAN,GAAU4C,GAAG,GAAG9C,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2E,GAAG,GAAG9C,CAAN,GAAU6C,GAAG,GAAG/C,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgH,GAAG,GAAGnF,CAAN,GAAUkF,GAAG,GAAGpF,CAAzB;AACA,SAAO3B,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASkE,eAAT,CAAyBlE,GAAzB,EAA8BgC,CAA9B,EAAiC;AACtChgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASoC,WAAT,CAAqBpC,GAArB,EAA0BgC,CAA1B,EAA6B;AAClChC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgC,CAAC,CAAC,CAAD,CAAV;AACAhC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;AAYO,SAASmC,YAAT,CAAsBnC,GAAtB,EAA2B0B,GAA3B,EAAgCmH,IAAhC,EAAsC;AAC3C,MAAIlD,CAAC,GAAGkD,IAAI,CAAC,CAAD,CAAZ;AAAA,MACIjD,CAAC,GAAGiD,IAAI,CAAC,CAAD,CADZ;AAAA,MAEI7C,CAAC,GAAG6C,IAAI,CAAC,CAAD,CAFZ;AAGA,MAAIC,GAAG,GAAG3J,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA9B,CAAV;AACA,MAAIrE,CAAC,GAAG,KAAK,CAAb;AAAA,MACIE,CAAC,GAAG,KAAK,CADb;AAAA,MAEIkH,CAAC,GAAG,KAAK,CAFb;;AAIA,MAAID,GAAG,GAAG7I,QAAQ,CAACnB,OAAnB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAEDgK,EAAAA,GAAG,GAAG,IAAIA,GAAV;AACAnD,EAAAA,CAAC,IAAImD,GAAL;AACAlD,EAAAA,CAAC,IAAIkD,GAAL;AACA9C,EAAAA,CAAC,IAAI8C,GAAL;AAEAnH,EAAAA,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAJ;AACAG,EAAAA,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAJ;AACAqH,EAAAA,CAAC,GAAG,IAAIlH,CAAR,CApB2C,CAsB3C;;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGA,CAAJ,GAAQoD,CAAR,GAAYlH,CAArB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGD,CAAJ,GAAQoD,CAAR,GAAY/C,CAAC,GAAGrE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAC,GAAGL,CAAJ,GAAQoD,CAAR,GAAYnD,CAAC,GAAGjE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGC,CAAJ,GAAQmD,CAAR,GAAY/C,CAAC,GAAGrE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGA,CAAJ,GAAQmD,CAAR,GAAYlH,CAArB;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAC,GAAGJ,CAAJ,GAAQmD,CAAR,GAAYpD,CAAC,GAAGhE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGK,CAAJ,GAAQ+C,CAAR,GAAYnD,CAAC,GAAGjE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGI,CAAJ,GAAQ+C,CAAR,GAAYpD,CAAC,GAAGhE,CAAzB;AACA3B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgG,CAAC,GAAGA,CAAJ,GAAQ+C,CAAR,GAAYlH,CAAtB;AACA7B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASmJ,aAAT,CAAuBnJ,GAAvB,EAA4B0B,GAA5B,EAAiC;AACtC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR,CAFsC,CAItC;;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU6B,CAAV;AACA7B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASoJ,aAAT,CAAuBpJ,GAAvB,EAA4B0B,GAA5B,EAAiC;AACtC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR,CAFsC,CAItC;;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU6B,CAAV;AACA7B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASqJ,aAAT,CAAuBrJ,GAAvB,EAA4B0B,GAA5B,EAAiC;AACtC,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIG,CAAC,GAAG1C,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAR,CAFsC,CAItC;;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAT;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC2B,CAAV;AACA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6B,CAAT;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;AAeO,SAASsJ,uBAAT,CAAiCtJ,GAAjC,EAAsC+F,CAAtC,EAAyC/D,CAAzC,EAA4C;AACjD;AACA,MAAI2D,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAT;AAAA,MACIH,CAAC,GAAGG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAHT;AAIA,MAAIG,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGJ,CAAC,GAAGA,CAAb;AAEA,MAAIK,EAAE,GAAGV,CAAC,GAAGO,EAAb;AACA,MAAIqD,EAAE,GAAG5D,CAAC,GAAGQ,EAAb;AACA,MAAIqD,EAAE,GAAG7D,CAAC,GAAGS,EAAb;AACA,MAAIG,EAAE,GAAGX,CAAC,GAAGO,EAAb;AACA,MAAIsD,EAAE,GAAG7D,CAAC,GAAGQ,EAAb;AACA,MAAIM,EAAE,GAAGV,CAAC,GAAGI,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGC,EAAb;AACA,MAAIU,EAAE,GAAGX,CAAC,GAAGE,EAAb;AACA,MAAIU,EAAE,GAAGZ,CAAC,GAAGG,EAAb;AAEApG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKuG,EAAE,GAAGG,EAAV,CAAT;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuJ,EAAE,GAAG1C,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwJ,EAAE,GAAG5C,EAAd;AACA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuJ,EAAE,GAAG1C,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKqG,EAAE,GAAGK,EAAV,CAAT;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyJ,EAAE,GAAG9C,EAAd;AACA3G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwJ,EAAE,GAAG5C,EAAd;AACA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyJ,EAAE,GAAG9C,EAAd;AACA3G,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,KAAKqG,EAAE,GAAGE,EAAV,CAAV;AACAvG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS0J,SAAT,CAAmB1J,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC,MAAIiK,WAAW,GAAG,IAAI1J,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAlB;AACA,MAAI6K,EAAE,GAAG,CAAClK,CAAC,CAAC,CAAD,CAAX;AAAA,MACImK,EAAE,GAAG,CAACnK,CAAC,CAAC,CAAD,CADX;AAAA,MAEIoK,EAAE,GAAG,CAACpK,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIsK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAPV;AASA,MAAI0K,SAAS,GAAGR,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBC,EAAE,GAAGA,EAAzB,GAA8BC,EAAE,GAAGA,EAAnD,CAXgC,CAYhC;;AACA,MAAIK,SAAS,GAAG,CAAhB,EAAmB;AACjBT,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAA1C,GAA8CO,SAA/D;AACAT,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACM,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAApC,IAA0C,CAA1C,GAA8CM,SAA/D;AACAT,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACO,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAA1C,GAA8CQ,SAA/D;AACD,GAJD,MAIO;AACLT,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAA3D;AACAF,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACM,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAApC,IAA0C,CAA3D;AACAH,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACO,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAA3D;AACD;;AACDN,EAAAA,uBAAuB,CAACtJ,GAAD,EAAMN,CAAN,EAASiK,WAAT,CAAvB;AACA,SAAO3J,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASqK,cAAT,CAAwBrK,GAAxB,EAA6BsK,GAA7B,EAAkC;AACvCtK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsK,GAAG,CAAC,EAAD,CAAZ;AACAtK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsK,GAAG,CAAC,EAAD,CAAZ;AACAtK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsK,GAAG,CAAC,EAAD,CAAZ;AAEA,SAAOtK,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAASuK,UAAT,CAAoBvK,GAApB,EAAyBsK,GAAzB,EAA8B;AACnC,MAAI7J,GAAG,GAAG6J,GAAG,CAAC,CAAD,CAAb;AACA,MAAIjG,GAAG,GAAGiG,GAAG,CAAC,CAAD,CAAb;AACA,MAAI/B,GAAG,GAAG+B,GAAG,CAAC,CAAD,CAAb;AACA,MAAI/F,GAAG,GAAG+F,GAAG,CAAC,CAAD,CAAb;AACA,MAAI9F,GAAG,GAAG8F,GAAG,CAAC,CAAD,CAAb;AACA,MAAI9B,GAAG,GAAG8B,GAAG,CAAC,CAAD,CAAb;AACA,MAAI5B,GAAG,GAAG4B,GAAG,CAAC,CAAD,CAAb;AACA,MAAI3B,GAAG,GAAG2B,GAAG,CAAC,CAAD,CAAb;AACA,MAAI1B,GAAG,GAAG0B,GAAG,CAAC,EAAD,CAAb;AAEAtK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACoD,IAAL,CAAU9B,GAAG,GAAGA,GAAN,GAAY4D,GAAG,GAAGA,GAAlB,GAAwBkE,GAAG,GAAGA,GAAxC,CAAT;AACAvI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACoD,IAAL,CAAUgC,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAAlB,GAAwBgE,GAAG,GAAGA,GAAxC,CAAT;AACAxI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACoD,IAAL,CAAUmG,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAAlB,GAAwBC,GAAG,GAAGA,GAAxC,CAAT;AAEA,SAAO5I,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASwK,WAAT,CAAqBxK,GAArB,EAA0BsK,GAA1B,EAA+B;AACpC;AACA,MAAIG,KAAK,GAAGH,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,EAAD,CAAjC;AACA,MAAII,CAAC,GAAG,CAAR;;AAEA,MAAID,KAAK,GAAG,CAAZ,EAAe;AACbC,IAAAA,CAAC,GAAGvL,IAAI,CAACoD,IAAL,CAAUkI,KAAK,GAAG,GAAlB,IAAyB,CAA7B;AACAzK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,OAAO0K,CAAhB;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACD,GAND,MAMO,IAAIJ,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,IAAmBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,EAAD,CAAnC,EAAyC;AAC9CI,IAAAA,CAAC,GAAGvL,IAAI,CAACoD,IAAL,CAAU,MAAM+H,GAAG,CAAC,CAAD,CAAT,GAAeA,GAAG,CAAC,CAAD,CAAlB,GAAwBA,GAAG,CAAC,EAAD,CAArC,IAA6C,CAAjD;AACAtK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,OAAO0K,CAAhB;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACD,GANM,MAMA,IAAIJ,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,EAAD,CAAhB,EAAsB;AAC3BI,IAAAA,CAAC,GAAGvL,IAAI,CAACoD,IAAL,CAAU,MAAM+H,GAAG,CAAC,CAAD,CAAT,GAAeA,GAAG,CAAC,CAAD,CAAlB,GAAwBA,GAAG,CAAC,EAAD,CAArC,IAA6C,CAAjD;AACAtK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,OAAO0K,CAAhB;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACD,GANM,MAMA;AACLA,IAAAA,CAAC,GAAGvL,IAAI,CAACoD,IAAL,CAAU,MAAM+H,GAAG,CAAC,EAAD,CAAT,GAAgBA,GAAG,CAAC,CAAD,CAAnB,GAAyBA,GAAG,CAAC,CAAD,CAAtC,IAA6C,CAAjD;AACAtK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsK,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBI,CAA7B;AACA1K,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,OAAO0K,CAAhB;AACD;;AAED,SAAO1K,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;AAiBO,SAAS2K,4BAAT,CAAsC3K,GAAtC,EAA2C+F,CAA3C,EAA8C/D,CAA9C,EAAiDL,CAAjD,EAAoD;AACzD;AACA,MAAIgE,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAT;AAAA,MACIH,CAAC,GAAGG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAHT;AAIA,MAAIG,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGJ,CAAC,GAAGA,CAAb;AAEA,MAAIK,EAAE,GAAGV,CAAC,GAAGO,EAAb;AACA,MAAIqD,EAAE,GAAG5D,CAAC,GAAGQ,EAAb;AACA,MAAIqD,EAAE,GAAG7D,CAAC,GAAGS,EAAb;AACA,MAAIG,EAAE,GAAGX,CAAC,GAAGO,EAAb;AACA,MAAIsD,EAAE,GAAG7D,CAAC,GAAGQ,EAAb;AACA,MAAIM,EAAE,GAAGV,CAAC,GAAGI,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGC,EAAb;AACA,MAAIU,EAAE,GAAGX,CAAC,GAAGE,EAAb;AACA,MAAIU,EAAE,GAAGZ,CAAC,GAAGG,EAAb;AACA,MAAIwE,EAAE,GAAGjJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAIkJ,EAAE,GAAGlJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAImJ,EAAE,GAAGnJ,CAAC,CAAC,CAAD,CAAV;AAEA3B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,KAAKuG,EAAE,GAAGG,EAAV,CAAD,IAAkBkE,EAA3B;AACA5K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACuJ,EAAE,GAAG1C,EAAN,IAAY+D,EAArB;AACA5K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACwJ,EAAE,GAAG5C,EAAN,IAAYgE,EAArB;AACA5K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACuJ,EAAE,GAAG1C,EAAN,IAAYgE,EAArB;AACA7K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,KAAKqG,EAAE,GAAGK,EAAV,CAAD,IAAkBmE,EAA3B;AACA7K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyJ,EAAE,GAAG9C,EAAN,IAAYkE,EAArB;AACA7K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACwJ,EAAE,GAAG5C,EAAN,IAAYkE,EAArB;AACA9K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACyJ,EAAE,GAAG9C,EAAN,IAAYmE,EAArB;AACA9K,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC,KAAKqG,EAAE,GAAGE,EAAV,CAAD,IAAkBuE,EAA5B;AACA9K,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAX;AACAhC,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;AAoBO,SAAS+K,kCAAT,CAA4C/K,GAA5C,EAAiD+F,CAAjD,EAAoD/D,CAApD,EAAuDL,CAAvD,EAA0DqJ,CAA1D,EAA6D;AAClE;AACA,MAAIrF,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAT;AAAA,MACIH,CAAC,GAAGG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAHT;AAIA,MAAIG,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGJ,CAAC,GAAGA,CAAb;AAEA,MAAIK,EAAE,GAAGV,CAAC,GAAGO,EAAb;AACA,MAAIqD,EAAE,GAAG5D,CAAC,GAAGQ,EAAb;AACA,MAAIqD,EAAE,GAAG7D,CAAC,GAAGS,EAAb;AACA,MAAIG,EAAE,GAAGX,CAAC,GAAGO,EAAb;AACA,MAAIsD,EAAE,GAAG7D,CAAC,GAAGQ,EAAb;AACA,MAAIM,EAAE,GAAGV,CAAC,GAAGI,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGC,EAAb;AACA,MAAIU,EAAE,GAAGX,CAAC,GAAGE,EAAb;AACA,MAAIU,EAAE,GAAGZ,CAAC,GAAGG,EAAb;AAEA,MAAIwE,EAAE,GAAGjJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAIkJ,EAAE,GAAGlJ,CAAC,CAAC,CAAD,CAAV;AACA,MAAImJ,EAAE,GAAGnJ,CAAC,CAAC,CAAD,CAAV;AAEA,MAAIsJ,EAAE,GAAGD,CAAC,CAAC,CAAD,CAAV;AACA,MAAIE,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV;AAEA,MAAII,IAAI,GAAG,CAAC,KAAK7E,EAAE,GAAGG,EAAV,CAAD,IAAkBkE,EAA7B;AACA,MAAIS,IAAI,GAAG,CAAC9B,EAAE,GAAG1C,EAAN,IAAY+D,EAAvB;AACA,MAAIU,IAAI,GAAG,CAAC9B,EAAE,GAAG5C,EAAN,IAAYgE,EAAvB;AACA,MAAIW,IAAI,GAAG,CAAChC,EAAE,GAAG1C,EAAN,IAAYgE,EAAvB;AACA,MAAIW,IAAI,GAAG,CAAC,KAAKnF,EAAE,GAAGK,EAAV,CAAD,IAAkBmE,EAA7B;AACA,MAAIY,IAAI,GAAG,CAAChC,EAAE,GAAG9C,EAAN,IAAYkE,EAAvB;AACA,MAAIa,IAAI,GAAG,CAAClC,EAAE,GAAG5C,EAAN,IAAYkE,EAAvB;AACA,MAAIa,IAAI,GAAG,CAAClC,EAAE,GAAG9C,EAAN,IAAYmE,EAAvB;AACA,MAAIc,KAAK,GAAG,CAAC,KAAKvF,EAAE,GAAGE,EAAV,CAAD,IAAkBuE,EAA9B;AAEA9K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoL,IAAT;AACApL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqL,IAAT;AACArL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsL,IAAT;AACAtL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuL,IAAT;AACAvL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwL,IAAT;AACAxL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyL,IAAT;AACAzL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0L,IAAT;AACA1L,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2L,IAAT;AACA3L,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU4L,KAAV;AACA5L,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAD,GAAOiJ,EAAP,IAAaG,IAAI,GAAGH,EAAP,GAAYM,IAAI,GAAGL,EAAnB,GAAwBQ,IAAI,GAAGP,EAA5C,CAAV;AACAnL,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAD,GAAOkJ,EAAP,IAAaG,IAAI,GAAGJ,EAAP,GAAYO,IAAI,GAAGN,EAAnB,GAAwBS,IAAI,GAAGR,EAA5C,CAAV;AACAnL,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUgC,CAAC,CAAC,CAAD,CAAD,GAAOmJ,EAAP,IAAaG,IAAI,GAAGL,EAAP,GAAYQ,IAAI,GAAGP,EAAnB,GAAwBU,KAAK,GAAGT,EAA7C,CAAV;AACAnL,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8F,QAAT,CAAkB9F,GAAlB,EAAuB+F,CAAvB,EAA0B;AAC/B,MAAIJ,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAT;AAAA,MACIH,CAAC,GAAGG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAHT;AAIA,MAAIG,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGP,CAAC,GAAGA,CAAb;AACA,MAAIQ,EAAE,GAAGJ,CAAC,GAAGA,CAAb;AAEA,MAAIK,EAAE,GAAGV,CAAC,GAAGO,EAAb;AACA,MAAII,EAAE,GAAGV,CAAC,GAAGM,EAAb;AACA,MAAIK,EAAE,GAAGX,CAAC,GAAGO,EAAb;AACA,MAAIK,EAAE,GAAGR,CAAC,GAAGE,EAAb;AACA,MAAIO,EAAE,GAAGT,CAAC,GAAGG,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGI,EAAb;AACA,MAAIO,EAAE,GAAGV,CAAC,GAAGC,EAAb;AACA,MAAIU,EAAE,GAAGX,CAAC,GAAGE,EAAb;AACA,MAAIU,EAAE,GAAGZ,CAAC,GAAGG,EAAb;AAEApG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIuG,EAAJ,GAASG,EAAlB;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsG,EAAE,GAAGO,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwG,EAAE,GAAGI,EAAd;AACA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsG,EAAE,GAAGO,EAAd;AACA7G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIqG,EAAJ,GAASK,EAAlB;AACA1G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyG,EAAE,GAAGE,EAAd;AACA3G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AAEAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwG,EAAE,GAAGI,EAAd;AACA5G,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyG,EAAE,GAAGE,EAAd;AACA3G,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,IAAIqG,EAAJ,GAASE,EAAnB;AACAvG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;AAYO,SAAS6L,OAAT,CAAiB7L,GAAjB,EAAsB8L,IAAtB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2CC,GAA3C,EAAgDC,IAAhD,EAAsDC,GAAtD,EAA2D;AAChE,MAAIC,EAAE,GAAG,KAAKL,KAAK,GAAGD,IAAb,CAAT;AACA,MAAIO,EAAE,GAAG,KAAKJ,GAAG,GAAGD,MAAX,CAAT;AACA,MAAIM,EAAE,GAAG,KAAKJ,IAAI,GAAGC,GAAZ,CAAT;AACAnM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkM,IAAI,GAAG,CAAP,GAAWE,EAApB;AACApM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkM,IAAI,GAAG,CAAP,GAAWG,EAApB;AACArM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC+L,KAAK,GAAGD,IAAT,IAAiBM,EAA1B;AACApM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACiM,GAAG,GAAGD,MAAP,IAAiBK,EAA1B;AACArM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACmM,GAAG,GAAGD,IAAP,IAAeI,EAAzB;AACAtM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC,CAAX;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUmM,GAAG,GAAGD,IAAN,GAAa,CAAb,GAAiBI,EAA3B;AACAtM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASuM,WAAT,CAAqBvM,GAArB,EAA0BwM,IAA1B,EAAgCC,MAAhC,EAAwCP,IAAxC,EAA8CC,GAA9C,EAAmD;AACxD,MAAIO,CAAC,GAAG,MAAMvN,IAAI,CAACwN,GAAL,CAASH,IAAI,GAAG,CAAhB,CAAd;AAAA,MACIF,EAAE,GAAG,KAAK,CADd;AAEAtM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0M,CAAC,GAAGD,MAAb;AACAzmM,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAKS,QAA3B,EAAqC;AACnCN,IAAAA,EAAE,GAAG,KAAKJ,IAAI,GAAGC,GAAZ,CAAL;AACAnM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACmM,GAAG,GAAGD,IAAP,IAAeI,EAAzB;AACAtM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,IAAImM,GAAJ,GAAUD,IAAV,GAAiBI,EAA3B;AACD,GAJD,MAIO;AACLtM,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC,CAAX;AACAA,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC,CAAD,GAAKkM,IAAf;AACD;;AACD,SAAOlM,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAAS6M,0BAAT,CAAoC7M,GAApC,EAAyC8M,GAAzC,EAA8CZ,IAA9C,EAAoDC,GAApD,EAAyD;AAC9D,MAAIY,KAAK,GAAG5N,IAAI,CAACwN,GAAL,CAASG,GAAG,CAACE,SAAJ,GAAgB7N,IAAI,CAACK,EAArB,GAA0B,KAAnC,CAAZ;AACA,MAAIyN,OAAO,GAAG9N,IAAI,CAACwN,GAAL,CAASG,GAAG,CAACI,WAAJ,GAAkB/N,IAAI,CAACK,EAAvB,GAA4B,KAArC,CAAd;AACA,MAAI2N,OAAO,GAAGhO,IAAI,CAACwN,GAAL,CAASG,GAAG,CAACM,WAAJ,GAAkBjO,IAAI,CAACK,EAAvB,GAA4B,KAArC,CAAd;AACA,MAAI6N,QAAQ,GAAGlO,IAAI,CAACwN,GAAL,CAASG,GAAG,CAACQ,YAAJ,GAAmBnO,IAAI,CAACK,EAAxB,GAA6B,KAAtC,CAAf;AACA,MAAI+N,MAAM,GAAG,OAAOJ,OAAO,GAAGE,QAAjB,CAAb;AACA,MAAIG,MAAM,GAAG,OAAOT,KAAK,GAAGE,OAAf,CAAb;AAEAjN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuN,MAAT;AACAvN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwN,MAAT;AACAxN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAE,CAACmN,OAAO,GAAGE,QAAX,IAAuBE,MAAvB,GAAgC,GAAlC,CAAT;AACAvN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC+M,KAAK,GAAGE,OAAT,IAAoBO,MAApB,GAA6B,GAAtC;AACAxN,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUmM,GAAG,IAAID,IAAI,GAAGC,GAAX,CAAb;AACAnM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC,GAAX;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,GAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,GAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUmM,GAAG,GAAGD,IAAN,IAAcA,IAAI,GAAGC,GAArB,CAAV;AACAnM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,GAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;AAYO,SAASyN,KAAT,CAAezN,GAAf,EAAoB8L,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,GAAzC,EAA8CC,IAA9C,EAAoDC,GAApD,EAAyD;AAC9D,MAAIuB,EAAE,GAAG,KAAK5B,IAAI,GAAGC,KAAZ,CAAT;AACA,MAAI4B,EAAE,GAAG,KAAK3B,MAAM,GAAGC,GAAd,CAAT;AACA,MAAIK,EAAE,GAAG,KAAKJ,IAAI,GAAGC,GAAZ,CAAT;AACAnM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAAD,GAAK0N,EAAd;AACA1N,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAAD,GAAK2N,EAAd;AACA3N,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,IAAIsM,EAAd;AACAtM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAC8L,IAAI,GAAGC,KAAR,IAAiB2B,EAA3B;AACA1N,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACiM,GAAG,GAAGD,MAAP,IAAiB2B,EAA3B;AACA3N,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAACmM,GAAG,GAAGD,IAAP,IAAeI,EAAzB;AACAtM,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAAS4N,MAAT,CAAgB5N,GAAhB,EAAqB6N,GAArB,EAA0BC,MAA1B,EAAkCC,EAAlC,EAAsC;AAC3C,MAAIC,EAAE,GAAG,KAAK,CAAd;AAAA,MACIC,EAAE,GAAG,KAAK,CADd;AAAA,MAEI/H,EAAE,GAAG,KAAK,CAFd;AAAA,MAGIgI,EAAE,GAAG,KAAK,CAHd;AAAA,MAIIC,EAAE,GAAG,KAAK,CAJd;AAAA,MAKIhI,EAAE,GAAG,KAAK,CALd;AAAA,MAMIiI,EAAE,GAAG,KAAK,CANd;AAAA,MAOIC,EAAE,GAAG,KAAK,CAPd;AAAA,MAQIjI,EAAE,GAAG,KAAK,CARd;AAAA,MASI0C,GAAG,GAAG,KAAK,CATf;AAUA,MAAIwF,IAAI,GAAGT,GAAG,CAAC,CAAD,CAAd;AACA,MAAIU,IAAI,GAAGV,GAAG,CAAC,CAAD,CAAd;AACA,MAAIW,IAAI,GAAGX,GAAG,CAAC,CAAD,CAAd;AACA,MAAIY,GAAG,GAAGV,EAAE,CAAC,CAAD,CAAZ;AACA,MAAIW,GAAG,GAAGX,EAAE,CAAC,CAAD,CAAZ;AACA,MAAIY,GAAG,GAAGZ,EAAE,CAAC,CAAD,CAAZ;AACA,MAAIa,OAAO,GAAGd,MAAM,CAAC,CAAD,CAApB;AACA,MAAIe,OAAO,GAAGf,MAAM,CAAC,CAAD,CAApB;AACA,MAAIgB,OAAO,GAAGhB,MAAM,CAAC,CAAD,CAApB;;AAEA,MAAI3O,IAAI,CAACU,GAAL,CAASyO,IAAI,GAAGM,OAAhB,IAA2B3O,QAAQ,CAACnB,OAApC,IAA+CK,IAAI,CAACU,GAAL,CAAS0O,IAAI,GAAGM,OAAhB,IAA2B5O,QAAQ,CAACnB,OAAnF,IAA8FK,IAAI,CAACU,GAAL,CAAS2O,IAAI,GAAGM,OAAhB,IAA2B7O,QAAQ,CAACnB,OAAtI,EAA+I;AAC7I,WAAOsB,QAAQ,CAACJ,GAAD,CAAf;AACD;;AAEDoO,EAAAA,EAAE,GAAGE,IAAI,GAAGM,OAAZ;AACAP,EAAAA,EAAE,GAAGE,IAAI,GAAGM,OAAZ;AACAzI,EAAAA,EAAE,GAAGoI,IAAI,GAAGM,OAAZ;AAEAhG,EAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAU6L,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBjI,EAAE,GAAGA,EAAnC,CAAV;AACAgI,EAAAA,EAAE,IAAItF,GAAN;AACAuF,EAAAA,EAAE,IAAIvF,GAAN;AACA1C,EAAAA,EAAE,IAAI0C,GAAN;AAEAkF,EAAAA,EAAE,GAAGU,GAAG,GAAGtI,EAAN,GAAWuI,GAAG,GAAGN,EAAtB;AACAJ,EAAAA,EAAE,GAAGU,GAAG,GAAGP,EAAN,GAAWK,GAAG,GAAGrI,EAAtB;AACAF,EAAAA,EAAE,GAAGuI,GAAG,GAAGJ,EAAN,GAAWK,GAAG,GAAGN,EAAtB;AACAtF,EAAAA,GAAG,GAAG3J,IAAI,CAACoD,IAAL,CAAUyL,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoB/H,EAAE,GAAGA,EAAnC,CAAN;;AACA,MAAI,CAAC4C,GAAL,EAAU;AACRkF,IAAAA,EAAE,GAAG,CAAL;AACAC,IAAAA,EAAE,GAAG,CAAL;AACA/H,IAAAA,EAAE,GAAG,CAAL;AACD,GAJD,MAIO;AACL4C,IAAAA,GAAG,GAAG,IAAIA,GAAV;AACAkF,IAAAA,EAAE,IAAIlF,GAAN;AACAmF,IAAAA,EAAE,IAAInF,GAAN;AACA5C,IAAAA,EAAE,IAAI4C,GAAN;AACD;;AAEDoF,EAAAA,EAAE,GAAGG,EAAE,GAAGnI,EAAL,GAAUE,EAAE,GAAG6H,EAApB;AACAE,EAAAA,EAAE,GAAG/H,EAAE,GAAG4H,EAAL,GAAUI,EAAE,GAAGlI,EAApB;AACAC,EAAAA,EAAE,GAAGiI,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAApB;AAEAlF,EAAAA,GAAG,GAAG3J,IAAI,CAACoD,IAAL,CAAU2L,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBhI,EAAE,GAAGA,EAAnC,CAAN;;AACA,MAAI,CAAC2C,GAAL,EAAU;AACRoF,IAAAA,EAAE,GAAG,CAAL;AACAC,IAAAA,EAAE,GAAG,CAAL;AACAhI,IAAAA,EAAE,GAAG,CAAL;AACD,GAJD,MAIO;AACL2C,IAAAA,GAAG,GAAG,IAAIA,GAAV;AACAoF,IAAAA,EAAE,IAAIpF,GAAN;AACAqF,IAAAA,EAAE,IAAIrF,GAAN;AACA3C,IAAAA,EAAE,IAAI2C,GAAN;AACD;;AAED9I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgO,EAAT;AACAhO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkO,EAAT;AACAlO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoO,EAAT;AACApO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiO,EAAT;AACAjO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmO,EAAT;AACAnO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqO,EAAT;AACArO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkG,EAAT;AACAlG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmG,EAAT;AACAnG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUoG,EAAV;AACApG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAEgO,EAAE,GAAGM,IAAL,GAAYL,EAAE,GAAGM,IAAjB,GAAwBrI,EAAE,GAAGsI,IAA/B,CAAV;AACAxO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAEkO,EAAE,GAAGI,IAAL,GAAYH,EAAE,GAAGI,IAAjB,GAAwBpI,EAAE,GAAGqI,IAA/B,CAAV;AACAxO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,EAAEoO,EAAE,GAAGE,IAAL,GAAYD,EAAE,GAAGE,IAAjB,GAAwBnI,EAAE,GAAGoI,IAA/B,CAAV;AACAxO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS+O,QAAT,CAAkB/O,GAAlB,EAAuB6N,GAAvB,EAA4BmB,MAA5B,EAAoCjB,EAApC,EAAwC;AAC7C,MAAIO,IAAI,GAAGT,GAAG,CAAC,CAAD,CAAd;AAAA,MACIU,IAAI,GAAGV,GAAG,CAAC,CAAD,CADd;AAAA,MAEIW,IAAI,GAAGX,GAAG,CAAC,CAAD,CAFd;AAAA,MAGIY,GAAG,GAAGV,EAAE,CAAC,CAAD,CAHZ;AAAA,MAIIW,GAAG,GAAGX,EAAE,CAAC,CAAD,CAJZ;AAAA,MAKIY,GAAG,GAAGZ,EAAE,CAAC,CAAD,CALZ;AAOA,MAAIK,EAAE,GAAGE,IAAI,GAAGU,MAAM,CAAC,CAAD,CAAtB;AAAA,MACIX,EAAE,GAAGE,IAAI,GAAGS,MAAM,CAAC,CAAD,CADtB;AAAA,MAEI5I,EAAE,GAAGoI,IAAI,GAAGQ,MAAM,CAAC,CAAD,CAFtB;AAIA,MAAIlG,GAAG,GAAGsF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBjI,EAAE,GAAGA,EAAnC;;AACA,MAAI0C,GAAG,GAAG,CAAV,EAAa;AACXA,IAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAUuG,GAAV,CAAV;AACAsF,IAAAA,EAAE,IAAItF,GAAN;AACAuF,IAAAA,EAAE,IAAIvF,GAAN;AACA1C,IAAAA,EAAE,IAAI0C,GAAN;AACD;;AAED,MAAIkF,EAAE,GAAGU,GAAG,GAAGtI,EAAN,GAAWuI,GAAG,GAAGN,EAA1B;AAAA,MACIJ,EAAE,GAAGU,GAAG,GAAGP,EAAN,GAAWK,GAAG,GAAGrI,EAD1B;AAAA,MAEIF,EAAE,GAAGuI,GAAG,GAAGJ,EAAN,GAAWK,GAAG,GAAGN,EAF1B;AAIAtF,EAAAA,GAAG,GAAGkF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoB/H,EAAE,GAAGA,EAA/B;;AACA,MAAI4C,GAAG,GAAG,CAAV,EAAa;AACXA,IAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAUuG,GAAV,CAAV;AACAkF,IAAAA,EAAE,IAAIlF,GAAN;AACAmF,IAAAA,EAAE,IAAInF,GAAN;AACA5C,IAAAA,EAAE,IAAI4C,GAAN;AACD;;AAED9I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgO,EAAT;AACAhO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiO,EAAT;AACAjO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkG,EAAT;AACAlG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqO,EAAE,GAAGnI,EAAL,GAAUE,EAAE,GAAG6H,EAAxB;AACAjO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoG,EAAE,GAAG4H,EAAL,GAAUI,EAAE,GAAGlI,EAAxB;AACAlG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoO,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAxB;AACAhO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoO,EAAT;AACApO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqO,EAAT;AACArO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUoG,EAAV;AACApG,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUsO,IAAV;AACAtO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUuO,IAAV;AACAvO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUwO,IAAV;AACAxO,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD;;AAAA;AAED;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAA2D,IAA3D,GAAkEA,CAAC,CAAC,CAAD,CAAnE,GAAyE,IAAzE,GAAgFA,CAAC,CAAC,CAAD,CAAjF,GAAuF,IAAvF,GAA8FA,CAAC,CAAC,CAAD,CAA/F,GAAqG,IAArG,GAA4GA,CAAC,CAAC,CAAD,CAA7G,GAAmH,IAAnH,GAA0HA,CAAC,CAAC,CAAD,CAA3H,GAAiI,IAAjI,GAAwIA,CAAC,CAAC,CAAD,CAAzI,GAA+I,IAA/I,GAAsJA,CAAC,CAAC,EAAD,CAAvJ,GAA8J,IAA9J,GAAqKA,CAAC,CAAC,EAAD,CAAtK,GAA6K,IAA7K,GAAoLA,CAAC,CAAC,EAAD,CAArL,GAA4L,IAA5L,GAAmMA,CAAC,CAAC,EAAD,CAApM,GAA2M,IAA3M,GAAkNA,CAAC,CAAC,EAAD,CAAnN,GAA0N,IAA1N,GAAiOA,CAAC,CAAC,EAAD,CAAlO,GAAyO,GAAhP;AACD;AAED;;;;;;;;AAMO,SAAS4C,IAAT,CAAc5C,CAAd,EAAiB;AACtB,SAAOP,IAAI,CAACoD,IAAL,CAAUpD,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,IAAoBP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApB,GAAwCP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxC,GAA4DP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA5D,GAAgFP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAhF,GAAoGP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApG,GAAwHP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAxH,GAA4IP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAA5I,GAAgKP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAhK,GAAoLP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApL,GAAwMP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAAxM,GAA6NP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAA7N,GAAkPP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAAlP,GAAuQP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAAvQ,GAA4RP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAA5R,GAAiTP,IAAI,CAACqD,GAAL,CAAS9C,CAAC,CAAC,EAAD,CAAV,EAAgB,CAAhB,CAA3T,CAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmD,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAnB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgD,cAAT,CAAwBhD,GAAxB,EAA6BN,CAA7B,EAAgCE,CAAhC,EAAmC;AACxCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACAI,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAlB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASiD,oBAAT,CAA8BjD,GAA9B,EAAmCN,CAAnC,EAAsCE,CAAtC,EAAyCmC,KAAzC,EAAgD;AACrD/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA/B,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUN,CAAC,CAAC,EAAD,CAAD,GAAQE,CAAC,CAAC,EAAD,CAAD,GAAQmC,KAA1B;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+C,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA7D,IAAoEF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA9E,IAAqFF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA/F,IAAsGF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAhH,IAAuHF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAjI,IAAwIF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAlJ,IAAyJF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAnK,IAA0KF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAArL,IAA6LF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAAxM,IAAgNF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAA3N,IAAmOF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAA9O,IAAsPF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAAjQ,IAAyQF,CAAC,CAAC,EAAD,CAAD,KAAUE,CAAC,CAAC,EAAD,CAA3R;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAAV;AAAA,MACIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CADV;AAAA,MAEIsI,EAAE,GAAGtI,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIwI,EAAE,GAAGxI,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuP,EAAE,GAAGvP,CAAC,CAAC,CAAD,CADV;AAAA,MAEImF,GAAG,GAAGnF,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIoF,GAAG,GAAGpF,CAAC,CAAC,EAAD,CAHX;AAIA,MAAIiF,GAAG,GAAGjF,CAAC,CAAC,EAAD,CAAX;AAAA,MACIsH,GAAG,GAAGtH,CAAC,CAAC,EAAD,CADX;AAAA,MAEIwP,GAAG,GAAGxP,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIyP,GAAG,GAAGzP,CAAC,CAAC,EAAD,CAHX;AAKA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAIA,MAAImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAAV;AAAA,MACIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CADV;AAAA,MAEIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIwI,EAAE,GAAGxI,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIyI,EAAE,GAAGzI,CAAC,CAAC,CAAD,CAAV;AAAA,MACIwP,EAAE,GAAGxP,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2F,GAAG,GAAG3F,CAAC,CAAC,EAAD,CAFX;AAAA,MAGIuF,GAAG,GAAGvF,CAAC,CAAC,EAAD,CAHX;AAIA,MAAI4F,GAAG,GAAG5F,CAAC,CAAC,EAAD,CAAX;AAAA,MACIyP,GAAG,GAAGzP,CAAC,CAAC,EAAD,CADX;AAAA,MAEI0P,GAAG,GAAG1P,CAAC,CAAC,EAAD,CAFX;AAAA,MAGI2P,GAAG,GAAG3P,CAAC,CAAC,EAAD,CAHX;AAKA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAAvS,IAAoVrC,IAAI,CAACU,GAAL,CAASgE,EAAE,GAAGE,EAAd,KAAqB9D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASgE,EAAT,CAAd,EAA4B1E,IAAI,CAACU,GAAL,CAASkE,EAAT,CAA5B,CAA5X,IAAya5E,IAAI,CAACU,GAAL,CAASiE,EAAE,GAAGE,EAAd,KAAqB/D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiE,EAAT,CAAd,EAA4B3E,IAAI,CAACU,GAAL,CAASmE,EAAT,CAA5B,CAAjd,IAA8f7E,IAAI,CAACU,GAAL,CAASmI,EAAE,GAAGG,EAAd,KAAqBlI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmI,EAAT,CAAd,EAA4B7I,IAAI,CAACU,GAAL,CAASsI,EAAT,CAA5B,CAAtiB,IAAmlBhJ,IAAI,CAACU,GAAL,CAASoI,EAAE,GAAGG,EAAd,KAAqBnI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASoI,EAAT,CAAd,EAA4B9I,IAAI,CAACU,GAAL,CAASuI,EAAT,CAA5B,CAA3nB,IAAwqBjJ,IAAI,CAACU,GAAL,CAASqI,EAAE,GAAGG,EAAd,KAAqBpI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASqI,EAAT,CAAd,EAA4B/I,IAAI,CAACU,GAAL,CAASwI,EAAT,CAA5B,CAAhtB,IAA6vBlJ,IAAI,CAACU,GAAL,CAASoP,EAAE,GAAGG,EAAd,KAAqBnP,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASoP,EAAT,CAAd,EAA4B9P,IAAI,CAACU,GAAL,CAASuP,EAAT,CAA5B,CAAryB,IAAk1BjQ,IAAI,CAACU,GAAL,CAASgF,GAAG,GAAGU,GAAf,KAAuBtF,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASgF,GAAT,CAAd,EAA6B1F,IAAI,CAACU,GAAL,CAAS0F,GAAT,CAA7B,CAA53B,IAA26BpG,IAAI,CAACU,GAAL,CAASiF,GAAG,GAAGK,GAAf,KAAuBlF,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiF,GAAT,CAAd,EAA6B3F,IAAI,CAACU,GAAL,CAASsF,GAAT,CAA7B,CAAr9B,IAAogChG,IAAI,CAACU,GAAL,CAAS8E,GAAG,GAAGa,GAAf,KAAuBvF,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAAS8E,GAAT,CAAd,EAA6BxF,IAAI,CAACU,GAAL,CAAS2F,GAAT,CAA7B,CAA9iC,IAA6lCrG,IAAI,CAACU,GAAL,CAASmH,GAAG,GAAGqI,GAAf,KAAuBpP,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmH,GAAT,CAAd,EAA6B7H,IAAI,CAACU,GAAL,CAASwP,GAAT,CAA7B,CAAvoC,IAAsrClQ,IAAI,CAACU,GAAL,CAASqP,GAAG,GAAGI,GAAf,KAAuBrP,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASqP,GAAT,CAAd,EAA6B/P,IAAI,CAACU,GAAL,CAASyP,GAAT,CAA7B,CAAhuC,IAA+wCnQ,IAAI,CAACU,GAAL,CAASsP,GAAG,GAAGI,GAAf,KAAuBtP,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASsP,GAAT,CAAd,EAA6BhQ,IAAI,CAACU,GAAL,CAAS0P,GAAT,CAA7B,CAAh0C;AACD;AAED;;;;;;AAIO,IAAIrM,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAI+B,GAAG,GAAGL,QAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChzDP;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAAS/C,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACD,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASwP,MAAT,CAAgB9P,CAAhB,EAAmB;AACxB,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA9B,CAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS3F,UAAT,CAAoBsF,CAApB,EAAuBC,CAAvB,EAA0BI,CAA1B,EAA6B;AAClC,MAAIhG,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACA,SAAOhG,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASU,GAAT,CAAaV,GAAb,EAAkB2F,CAAlB,EAAqBC,CAArB,EAAwBI,CAAxB,EAA2B;AAChChG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACA,SAAOhG,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS6C,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASoB,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyP,MAAT,CAAgBzP,GAAhB,EAAqBN,CAArB,EAAwBE,CAAxB,EAA2B;AAChCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS0P,IAAT,CAAc1P,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS2P,KAAT,CAAe3P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS4P,GAAT,CAAa5P,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASF,GAAT,CAAaE,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS6P,KAAT,CAAe7P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS8P,WAAT,CAAqB9P,GAArB,EAA0BN,CAA1B,EAA6BE,CAA7B,EAAgCmC,KAAhC,EAAuC;AAC5C/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+P,QAAT,CAAkBrQ,CAAlB,EAAqBE,CAArB,EAAwB;AAC7B,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIsG,CAAC,GAAGpG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA9B,CAAP;AACD;AAED;;;;;;;;;AAOO,SAASgK,eAAT,CAAyBtQ,CAAzB,EAA4BE,CAA5B,EAA+B;AACpC,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIsG,CAAC,GAAGpG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA3B;AACD;AAED;;;;;;;;AAMO,SAASiK,aAAT,CAAuBvQ,CAAvB,EAA0B;AAC/B,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA3B;AACD;AAED;;;;;;;;;AAOO,SAASkK,MAAT,CAAgBlQ,GAAhB,EAAqBN,CAArB,EAAwB;AAC7BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASmQ,OAAT,CAAiBnQ,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASoQ,SAAT,CAAmBpQ,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIoJ,GAAG,GAAGnD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAA9B;;AACA,MAAI8C,GAAG,GAAG,CAAV,EAAa;AACX;AACAA,IAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAUuG,GAAV,CAAV;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOoJ,GAAhB;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOoJ,GAAhB;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOoJ,GAAhB;AACD;;AACD,SAAO9I,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASqQ,GAAT,CAAa3Q,CAAb,EAAgBE,CAAhB,EAAmB;AACxB,SAAOF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAR,GAAcF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAtB,GAA4BF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAA3C;AACD;AAED;;;;;;;;;;AAQO,SAAS0Q,KAAT,CAAetQ,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/B,MAAIoK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAGA,MAAIkK,EAAE,GAAGhK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIiK,EAAE,GAAGjK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIkK,EAAE,GAAGlK,CAAC,CAAC,CAAD,CAFV;AAIAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAxB;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGN,EAAL,GAAUI,EAAE,GAAGF,EAAxB;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAxB;AACA,SAAO5J,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASuQ,IAAT,CAAcvQ,GAAd,EAAmBN,CAAnB,EAAsBE,CAAtB,EAAyBmJ,CAAzB,EAA4B;AACjC,MAAIiB,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AACA,MAAIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CAAV;AACA,MAAIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGjB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOoK,EAAX,CAAf;AACAhK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGlB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOqK,EAAX,CAAf;AACAjK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGnB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOsK,EAAX,CAAf;AACA,SAAOlK,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAASwQ,OAAT,CAAiBxQ,GAAjB,EAAsBN,CAAtB,EAAyBE,CAAzB,EAA4BiC,CAA5B,EAA+BuB,CAA/B,EAAkC2F,CAAlC,EAAqC;AAC1C,MAAI0H,YAAY,GAAG1H,CAAC,GAAGA,CAAvB;AACA,MAAI2H,OAAO,GAAGD,YAAY,IAAI,IAAI1H,CAAJ,GAAQ,CAAZ,CAAZ,GAA6B,CAA3C;AACA,MAAI4H,OAAO,GAAGF,YAAY,IAAI1H,CAAC,GAAG,CAAR,CAAZ,GAAyBA,CAAvC;AACA,MAAI6H,OAAO,GAAGH,YAAY,IAAI1H,CAAC,GAAG,CAAR,CAA1B;AACA,MAAI8H,OAAO,GAAGJ,YAAY,IAAI,IAAI,IAAI1H,CAAZ,CAA1B;AAEA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AACA7Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AACA7Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AAEA,SAAO7Q,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAAS8Q,MAAT,CAAgB9Q,GAAhB,EAAqBN,CAArB,EAAwBE,CAAxB,EAA2BiC,CAA3B,EAA8BuB,CAA9B,EAAiC2F,CAAjC,EAAoC;AACzC,MAAIgI,aAAa,GAAG,IAAIhI,CAAxB;AACA,MAAIiI,qBAAqB,GAAGD,aAAa,GAAGA,aAA5C;AACA,MAAIN,YAAY,GAAG1H,CAAC,GAAGA,CAAvB;AACA,MAAI2H,OAAO,GAAGM,qBAAqB,GAAGD,aAAtC;AACA,MAAIJ,OAAO,GAAG,IAAI5H,CAAJ,GAAQiI,qBAAtB;AACA,MAAIJ,OAAO,GAAG,IAAIH,YAAJ,GAAmBM,aAAjC;AACA,MAAIF,OAAO,GAAGJ,YAAY,GAAG1H,CAA7B;AAEA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AACA7Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AACA7Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOgR,OAAP,GAAiB9Q,CAAC,CAAC,CAAD,CAAD,GAAO+Q,OAAxB,GAAkC9O,CAAC,CAAC,CAAD,CAAD,GAAO+O,OAAzC,GAAmDxN,CAAC,CAAC,CAAD,CAAD,GAAOyN,OAAnE;AAEA,SAAO7Q,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASZ,MAAT,CAAgBY,GAAhB,EAAqB+B,KAArB,EAA4B;AACjCA,EAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;AAEA,MAAIkP,CAAC,GAAGhR,QAAQ,CAACf,MAAT,KAAoB,GAApB,GAA0BC,IAAI,CAACK,EAAvC;AACA,MAAIwG,CAAC,GAAG/F,QAAQ,CAACf,MAAT,KAAoB,GAApB,GAA0B,GAAlC;AACA,MAAIgS,MAAM,GAAG/R,IAAI,CAACoD,IAAL,CAAU,MAAMyD,CAAC,GAAGA,CAApB,IAAyBjE,KAAtC;AAEA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC2C,GAAL,CAASmP,CAAT,IAAcC,MAAvB;AACAlR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyC,GAAL,CAASqP,CAAT,IAAcC,MAAvB;AACAlR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAC,GAAGjE,KAAb;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASmR,aAAT,CAAuBnR,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT;AAGA,MAAIuG,CAAC,GAAGmL,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAD,GAAQpL,CAA9B,GAAkCoL,CAAC,CAAC,EAAD,CAA3C;AACAnL,EAAAA,CAAC,GAAGA,CAAC,IAAI,GAAT;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAD,GAAOpL,CAA7B,GAAiCoL,CAAC,CAAC,EAAD,CAAnC,IAA2CnL,CAApD;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAD,GAAOpL,CAA7B,GAAiCoL,CAAC,CAAC,EAAD,CAAnC,IAA2CnL,CAApD;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAD,GAAQpL,CAA9B,GAAkCoL,CAAC,CAAC,EAAD,CAApC,IAA4CnL,CAArD;AACA,SAAOjG,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASqR,aAAT,CAAuBrR,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT;AAGAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGyL,CAAC,CAAC,CAAD,CAAL,GAAWxL,CAAC,GAAGwL,CAAC,CAAC,CAAD,CAAhB,GAAsBpL,CAAC,GAAGoL,CAAC,CAAC,CAAD,CAApC;AACApR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGyL,CAAC,CAAC,CAAD,CAAL,GAAWxL,CAAC,GAAGwL,CAAC,CAAC,CAAD,CAAhB,GAAsBpL,CAAC,GAAGoL,CAAC,CAAC,CAAD,CAApC;AACApR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGyL,CAAC,CAAC,CAAD,CAAL,GAAWxL,CAAC,GAAGwL,CAAC,CAAC,CAAD,CAAhB,GAAsBpL,CAAC,GAAGoL,CAAC,CAAC,CAAD,CAApC;AACA,SAAOpR,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASsR,aAAT,CAAuBtR,GAAvB,EAA4BN,CAA5B,EAA+BqG,CAA/B,EAAkC;AACvC;AACA,MAAIwL,EAAE,GAAGxL,CAAC,CAAC,CAAD,CAAV;AAAA,MACIyL,EAAE,GAAGzL,CAAC,CAAC,CAAD,CADV;AAAA,MAEI0L,EAAE,GAAG1L,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI2L,EAAE,GAAG3L,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIJ,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT,CANuC,CASvC;AACA;;AACA,MAAIiS,GAAG,GAAGH,EAAE,GAAGxL,CAAL,GAASyL,EAAE,GAAG7L,CAAxB;AAAA,MACIgM,GAAG,GAAGH,EAAE,GAAG9L,CAAL,GAAS4L,EAAE,GAAGvL,CADxB;AAAA,MAEI6L,GAAG,GAAGN,EAAE,GAAG3L,CAAL,GAAS4L,EAAE,GAAG7L,CAFxB,CAXuC,CAcvC;;AACA,MAAImM,IAAI,GAAGN,EAAE,GAAGK,GAAL,GAAWJ,EAAE,GAAGG,GAA3B;AAAA,MACIG,IAAI,GAAGN,EAAE,GAAGE,GAAL,GAAWJ,EAAE,GAAGM,GAD3B;AAAA,MAEIG,IAAI,GAAGT,EAAE,GAAGK,GAAL,GAAWJ,EAAE,GAAGG,GAF3B,CAfuC,CAkBvC;;AACA,MAAIM,EAAE,GAAGP,EAAE,GAAG,CAAd;AACAC,EAAAA,GAAG,IAAIM,EAAP;AACAL,EAAAA,GAAG,IAAIK,EAAP;AACAJ,EAAAA,GAAG,IAAII,EAAP,CAtBuC,CAuBvC;;AACAH,EAAAA,IAAI,IAAI,CAAR;AACAC,EAAAA,IAAI,IAAI,CAAR;AACAC,EAAAA,IAAI,IAAI,CAAR,CA1BuC,CA2BvC;;AACAhS,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGgM,GAAJ,GAAUG,IAAnB;AACA9R,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGgM,GAAJ,GAAUG,IAAnB;AACA/R,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAC,GAAG6L,GAAJ,GAAUG,IAAnB;AACA,SAAOhS,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgJ,OAAT,CAAiBhJ,GAAjB,EAAsBN,CAAtB,EAAyBE,CAAzB,EAA4BiC,CAA5B,EAA+B;AACpC,MAAIqQ,CAAC,GAAG,EAAR;AAAA,MACIjB,CAAC,GAAG,EADR,CADoC,CAGpC;;AACAiB,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf,CANoC,CAQpC;;AACAqR,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAR;AACAjB,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAnC;AACAoP,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAnC,CAXoC,CAapC;;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AAEA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiJ,OAAT,CAAiBjJ,GAAjB,EAAsBN,CAAtB,EAAyBE,CAAzB,EAA4BiC,CAA5B,EAA+B;AACpC,MAAIqQ,CAAC,GAAG,EAAR;AAAA,MACIjB,CAAC,GAAG,EADR,CADoC,CAGpC;;AACAiB,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf,CANoC,CAQpC;;AACAqR,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAnC;AACAoP,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAR;AACAjB,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAnC,CAXoC,CAapC;;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AAEA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASkJ,OAAT,CAAiBlJ,GAAjB,EAAsBN,CAAtB,EAAyBE,CAAzB,EAA4BiC,CAA5B,EAA+B;AACpC,MAAIqQ,CAAC,GAAG,EAAR;AAAA,MACIjB,CAAC,GAAG,EADR,CADoC,CAGpC;;AACAiB,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf;AACAsS,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxS,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAf,CANoC,CAQpC;;AACAqR,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAnC;AACAoP,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAACyC,GAAL,CAASC,CAAT,CAAP,GAAqBqQ,CAAC,CAAC,CAAD,CAAD,GAAO/S,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAAnC;AACAoP,EAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiB,CAAC,CAAC,CAAD,CAAR,CAXoC,CAapC;;AACAlS,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiR,CAAC,CAAC,CAAD,CAAD,GAAOrR,CAAC,CAAC,CAAD,CAAjB;AAEA,SAAOI,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmS,KAAT,CAAezS,CAAf,EAAkBE,CAAlB,EAAqB;AAC1B,MAAIwS,KAAK,GAAG/R,UAAU,CAACX,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAtB;AACA,MAAI2S,KAAK,GAAGhS,UAAU,CAACT,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAtB;AAEAwQ,EAAAA,SAAS,CAACgC,KAAD,EAAQA,KAAR,CAAT;AACAhC,EAAAA,SAAS,CAACiC,KAAD,EAAQA,KAAR,CAAT;AAEA,MAAIC,MAAM,GAAGjC,GAAG,CAAC+B,KAAD,EAAQC,KAAR,CAAhB;;AAEA,MAAIC,MAAM,GAAG,GAAb,EAAkB;AAChB,WAAO,CAAP;AACD,GAFD,MAEO,IAAIA,MAAM,GAAG,CAAC,GAAd,EAAmB;AACxB,WAAOnT,IAAI,CAACK,EAAZ;AACD,GAFM,MAEA;AACL,WAAOL,IAAI,CAACoT,IAAL,CAAUD,MAAV,CAAP;AACD;AACF;AAED;;;;;;;;AAMO,SAASjQ,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,GAApD;AACD;AAED;;;;;;;;;AAOO,SAASqD,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAnD;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAGA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAGA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAzN;AACD;AAED;;;;;;AAIO,IAAI4B,GAAG,GAAGL,QAAV;AAEP;;;;;;AAIO,IAAII,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAIoR,GAAG,GAAG/C,MAAV;AAEP;;;;;;AAIO,IAAIgD,IAAI,GAAG1C,QAAX;AAEP;;;;;;AAIO,IAAI2C,OAAO,GAAG1C,eAAd;AAEP;;;;;;AAIO,IAAIlH,GAAG,GAAG0G,MAAV;AAEP;;;;;;AAIO,IAAImD,MAAM,GAAG1C,aAAb;AAEP;;;;;;;;;;;;;;;AAYO,IAAI2C,OAAO,GAAG,YAAY;AAC/B,MAAIC,GAAG,GAAG9S,MAAM,EAAhB;AAEA,SAAO,UAAUL,CAAV,EAAaoT,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,EAApC,EAAwCC,GAAxC,EAA6C;AAClD,QAAIC,CAAC,GAAG,KAAK,CAAb;AAAA,QACIC,CAAC,GAAG,KAAK,CADb;;AAEA,QAAI,CAACN,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAI,CAACC,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAIC,KAAJ,EAAW;AACTI,MAAAA,CAAC,GAAGjU,IAAI,CAACyQ,GAAL,CAASoD,KAAK,GAAGF,MAAR,GAAiBC,MAA1B,EAAkCrT,CAAC,CAAC8P,MAApC,CAAJ;AACD,KAFD,MAEO;AACL4D,MAAAA,CAAC,GAAG1T,CAAC,CAAC8P,MAAN;AACD;;AAED,SAAK2D,CAAC,GAAGJ,MAAT,EAAiBI,CAAC,GAAGC,CAArB,EAAwBD,CAAC,IAAIL,MAA7B,EAAqC;AACnCD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAD,CAAV;AAAcN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AAAkBN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AAChCF,MAAAA,EAAE,CAACJ,GAAD,EAAMA,GAAN,EAAWK,GAAX,CAAF;AACAxT,MAAAA,CAAC,CAACyT,CAAD,CAAD,GAAON,GAAG,CAAC,CAAD,CAAV;AAAcnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AAAkBnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AACjC;;AAED,WAAOnT,CAAP;AACD,GAxBD;AAyBD,CA5BoB,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtvBP;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAASK,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACD,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASK,UAAT,CAAoBsF,CAApB,EAAuBC,CAAvB,EAA0BI,CAA1B,EAA6BC,CAA7B,EAAgC;AACrC,MAAIjG,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiG,CAAT;AACA,SAAOjG,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAASU,GAAT,CAAaV,GAAb,EAAkB2F,CAAlB,EAAqBC,CAArB,EAAwBI,CAAxB,EAA2BC,CAA3B,EAA8B;AACnCjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiG,CAAT;AACA,SAAOjG,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS6C,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASoB,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyP,MAAT,CAAgBzP,GAAhB,EAAqBN,CAArB,EAAwBE,CAAxB,EAA2B;AAChCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS0P,IAAT,CAAc1P,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS2P,KAAT,CAAe3P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS4P,GAAT,CAAa5P,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASF,GAAT,CAAaE,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS6P,KAAT,CAAe7P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS8P,WAAT,CAAqB9P,GAArB,EAA0BN,CAA1B,EAA6BE,CAA7B,EAAgCmC,KAAhC,EAAuC;AAC5C/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+P,QAAT,CAAkBrQ,CAAlB,EAAqBE,CAArB,EAAwB;AAC7B,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIsG,CAAC,GAAGpG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIuG,CAAC,GAAGrG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAApB,GAAwBC,CAAC,GAAGA,CAAtC,CAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+J,eAAT,CAAyBtQ,CAAzB,EAA4BE,CAA5B,EAA+B;AACpC,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIsG,CAAC,GAAGpG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,MAAIuG,CAAC,GAAGrG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAApB,GAAwBC,CAAC,GAAGA,CAAnC;AACD;AAED;;;;;;;;AAMO,SAASuJ,MAAT,CAAgB9P,CAAhB,EAAmB;AACxB,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIuG,CAAC,GAAGvG,CAAC,CAAC,CAAD,CAAT;AACA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAApB,GAAwBC,CAAC,GAAGA,CAAtC,CAAP;AACD;AAED;;;;;;;;AAMO,SAASgK,aAAT,CAAuBvQ,CAAvB,EAA0B;AAC/B,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIuG,CAAC,GAAGvG,CAAC,CAAC,CAAD,CAAT;AACA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAApB,GAAwBC,CAAC,GAAGA,CAAnC;AACD;AAED;;;;;;;;;AAOO,SAASiK,MAAT,CAAgBlQ,GAAhB,EAAqBN,CAArB,EAAwB;AAC7BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASmQ,OAAT,CAAiBnQ,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASoQ,SAAT,CAAmBpQ,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIuG,CAAC,GAAGvG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIoJ,GAAG,GAAGnD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBI,CAAC,GAAGA,CAApB,GAAwBC,CAAC,GAAGA,CAAtC;;AACA,MAAI6C,GAAG,GAAG,CAAV,EAAa;AACXA,IAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAUuG,GAAV,CAAV;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAC,GAAGmD,GAAb;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAC,GAAGkD,GAAb;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAC,GAAG8C,GAAb;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASiG,CAAC,GAAG6C,GAAb;AACD;;AACD,SAAO9I,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASqQ,GAAT,CAAa3Q,CAAb,EAAgBE,CAAhB,EAAmB;AACxB,SAAOF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAR,GAAcF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAtB,GAA4BF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAApC,GAA0CF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAzD;AACD;AAED;;;;;;;;;;;AASO,SAAS2Q,IAAT,CAAcvQ,GAAd,EAAmBN,CAAnB,EAAsBE,CAAtB,EAAyBmJ,CAAzB,EAA4B;AACjC,MAAIiB,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AACA,MAAIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CAAV;AACA,MAAIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAAV;AACA,MAAIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGjB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOoK,EAAX,CAAf;AACAhK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGlB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOqK,EAAX,CAAf;AACAjK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGnB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOsK,EAAX,CAAf;AACAlK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGpB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOuK,EAAX,CAAf;AACA,SAAOnK,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASZ,MAAT,CAAgBY,GAAhB,EAAqB+B,KAArB,EAA4B;AACjCA,EAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB,CADiC,CAGjC;AACA;AACA;;AACA,MAAIG,EAAJ,EAAQmR,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;AACA,MAAIC,EAAJ,EAAQC,EAAR;;AACA,KAAG;AACDvR,IAAAA,EAAE,GAAGjC,QAAQ,CAACf,MAAT,KAAoB,CAApB,GAAwB,CAA7B;AACAmU,IAAAA,EAAE,GAAGpT,QAAQ,CAACf,MAAT,KAAoB,CAApB,GAAwB,CAA7B;AACAsU,IAAAA,EAAE,GAAGtR,EAAE,GAAGA,EAAL,GAAUmR,EAAE,GAAGA,EAApB;AACD,GAJD,QAISG,EAAE,IAAI,CAJf;;AAKA,KAAG;AACDF,IAAAA,EAAE,GAAGrT,QAAQ,CAACf,MAAT,KAAoB,CAApB,GAAwB,CAA7B;AACAqU,IAAAA,EAAE,GAAGtT,QAAQ,CAACf,MAAT,KAAoB,CAApB,GAAwB,CAA7B;AACAuU,IAAAA,EAAE,GAAGH,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAApB;AACD,GAJD,QAISE,EAAE,IAAI,CAJf;;AAMA,MAAIrQ,CAAC,GAAGjE,IAAI,CAACoD,IAAL,CAAU,CAAC,IAAIiR,EAAL,IAAWC,EAArB,CAAR;AACAzT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+B,KAAK,GAAGG,EAAjB;AACAlC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+B,KAAK,GAAGsR,EAAjB;AACArT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+B,KAAK,GAAGuR,EAAR,GAAalQ,CAAtB;AACApD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+B,KAAK,GAAGwR,EAAR,GAAanQ,CAAtB;AACA,SAAOpD,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmR,aAAT,CAAuBnR,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT;AAAA,MAGIuG,CAAC,GAAGvG,CAAC,CAAC,CAAD,CAHT;AAIAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAD,GAAOpL,CAA7B,GAAiCoL,CAAC,CAAC,EAAD,CAAD,GAAQnL,CAAlD;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAD,GAAOpL,CAA7B,GAAiCoL,CAAC,CAAC,EAAD,CAAD,GAAQnL,CAAlD;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAD,GAAQpL,CAA9B,GAAkCoL,CAAC,CAAC,EAAD,CAAD,GAAQnL,CAAnD;AACAjG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAD,GAAQpL,CAA9B,GAAkCoL,CAAC,CAAC,EAAD,CAAD,GAAQnL,CAAnD;AACA,SAAOjG,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASsR,aAAT,CAAuBtR,GAAvB,EAA4BN,CAA5B,EAA+BqG,CAA/B,EAAkC;AACvC,MAAIJ,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT;AAGA,MAAI6R,EAAE,GAAGxL,CAAC,CAAC,CAAD,CAAV;AAAA,MACIyL,EAAE,GAAGzL,CAAC,CAAC,CAAD,CADV;AAAA,MAEI0L,EAAE,GAAG1L,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI2L,EAAE,GAAG3L,CAAC,CAAC,CAAD,CAHV,CAJuC,CASvC;;AACA,MAAI2N,EAAE,GAAGhC,EAAE,GAAG/L,CAAL,GAAS6L,EAAE,GAAGxL,CAAd,GAAkByL,EAAE,GAAG7L,CAAhC;AACA,MAAI+N,EAAE,GAAGjC,EAAE,GAAG9L,CAAL,GAAS6L,EAAE,GAAG9L,CAAd,GAAkB4L,EAAE,GAAGvL,CAAhC;AACA,MAAI4N,EAAE,GAAGlC,EAAE,GAAG1L,CAAL,GAASuL,EAAE,GAAG3L,CAAd,GAAkB4L,EAAE,GAAG7L,CAAhC;AACA,MAAIkO,EAAE,GAAG,CAACtC,EAAD,GAAM5L,CAAN,GAAU6L,EAAE,GAAG5L,CAAf,GAAmB6L,EAAE,GAAGzL,CAAjC,CAbuC,CAevC;;AACAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0T,EAAE,GAAGhC,EAAL,GAAUmC,EAAE,GAAG,CAACtC,EAAhB,GAAqBoC,EAAE,GAAG,CAAClC,EAA3B,GAAgCmC,EAAE,GAAG,CAACpC,EAA/C;AACAxR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2T,EAAE,GAAGjC,EAAL,GAAUmC,EAAE,GAAG,CAACrC,EAAhB,GAAqBoC,EAAE,GAAG,CAACrC,EAA3B,GAAgCmC,EAAE,GAAG,CAACjC,EAA/C;AACAzR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4T,EAAE,GAAGlC,EAAL,GAAUmC,EAAE,GAAG,CAACpC,EAAhB,GAAqBiC,EAAE,GAAG,CAAClC,EAA3B,GAAgCmC,EAAE,GAAG,CAACpC,EAA/C;AACAvR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAA2D,GAAlE;AACD;AAED;;;;;;;;;AAOO,SAASqD,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAApE;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAIA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAA9S;AACD;AAED;;;;;;AAIO,IAAI2B,GAAG,GAAGL,QAAV;AAEP;;;;;;AAIO,IAAII,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAIoR,GAAG,GAAG/C,MAAV;AAEP;;;;;;AAIO,IAAIgD,IAAI,GAAG1C,QAAX;AAEP;;;;;;AAIO,IAAI2C,OAAO,GAAG1C,eAAd;AAEP;;;;;;AAIO,IAAIlH,GAAG,GAAG0G,MAAV;AAEP;;;;;;AAIO,IAAImD,MAAM,GAAG1C,aAAb;AAEP;;;;;;;;;;;;;;;AAYO,IAAI2C,OAAO,GAAG,YAAY;AAC/B,MAAIC,GAAG,GAAG9S,MAAM,EAAhB;AAEA,SAAO,UAAUL,CAAV,EAAaoT,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,EAApC,EAAwCC,GAAxC,EAA6C;AAClD,QAAIC,CAAC,GAAG,KAAK,CAAb;AAAA,QACIC,CAAC,GAAG,KAAK,CADb;;AAEA,QAAI,CAACN,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAI,CAACC,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAIC,KAAJ,EAAW;AACTI,MAAAA,CAAC,GAAGjU,IAAI,CAACyQ,GAAL,CAASoD,KAAK,GAAGF,MAAR,GAAiBC,MAA1B,EAAkCrT,CAAC,CAAC8P,MAApC,CAAJ;AACD,KAFD,MAEO;AACL4D,MAAAA,CAAC,GAAG1T,CAAC,CAAC8P,MAAN;AACD;;AAED,SAAK2D,CAAC,GAAGJ,MAAT,EAAiBI,CAAC,GAAGC,CAArB,EAAwBD,CAAC,IAAIL,MAA7B,EAAqC;AACnCD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAD,CAAV;AAAcN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AAAkBN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AAAkBN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AAClDF,MAAAA,EAAE,CAACJ,GAAD,EAAMA,GAAN,EAAWK,GAAX,CAAF;AACAxT,MAAAA,CAAC,CAACyT,CAAD,CAAD,GAAON,GAAG,CAAC,CAAD,CAAV;AAAcnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AAAkBnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AAAkBnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AACnD;;AAED,WAAOnT,CAAP;AACD,GAxBD;AAyBD,CA5BoB,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzkBP;;AACA;;AACA;;AACA;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAASK,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACDA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;AAC5BA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS8T,YAAT,CAAsB9T,GAAtB,EAA2B6I,IAA3B,EAAiCnH,GAAjC,EAAsC;AAC3CA,EAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACA,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAjB;AACA7I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAjB;AACA7I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2B,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAjB;AACA7I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAT;AACA,SAAO1B,GAAP;AACD;AAED;;;;;;;;;;;;;;;AAaO,SAAS+T,YAAT,CAAsBC,QAAtB,EAAgCjO,CAAhC,EAAmC;AACxC,MAAIrE,GAAG,GAAGvC,IAAI,CAACoT,IAAL,CAAUxM,CAAC,CAAC,CAAD,CAAX,IAAkB,GAA5B;AACA,MAAIpE,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAG,GAAG,GAAf,CAAR;;AACA,MAAIC,CAAC,GAAG1B,QAAQ,CAACnB,OAAjB,EAA0B;AACxBkV,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcjO,CAAC,CAAC,CAAD,CAAD,GAAOpE,CAArB;AACAqS,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcjO,CAAC,CAAC,CAAD,CAAD,GAAOpE,CAArB;AACAqS,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcjO,CAAC,CAAC,CAAD,CAAD,GAAOpE,CAArB;AACD,GAJD,MAIO;AACL;AACAqS,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;AACAA,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;AACD;;AACD,SAAOtS,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASN,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAIoK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIkK,EAAE,GAAGhK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIiK,EAAE,GAAGjK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIkK,EAAE,GAAGlK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGImK,EAAE,GAAGnK,CAAC,CAAC,CAAD,CAHV;AAKAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAA5C;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAA5C;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAA5C;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAA5C;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgJ,OAAT,CAAiBhJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnCA,EAAAA,GAAG,IAAI,GAAP;AAEA,MAAIsI,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIkK,EAAE,GAAGzK,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAT;AAAA,MACIqI,EAAE,GAAG5K,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CADT;AAGA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAxB;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUG,EAAE,GAAGN,EAAxB;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUE,EAAE,GAAGL,EAAxB;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAxB;AACA,SAAO5J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiJ,OAAT,CAAiBjJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnCA,EAAAA,GAAG,IAAI,GAAP;AAEA,MAAIsI,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIA,MAAImK,EAAE,GAAG1K,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAT;AAAA,MACIqI,EAAE,GAAG5K,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CADT;AAGA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUG,EAAE,GAAGL,EAAxB;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAxB;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUC,EAAE,GAAGH,EAAxB;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGJ,EAAL,GAAUE,EAAE,GAAGJ,EAAxB;AACA,SAAO7J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASkJ,OAAT,CAAiBlJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnCA,EAAAA,GAAG,IAAI,GAAP;AAEA,MAAIsI,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIoK,EAAE,GAAG3K,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAT;AAAA,MACIqI,EAAE,GAAG5K,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CADT;AAGA1B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUE,EAAE,GAAGH,EAAxB;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUC,EAAE,GAAGF,EAAxB;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAxB;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGJ,EAAL,GAAUG,EAAE,GAAGJ,EAAxB;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASiU,UAAT,CAAoBjU,GAApB,EAAyBN,CAAzB,EAA4B;AACjC,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAAA,MAEIsG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAFT;AAIAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACoD,IAAL,CAAUpD,IAAI,CAACU,GAAL,CAAS,MAAM8F,CAAC,GAAGA,CAAV,GAAcC,CAAC,GAAGA,CAAlB,GAAsBI,CAAC,GAAGA,CAAnC,CAAV,CAAT;AACA,SAAOhG,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASkU,KAAT,CAAelU,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0BmJ,CAA1B,EAA6B;AAClC;AACA;AACA,MAAIiB,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIA,MAAIkK,EAAE,GAAGhK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIiK,EAAE,GAAGjK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIkK,EAAE,GAAGlK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGImK,EAAE,GAAGnK,CAAC,CAAC,CAAD,CAHV;AAKA,MAAIuU,KAAK,GAAG,KAAK,CAAjB;AAAA,MACIC,KAAK,GAAG,KAAK,CADjB;AAAA,MAEIC,KAAK,GAAG,KAAK,CAFjB;AAAA,MAGIC,MAAM,GAAG,KAAK,CAHlB;AAAA,MAIIC,MAAM,GAAG,KAAK,CAJlB,CAZkC,CAkBlC;;AACAH,EAAAA,KAAK,GAAGpK,EAAE,GAAGJ,EAAL,GAAUK,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAA3C,CAnBkC,CAoBlC;;AACA,MAAIqK,KAAK,GAAG,GAAZ,EAAiB;AACfA,IAAAA,KAAK,GAAG,CAACA,KAAT;AACAxK,IAAAA,EAAE,GAAG,CAACA,EAAN;AACAC,IAAAA,EAAE,GAAG,CAACA,EAAN;AACAC,IAAAA,EAAE,GAAG,CAACA,EAAN;AACAC,IAAAA,EAAE,GAAG,CAACA,EAAN;AACD,GA3BiC,CA4BlC;;;AACA,MAAI,MAAMqK,KAAN,GAAcnU,QAAQ,CAACnB,OAA3B,EAAoC;AAClC;AACAqV,IAAAA,KAAK,GAAGhV,IAAI,CAACoT,IAAL,CAAU6B,KAAV,CAAR;AACAC,IAAAA,KAAK,GAAGlV,IAAI,CAACyC,GAAL,CAASuS,KAAT,CAAR;AACAG,IAAAA,MAAM,GAAGnV,IAAI,CAACyC,GAAL,CAAS,CAAC,MAAMmH,CAAP,IAAYoL,KAArB,IAA8BE,KAAvC;AACAE,IAAAA,MAAM,GAAGpV,IAAI,CAACyC,GAAL,CAASmH,CAAC,GAAGoL,KAAb,IAAsBE,KAA/B;AACD,GAND,MAMO;AACL;AACA;AACAC,IAAAA,MAAM,GAAG,MAAMvL,CAAf;AACAwL,IAAAA,MAAM,GAAGxL,CAAT;AACD,GAxCiC,CAyClC;;;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsU,MAAM,GAAGtK,EAAT,GAAcuK,MAAM,GAAG3K,EAAhC;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsU,MAAM,GAAGrK,EAAT,GAAcsK,MAAM,GAAG1K,EAAhC;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsU,MAAM,GAAGpK,EAAT,GAAcqK,MAAM,GAAGzK,EAAhC;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsU,MAAM,GAAGnK,EAAT,GAAcoK,MAAM,GAAGxK,EAAhC;AAEA,SAAO/J,GAAP;AACD;AAED;;;;;;;;AAMO,SAASZ,MAAT,CAAgBY,GAAhB,EAAqB;AAC1B;AACA;AACA,MAAIwU,EAAE,GAAGvU,QAAQ,CAACf,MAAT,EAAT;AACA,MAAIuV,EAAE,GAAGxU,QAAQ,CAACf,MAAT,EAAT;AACA,MAAIwV,EAAE,GAAGzU,QAAQ,CAACf,MAAT,EAAT;AAEA,MAAIyV,YAAY,GAAGxV,IAAI,CAACoD,IAAL,CAAU,IAAIiS,EAAd,CAAnB;AACA,MAAII,MAAM,GAAGzV,IAAI,CAACoD,IAAL,CAAUiS,EAAV,CAAb;AAEAxU,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2U,YAAY,GAAGxV,IAAI,CAACyC,GAAL,CAAS,MAAMzC,IAAI,CAACK,EAAX,GAAgBiV,EAAzB,CAAxB;AACAzU,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2U,YAAY,GAAGxV,IAAI,CAAC2C,GAAL,CAAS,MAAM3C,IAAI,CAACK,EAAX,GAAgBiV,EAAzB,CAAxB;AACAzU,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4U,MAAM,GAAGzV,IAAI,CAACyC,GAAL,CAAS,MAAMzC,IAAI,CAACK,EAAX,GAAgBkV,EAAzB,CAAlB;AACA1U,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4U,MAAM,GAAGzV,IAAI,CAAC2C,GAAL,CAAS,MAAM3C,IAAI,CAACK,EAAX,GAAgBkV,EAAzB,CAAlB;AACA,SAAO1U,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAIoB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAIA,MAAI2Q,GAAG,GAAGvP,EAAE,GAAGA,EAAL,GAAUF,EAAE,GAAGA,EAAf,GAAoBG,EAAE,GAAGA,EAAzB,GAA8BC,EAAE,GAAGA,EAA7C;AACA,MAAI6T,MAAM,GAAGxE,GAAG,GAAG,MAAMA,GAAT,GAAe,CAA/B,CAN6B,CAQ7B;;AAEArQ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACc,EAAD,GAAM+T,MAAf;AACA7U,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACY,EAAD,GAAMiU,MAAf;AACA7U,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACe,EAAD,GAAM8T,MAAf;AACA7U,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAE,GAAG6T,MAAd;AACA,SAAO7U,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8U,SAAT,CAAmB9U,GAAnB,EAAwBN,CAAxB,EAA2B;AAChCM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;;;;AAWO,SAAS+U,QAAT,CAAkB/U,GAAlB,EAAuBoR,CAAvB,EAA0B;AAC/B;AACA;AACA,MAAI4D,MAAM,GAAG5D,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAA5B;AACA,MAAI6D,KAAK,GAAG,KAAK,CAAjB;;AAEA,MAAID,MAAM,GAAG,GAAb,EAAkB;AAChB;AACAC,IAAAA,KAAK,GAAG9V,IAAI,CAACoD,IAAL,CAAUyS,MAAM,GAAG,GAAnB,CAAR,CAFgB,CAEiB;;AACjChV,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMiV,KAAf;AACAA,IAAAA,KAAK,GAAG,MAAMA,KAAd,CAJgB,CAIK;;AACrBjV,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAT,IAAgB6D,KAAzB;AACAjV,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAT,IAAgB6D,KAAzB;AACAjV,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAT,IAAgB6D,KAAzB;AACD,GARD,MAQO;AACL;AACA,QAAI9B,CAAC,GAAG,CAAR;AACA,QAAI/B,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAZ,EAAiB+B,CAAC,GAAG,CAAJ;AACjB,QAAI/B,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC+B,CAAC,GAAG,CAAJ,GAAQA,CAAT,CAAZ,EAAyBA,CAAC,GAAG,CAAJ;AACzB,QAAI+B,CAAC,GAAG,CAAC/B,CAAC,GAAG,CAAL,IAAU,CAAlB;AACA,QAAIgC,CAAC,GAAG,CAAChC,CAAC,GAAG,CAAL,IAAU,CAAlB;AAEA8B,IAAAA,KAAK,GAAG9V,IAAI,CAACoD,IAAL,CAAU6O,CAAC,CAAC+B,CAAC,GAAG,CAAJ,GAAQA,CAAT,CAAD,GAAe/B,CAAC,CAAC8D,CAAC,GAAG,CAAJ,GAAQA,CAAT,CAAhB,GAA8B9D,CAAC,CAAC+D,CAAC,GAAG,CAAJ,GAAQA,CAAT,CAA/B,GAA6C,GAAvD,CAAR;AACAnV,IAAAA,GAAG,CAACmT,CAAD,CAAH,GAAS,MAAM8B,KAAf;AACAA,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACAjV,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACoR,CAAC,CAAC8D,CAAC,GAAG,CAAJ,GAAQC,CAAT,CAAD,GAAe/D,CAAC,CAAC+D,CAAC,GAAG,CAAJ,GAAQD,CAAT,CAAjB,IAAgCD,KAAzC;AACAjV,IAAAA,GAAG,CAACkV,CAAD,CAAH,GAAS,CAAC9D,CAAC,CAAC8D,CAAC,GAAG,CAAJ,GAAQ/B,CAAT,CAAD,GAAe/B,CAAC,CAAC+B,CAAC,GAAG,CAAJ,GAAQ+B,CAAT,CAAjB,IAAgCD,KAAzC;AACAjV,IAAAA,GAAG,CAACmV,CAAD,CAAH,GAAS,CAAC/D,CAAC,CAAC+D,CAAC,GAAG,CAAJ,GAAQhC,CAAT,CAAD,GAAe/B,CAAC,CAAC+B,CAAC,GAAG,CAAJ,GAAQgC,CAAT,CAAjB,IAAgCF,KAAzC;AACD;;AAED,SAAOjV,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAASoV,SAAT,CAAmBpV,GAAnB,EAAwB2F,CAAxB,EAA2BC,CAA3B,EAA8BI,CAA9B,EAAiC;AACtC,MAAIqP,SAAS,GAAG,MAAMlW,IAAI,CAACK,EAAX,GAAgB,KAAhC;AACAmG,EAAAA,CAAC,IAAI0P,SAAL;AACAzP,EAAAA,CAAC,IAAIyP,SAAL;AACArP,EAAAA,CAAC,IAAIqP,SAAL;AAEA,MAAIzK,EAAE,GAAGzL,IAAI,CAACyC,GAAL,CAAS+D,CAAT,CAAT;AACA,MAAI2P,EAAE,GAAGnW,IAAI,CAAC2C,GAAL,CAAS6D,CAAT,CAAT;AACA,MAAIkF,EAAE,GAAG1L,IAAI,CAACyC,GAAL,CAASgE,CAAT,CAAT;AACA,MAAI2P,EAAE,GAAGpW,IAAI,CAAC2C,GAAL,CAAS8D,CAAT,CAAT;AACA,MAAIkF,EAAE,GAAG3L,IAAI,CAACyC,GAAL,CAASoE,CAAT,CAAT;AACA,MAAIwP,EAAE,GAAGrW,IAAI,CAAC2C,GAAL,CAASkE,CAAT,CAAT;AAEAhG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4K,EAAE,GAAG2K,EAAL,GAAUC,EAAV,GAAeF,EAAE,GAAGzK,EAAL,GAAUC,EAAlC;AACA9K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsV,EAAE,GAAGzK,EAAL,GAAU2K,EAAV,GAAe5K,EAAE,GAAG2K,EAAL,GAAUzK,EAAlC;AACA9K,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsV,EAAE,GAAGC,EAAL,GAAUzK,EAAV,GAAeF,EAAE,GAAGC,EAAL,GAAU2K,EAAlC;AACAxV,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASsV,EAAE,GAAGC,EAAL,GAAUC,EAAV,GAAe5K,EAAE,GAAGC,EAAL,GAAUC,EAAlC;AAEA,SAAO9K,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,IAA/B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA6C,IAA7C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAA2D,GAAlE;AACD;AAED;;;;;;;;;AAOO,IAAIQ,KAAK,GAAGuV,IAAI,CAACvV,KAAjB;AAEP;;;;;;;;;;;;AAUO,IAAIG,UAAU,GAAGoV,IAAI,CAACpV,UAAtB;AAEP;;;;;;;;;;AAQO,IAAIF,IAAI,GAAGsV,IAAI,CAACtV,IAAhB;AAEP;;;;;;;;;;;;;AAWO,IAAIO,GAAG,GAAG+U,IAAI,CAAC/U,GAAf;AAEP;;;;;;;;;;;AASO,IAAImC,GAAG,GAAG4S,IAAI,CAAC5S,GAAf;AAEP;;;;;;AAIO,IAAIK,GAAG,GAAG9B,QAAV;AAEP;;;;;;;;;;;AASO,IAAIW,KAAK,GAAG0T,IAAI,CAAC1T,KAAjB;AAEP;;;;;;;;;;AAQO,IAAIsO,GAAG,GAAGoF,IAAI,CAACpF,GAAf;AAEP;;;;;;;;;;;;AAUO,IAAIE,IAAI,GAAGkF,IAAI,CAAClF,IAAhB;AAEP;;;;;;;;AAMO,IAAIf,MAAM,GAAGiG,IAAI,CAACjG,MAAlB;AAEP;;;;;;AAIO,IAAI1G,GAAG,GAAG0G,MAAV;AAEP;;;;;;;;;AAOO,IAAIS,aAAa,GAAGwF,IAAI,CAACxF,aAAzB;AAEP;;;;;;AAIO,IAAI0C,MAAM,GAAG1C,aAAb;AAEP;;;;;;;;;;AAQO,IAAIG,SAAS,GAAGqF,IAAI,CAACrF,SAArB;AAEP;;;;;;;;;AAOO,IAAIrN,WAAW,GAAG0S,IAAI,CAAC1S,WAAvB;AAEP;;;;;;;;;AAOO,IAAIpD,MAAM,GAAG8V,IAAI,CAAC9V,MAAlB;AAEP;;;;;;;;;;;;;;AAWO,IAAI+V,UAAU,GAAG,YAAY;AAClC,MAAIC,OAAO,GAAGC,IAAI,CAAC7V,MAAL,EAAd;AACA,MAAI8V,SAAS,GAAGD,IAAI,CAACvV,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAhB;AACA,MAAIyV,SAAS,GAAGF,IAAI,CAACvV,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAhB;AAEA,SAAO,UAAUL,GAAV,EAAeN,CAAf,EAAkBE,CAAlB,EAAqB;AAC1B,QAAIyQ,GAAG,GAAGuF,IAAI,CAACvF,GAAL,CAAS3Q,CAAT,EAAYE,CAAZ,CAAV;;AACA,QAAIyQ,GAAG,GAAG,CAAC,QAAX,EAAqB;AACnBuF,MAAAA,IAAI,CAACtF,KAAL,CAAWqF,OAAX,EAAoBE,SAApB,EAA+BnW,CAA/B;AACA,UAAIkW,IAAI,CAAC9M,GAAL,CAAS6M,OAAT,IAAoB,QAAxB,EAAkCC,IAAI,CAACtF,KAAL,CAAWqF,OAAX,EAAoBG,SAApB,EAA+BpW,CAA/B;AAClCkW,MAAAA,IAAI,CAACxF,SAAL,CAAeuF,OAAf,EAAwBA,OAAxB;AACA7B,MAAAA,YAAY,CAAC9T,GAAD,EAAM2V,OAAN,EAAexW,IAAI,CAACK,EAApB,CAAZ;AACA,aAAOQ,GAAP;AACD,KAND,MAMO,IAAIqQ,GAAG,GAAG,QAAV,EAAoB;AACzBrQ,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,aAAOA,GAAP;AACD,KANM,MAMA;AACL4V,MAAAA,IAAI,CAACtF,KAAL,CAAWqF,OAAX,EAAoBjW,CAApB,EAAuBE,CAAvB;AACAI,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2V,OAAO,CAAC,CAAD,CAAhB;AACA3V,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2V,OAAO,CAAC,CAAD,CAAhB;AACA3V,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2V,OAAO,CAAC,CAAD,CAAhB;AACA3V,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIqQ,GAAb;AACA,aAAOD,SAAS,CAACpQ,GAAD,EAAMA,GAAN,CAAhB;AACD;AACF,GAtBD;AAuBD,CA5BuB,EAAjB;AA8BP;;;;;;;;;;;;;;;AAWO,IAAI+V,MAAM,GAAG,YAAY;AAC9B,MAAIC,KAAK,GAAGjW,MAAM,EAAlB;AACA,MAAIkW,KAAK,GAAGlW,MAAM,EAAlB;AAEA,SAAO,UAAUC,GAAV,EAAeN,CAAf,EAAkBE,CAAlB,EAAqBiC,CAArB,EAAwBuB,CAAxB,EAA2B2F,CAA3B,EAA8B;AACnCmL,IAAAA,KAAK,CAAC8B,KAAD,EAAQtW,CAAR,EAAW0D,CAAX,EAAc2F,CAAd,CAAL;AACAmL,IAAAA,KAAK,CAAC+B,KAAD,EAAQrW,CAAR,EAAWiC,CAAX,EAAckH,CAAd,CAAL;AACAmL,IAAAA,KAAK,CAAClU,GAAD,EAAMgW,KAAN,EAAaC,KAAb,EAAoB,IAAIlN,CAAJ,IAAS,IAAIA,CAAb,CAApB,CAAL;AAEA,WAAO/I,GAAP;AACD,GAND;AAOD,CAXmB,EAAb;AAaP;;;;;;;;;;;;;;AAUO,IAAIkW,OAAO,GAAG,YAAY;AAC/B,MAAIC,IAAI,GAAGC,IAAI,CAACrW,MAAL,EAAX;AAEA,SAAO,UAAUC,GAAV,EAAeqW,IAAf,EAAqBtK,KAArB,EAA4BgC,EAA5B,EAAgC;AACrCoI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpK,KAAK,CAAC,CAAD,CAAf;AACAoK,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpK,KAAK,CAAC,CAAD,CAAf;AACAoK,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpK,KAAK,CAAC,CAAD,CAAf;AAEAoK,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpI,EAAE,CAAC,CAAD,CAAZ;AACAoI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpI,EAAE,CAAC,CAAD,CAAZ;AACAoI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUpI,EAAE,CAAC,CAAD,CAAZ;AAEAoI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACE,IAAI,CAAC,CAAD,CAAf;AACAF,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACE,IAAI,CAAC,CAAD,CAAf;AACAF,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACE,IAAI,CAAC,CAAD,CAAf;AAEA,WAAOjG,SAAS,CAACpQ,GAAD,EAAM+U,QAAQ,CAAC/U,GAAD,EAAMmW,IAAN,CAAd,CAAhB;AACD,GAdD;AAeD,CAlBoB,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACloBP;;AACA;;AACA;;;;;;AAEA;;;;;;;;AAQA;;;;;AAKO,SAASpW,MAAT,GAAkB;AACvB,MAAIuW,EAAE,GAAG,IAAIrW,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAT;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCsX,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACAA,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACD;;AACDA,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;AACA,SAAOA,EAAP;AACD;AAED;;;;;;;;;AAOO,SAASpW,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAI4W,EAAE,GAAG,IAAIrW,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAT;AACAuX,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA4W,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ5W,CAAC,CAAC,CAAD,CAAT;AACA,SAAO4W,EAAP;AACD;AAED;;;;;;;;;;;;;;;;AAcO,SAASjW,UAAT,CAAoB4N,EAApB,EAAwBE,EAAxB,EAA4BE,EAA5B,EAAgCkI,EAAhC,EAAoCrQ,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgD6L,EAAhD,EAAoD;AACzD,MAAIqE,EAAE,GAAG,IAAIrW,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAT;AACAuX,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQrI,EAAR;AACAqI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQnI,EAAR;AACAmI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQjI,EAAR;AACAiI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAR;AACAD,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQpQ,EAAR;AACAoQ,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQnQ,EAAR;AACAmQ,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQlQ,EAAR;AACAkQ,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQrE,EAAR;AACA,SAAOqE,EAAP;AACD;AAED;;;;;;;;;;;;;;;AAaO,SAASE,6BAAT,CAAuCvI,EAAvC,EAA2CE,EAA3C,EAA+CE,EAA/C,EAAmDkI,EAAnD,EAAuDrQ,EAAvD,EAA2DC,EAA3D,EAA+DC,EAA/D,EAAmE;AACxE,MAAIkQ,EAAE,GAAG,IAAIrW,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAT;AACAuX,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQrI,EAAR;AACAqI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQnI,EAAR;AACAmI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQjI,EAAR;AACAiI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAR;AACA,MAAIvM,EAAE,GAAG9D,EAAE,GAAG,GAAd;AAAA,MACI+D,EAAE,GAAG9D,EAAE,GAAG,GADd;AAAA,MAEI+D,EAAE,GAAG9D,EAAE,GAAG,GAFd;AAGAkQ,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQtM,EAAE,GAAGuM,EAAL,GAAUtM,EAAE,GAAGoE,EAAf,GAAoBnE,EAAE,GAAGiE,EAAjC;AACAmI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQrM,EAAE,GAAGsM,EAAL,GAAUrM,EAAE,GAAG+D,EAAf,GAAoBjE,EAAE,GAAGqE,EAAjC;AACAiI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQpM,EAAE,GAAGqM,EAAL,GAAUvM,EAAE,GAAGmE,EAAf,GAAoBlE,EAAE,GAAGgE,EAAjC;AACAqI,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAACtM,EAAD,GAAMiE,EAAN,GAAWhE,EAAE,GAAGkE,EAAhB,GAAqBjE,EAAE,GAAGmE,EAAlC;AACA,SAAOiI,EAAP;AACD;AAED;;;;;;;;;;;AASO,SAAShN,uBAAT,CAAiCtJ,GAAjC,EAAsC+F,CAAtC,EAAyCgD,CAAzC,EAA4C;AACjD,MAAIiB,EAAE,GAAGjB,CAAC,CAAC,CAAD,CAAD,GAAO,GAAhB;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CAAD,GAAO,GADhB;AAAA,MAEImB,EAAE,GAAGnB,CAAC,CAAC,CAAD,CAAD,GAAO,GAFhB;AAAA,MAGIa,EAAE,GAAG7D,CAAC,CAAC,CAAD,CAHV;AAAA,MAII8D,EAAE,GAAG9D,CAAC,CAAC,CAAD,CAJV;AAAA,MAKI+D,EAAE,GAAG/D,CAAC,CAAC,CAAD,CALV;AAAA,MAMIgE,EAAE,GAAGhE,CAAC,CAAC,CAAD,CANV;AAOA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4J,EAAT;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6J,EAAT;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS8J,EAAT;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+J,EAAT;AACA/J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUE,EAAE,GAAGH,EAAf,GAAoBI,EAAE,GAAGL,EAAlC;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUG,EAAE,GAAGN,EAAf,GAAoBI,EAAE,GAAGF,EAAlC;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUC,EAAE,GAAGH,EAAf,GAAoBI,EAAE,GAAGL,EAAlC;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACgK,EAAD,GAAMJ,EAAN,GAAWK,EAAE,GAAGJ,EAAhB,GAAqBK,EAAE,GAAGJ,EAAnC;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASkE,eAAT,CAAyBlE,GAAzB,EAA8B+I,CAA9B,EAAiC;AACtC/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+I,CAAC,CAAC,CAAD,CAAD,GAAO,GAAhB;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+I,CAAC,CAAC,CAAD,CAAD,GAAO,GAAhB;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+I,CAAC,CAAC,CAAD,CAAD,GAAO,GAAhB;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmC,YAAT,CAAsBnC,GAAtB,EAA2B+F,CAA3B,EAA8B;AACnC/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASmE,QAAT,CAAkBnE,GAAlB,EAAuBN,CAAvB,EAA0B;AAC/B;AACA,MAAI+W,KAAK,GAAGC,IAAI,CAAC3W,MAAL,EAAZ;AACA4W,EAAAA,IAAI,CAACnM,WAAL,CAAiBiM,KAAjB,EAAwB/W,CAAxB;AACA,MAAIqJ,CAAC,GAAG,IAAI9I,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAR;AACA4X,EAAAA,IAAI,CAACtM,cAAL,CAAoBtB,CAApB,EAAuBrJ,CAAvB;AACA4J,EAAAA,uBAAuB,CAACtJ,GAAD,EAAMyW,KAAN,EAAa1N,CAAb,CAAvB;AACA,SAAO/I,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;AAMO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;AAC5BA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACA,SAAOA,GAAP;AACD;AAED;;;;;;;;;;;;;;;;;AAeO,SAASU,GAAT,CAAaV,GAAb,EAAkBiO,EAAlB,EAAsBE,EAAtB,EAA0BE,EAA1B,EAA8BkI,EAA9B,EAAkCrQ,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8C6L,EAA9C,EAAkD;AACvDjS,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiO,EAAT;AACAjO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmO,EAAT;AACAnO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASqO,EAAT;AACArO,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuW,EAAT;AAEAvW,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkG,EAAT;AACAlG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmG,EAAT;AACAnG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoG,EAAT;AACApG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiS,EAAT;AACA,SAAOjS,GAAP;AACD;AAED;;;;;;;;AAMO,IAAI4W,OAAO,GAAGF,IAAI,CAACvW,IAAnB;AAEP;;;;;;;;;AAMO,SAAS0W,OAAT,CAAiB7W,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,IAAI8W,OAAO,GAAGJ,IAAI,CAACvW,IAAnB;AAEP;;;;;;;;;;;AAQO,SAAS4W,OAAT,CAAiB/W,GAAjB,EAAsB+F,CAAtB,EAAyB;AAC9B/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA/F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+F,CAAC,CAAC,CAAD,CAAV;AACA,SAAO/F,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqK,cAAT,CAAwBrK,GAAxB,EAA6BN,CAA7B,EAAgC;AACrC,MAAIsK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIkK,EAAE,GAAG,CAAClK,CAAC,CAAC,CAAD,CAJX;AAAA,MAKImK,EAAE,GAAG,CAACnK,CAAC,CAAC,CAAD,CALX;AAAA,MAMIoK,EAAE,GAAG,CAACpK,CAAC,CAAC,CAAD,CANX;AAAA,MAOIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAPV;AAQAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACgK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAAnD;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACiK,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAApC,IAA0C,CAAnD;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACkK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAApC,IAA0C,CAAnD;AACA,SAAO5J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiE,SAAT,CAAmBjE,GAAnB,EAAwBN,CAAxB,EAA2BsC,CAA3B,EAA8B;AACnC,MAAIgV,GAAG,GAAGtX,CAAC,CAAC,CAAD,CAAX;AAAA,MACIuX,GAAG,GAAGvX,CAAC,CAAC,CAAD,CADX;AAAA,MAEIwX,GAAG,GAAGxX,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIyX,GAAG,GAAGzX,CAAC,CAAC,CAAD,CAHX;AAAA,MAII0X,GAAG,GAAGpV,CAAC,CAAC,CAAD,CAAD,GAAO,GAJjB;AAAA,MAKIqV,GAAG,GAAGrV,CAAC,CAAC,CAAD,CAAD,GAAO,GALjB;AAAA,MAMIsV,GAAG,GAAGtV,CAAC,CAAC,CAAD,CAAD,GAAO,GANjB;AAAA,MAOIuV,GAAG,GAAG7X,CAAC,CAAC,CAAD,CAPX;AAAA,MAQI8X,GAAG,GAAG9X,CAAC,CAAC,CAAD,CARX;AAAA,MASI+X,GAAG,GAAG/X,CAAC,CAAC,CAAD,CATX;AAAA,MAUIgY,GAAG,GAAGhY,CAAC,CAAC,CAAD,CAVX;AAWAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgX,GAAT;AACAhX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiX,GAAT;AACAjX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkX,GAAT;AACAlX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAT;AACAnX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGC,GAAN,GAAYH,GAAG,GAAGK,GAAlB,GAAwBJ,GAAG,GAAGG,GAA9B,GAAoCE,GAA7C;AACAvX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGE,GAAN,GAAYH,GAAG,GAAGE,GAAlB,GAAwBJ,GAAG,GAAGM,GAA9B,GAAoCE,GAA7C;AACAxX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGG,GAAN,GAAYN,GAAG,GAAGK,GAAlB,GAAwBJ,GAAG,GAAGG,GAA9B,GAAoCK,GAA7C;AACAzX,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACgX,GAAD,GAAOI,GAAP,GAAaH,GAAG,GAAGI,GAAnB,GAAyBH,GAAG,GAAGI,GAA/B,GAAqCI,GAA9C;AACA,SAAO1X,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASgJ,OAAT,CAAiBhJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIkI,EAAE,GAAG,CAAClK,CAAC,CAAC,CAAD,CAAX;AAAA,MACImK,EAAE,GAAG,CAACnK,CAAC,CAAC,CAAD,CADX;AAAA,MAEIoK,EAAE,GAAG,CAACpK,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIsK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAPV;AAAA,MAQIsX,GAAG,GAAGhN,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAR7C;AAAA,MASIoN,GAAG,GAAGhN,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAT7C;AAAA,MAUIoN,GAAG,GAAGhN,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAV7C;AAAA,MAWIuN,GAAG,GAAGhN,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAX7C;AAYA4M,EAAAA,IAAI,CAAC1N,OAAL,CAAahJ,GAAb,EAAkBN,CAAlB,EAAqBgC,GAArB;AACAkI,EAAAA,EAAE,GAAG5J,GAAG,CAAC,CAAD,CAAR;AACA6J,EAAAA,EAAE,GAAG7J,GAAG,CAAC,CAAD,CAAR;AACA8J,EAAAA,EAAE,GAAG9J,GAAG,CAAC,CAAD,CAAR;AACA+J,EAAAA,EAAE,GAAG/J,GAAG,CAAC,CAAD,CAAR;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgX,GAAG,GAAGjN,EAAN,GAAWoN,GAAG,GAAGvN,EAAjB,GAAsBqN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiX,GAAG,GAAGlN,EAAN,GAAWoN,GAAG,GAAGtN,EAAjB,GAAsBqN,GAAG,GAAGtN,EAA5B,GAAiCoN,GAAG,GAAGlN,EAAhD;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkX,GAAG,GAAGnN,EAAN,GAAWoN,GAAG,GAAGrN,EAAjB,GAAsBkN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGpN,EAAN,GAAWiN,GAAG,GAAGpN,EAAjB,GAAsBqN,GAAG,GAAGpN,EAA5B,GAAiCqN,GAAG,GAAGpN,EAAhD;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASiJ,OAAT,CAAiBjJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIkI,EAAE,GAAG,CAAClK,CAAC,CAAC,CAAD,CAAX;AAAA,MACImK,EAAE,GAAG,CAACnK,CAAC,CAAC,CAAD,CADX;AAAA,MAEIoK,EAAE,GAAG,CAACpK,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIsK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAPV;AAAA,MAQIsX,GAAG,GAAGhN,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAR7C;AAAA,MASIoN,GAAG,GAAGhN,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAT7C;AAAA,MAUIoN,GAAG,GAAGhN,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAV7C;AAAA,MAWIuN,GAAG,GAAGhN,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAX7C;AAYA4M,EAAAA,IAAI,CAACzN,OAAL,CAAajJ,GAAb,EAAkBN,CAAlB,EAAqBgC,GAArB;AACAkI,EAAAA,EAAE,GAAG5J,GAAG,CAAC,CAAD,CAAR;AACA6J,EAAAA,EAAE,GAAG7J,GAAG,CAAC,CAAD,CAAR;AACA8J,EAAAA,EAAE,GAAG9J,GAAG,CAAC,CAAD,CAAR;AACA+J,EAAAA,EAAE,GAAG/J,GAAG,CAAC,CAAD,CAAR;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgX,GAAG,GAAGjN,EAAN,GAAWoN,GAAG,GAAGvN,EAAjB,GAAsBqN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiX,GAAG,GAAGlN,EAAN,GAAWoN,GAAG,GAAGtN,EAAjB,GAAsBqN,GAAG,GAAGtN,EAA5B,GAAiCoN,GAAG,GAAGlN,EAAhD;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkX,GAAG,GAAGnN,EAAN,GAAWoN,GAAG,GAAGrN,EAAjB,GAAsBkN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGpN,EAAN,GAAWiN,GAAG,GAAGpN,EAAjB,GAAsBqN,GAAG,GAAGpN,EAA5B,GAAiCqN,GAAG,GAAGpN,EAAhD;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASkJ,OAAT,CAAiBlJ,GAAjB,EAAsBN,CAAtB,EAAyBgC,GAAzB,EAA8B;AACnC,MAAIkI,EAAE,GAAG,CAAClK,CAAC,CAAC,CAAD,CAAX;AAAA,MACImK,EAAE,GAAG,CAACnK,CAAC,CAAC,CAAD,CADX;AAAA,MAEIoK,EAAE,GAAG,CAACpK,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIsK,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAPV;AAAA,MAQIsX,GAAG,GAAGhN,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAR7C;AAAA,MASIoN,GAAG,GAAGhN,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAT7C;AAAA,MAUIoN,GAAG,GAAGhN,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAV7C;AAAA,MAWIuN,GAAG,GAAGhN,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAX7C;AAYA4M,EAAAA,IAAI,CAACxN,OAAL,CAAalJ,GAAb,EAAkBN,CAAlB,EAAqBgC,GAArB;AACAkI,EAAAA,EAAE,GAAG5J,GAAG,CAAC,CAAD,CAAR;AACA6J,EAAAA,EAAE,GAAG7J,GAAG,CAAC,CAAD,CAAR;AACA8J,EAAAA,EAAE,GAAG9J,GAAG,CAAC,CAAD,CAAR;AACA+J,EAAAA,EAAE,GAAG/J,GAAG,CAAC,CAAD,CAAR;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgX,GAAG,GAAGjN,EAAN,GAAWoN,GAAG,GAAGvN,EAAjB,GAAsBqN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiX,GAAG,GAAGlN,EAAN,GAAWoN,GAAG,GAAGtN,EAAjB,GAAsBqN,GAAG,GAAGtN,EAA5B,GAAiCoN,GAAG,GAAGlN,EAAhD;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkX,GAAG,GAAGnN,EAAN,GAAWoN,GAAG,GAAGrN,EAAjB,GAAsBkN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGpN,EAAN,GAAWiN,GAAG,GAAGpN,EAAjB,GAAsBqN,GAAG,GAAGpN,EAA5B,GAAiCqN,GAAG,GAAGpN,EAAhD;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS2X,kBAAT,CAA4B3X,GAA5B,EAAiCN,CAAjC,EAAoCqG,CAApC,EAAuC;AAC5C,MAAIwL,EAAE,GAAGxL,CAAC,CAAC,CAAD,CAAV;AAAA,MACIyL,EAAE,GAAGzL,CAAC,CAAC,CAAD,CADV;AAAA,MAEI0L,EAAE,GAAG1L,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI2L,EAAE,GAAG3L,CAAC,CAAC,CAAD,CAHV;AAAA,MAIIiE,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAPV;AASAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAG0H,EAAL,GAAUvH,EAAE,GAAGoH,EAAf,GAAoBtH,EAAE,GAAGwH,EAAzB,GAA8BvH,EAAE,GAAGsH,EAA5C;AACAxR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGyH,EAAL,GAAUvH,EAAE,GAAGqH,EAAf,GAAoBtH,EAAE,GAAGqH,EAAzB,GAA8BvH,EAAE,GAAGyH,EAA5C;AACAzR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGwH,EAAL,GAAUvH,EAAE,GAAGsH,EAAf,GAAoBzH,EAAE,GAAGwH,EAAzB,GAA8BvH,EAAE,GAAGsH,EAA5C;AACAvR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGuH,EAAL,GAAU1H,EAAE,GAAGuH,EAAf,GAAoBtH,EAAE,GAAGuH,EAAzB,GAA8BtH,EAAE,GAAGuH,EAA5C;AACAzH,EAAAA,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAN;AACAuK,EAAAA,EAAE,GAAGvK,CAAC,CAAC,CAAD,CAAN;AACAwK,EAAAA,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAAN;AACAyK,EAAAA,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAAN;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAG0H,EAAL,GAAUvH,EAAE,GAAGoH,EAAf,GAAoBtH,EAAE,GAAGwH,EAAzB,GAA8BvH,EAAE,GAAGsH,EAA5C;AACAxR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGyH,EAAL,GAAUvH,EAAE,GAAGqH,EAAf,GAAoBtH,EAAE,GAAGqH,EAAzB,GAA8BvH,EAAE,GAAGyH,EAA5C;AACAzR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGwH,EAAL,GAAUvH,EAAE,GAAGsH,EAAf,GAAoBzH,EAAE,GAAGwH,EAAzB,GAA8BvH,EAAE,GAAGsH,EAA5C;AACAvR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGuH,EAAL,GAAU1H,EAAE,GAAGuH,EAAf,GAAoBtH,EAAE,GAAGuH,EAAzB,GAA8BtH,EAAE,GAAGuH,EAA5C;AACA,SAAOzR,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS4X,mBAAT,CAA6B5X,GAA7B,EAAkC+F,CAAlC,EAAqCrG,CAArC,EAAwC;AAC7C,MAAI6R,EAAE,GAAGxL,CAAC,CAAC,CAAD,CAAV;AAAA,MACIyL,EAAE,GAAGzL,CAAC,CAAC,CAAD,CADV;AAAA,MAEI0L,EAAE,GAAG1L,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI2L,EAAE,GAAG3L,CAAC,CAAC,CAAD,CAHV;AAAA,MAII6D,EAAE,GAAGlK,CAAC,CAAC,CAAD,CAJV;AAAA,MAKImK,EAAE,GAAGnK,CAAC,CAAC,CAAD,CALV;AAAA,MAMIoK,EAAE,GAAGpK,CAAC,CAAC,CAAD,CANV;AAAA,MAOIqK,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAPV;AASAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuR,EAAE,GAAGxH,EAAL,GAAU2H,EAAE,GAAG9H,EAAf,GAAoB4H,EAAE,GAAG1H,EAAzB,GAA8B2H,EAAE,GAAG5H,EAA5C;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwR,EAAE,GAAGzH,EAAL,GAAU2H,EAAE,GAAG7H,EAAf,GAAoB4H,EAAE,GAAG7H,EAAzB,GAA8B2H,EAAE,GAAGzH,EAA5C;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyR,EAAE,GAAG1H,EAAL,GAAU2H,EAAE,GAAG5H,EAAf,GAAoByH,EAAE,GAAG1H,EAAzB,GAA8B2H,EAAE,GAAG5H,EAA5C;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0R,EAAE,GAAG3H,EAAL,GAAUwH,EAAE,GAAG3H,EAAf,GAAoB4H,EAAE,GAAG3H,EAAzB,GAA8B4H,EAAE,GAAG3H,EAA5C;AACAF,EAAAA,EAAE,GAAGlK,CAAC,CAAC,CAAD,CAAN;AACAmK,EAAAA,EAAE,GAAGnK,CAAC,CAAC,CAAD,CAAN;AACAoK,EAAAA,EAAE,GAAGpK,CAAC,CAAC,CAAD,CAAN;AACAqK,EAAAA,EAAE,GAAGrK,CAAC,CAAC,CAAD,CAAN;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASuR,EAAE,GAAGxH,EAAL,GAAU2H,EAAE,GAAG9H,EAAf,GAAoB4H,EAAE,GAAG1H,EAAzB,GAA8B2H,EAAE,GAAG5H,EAA5C;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASwR,EAAE,GAAGzH,EAAL,GAAU2H,EAAE,GAAG7H,EAAf,GAAoB4H,EAAE,GAAG7H,EAAzB,GAA8B2H,EAAE,GAAGzH,EAA5C;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASyR,EAAE,GAAG1H,EAAL,GAAU2H,EAAE,GAAG5H,EAAf,GAAoByH,EAAE,GAAG1H,EAAzB,GAA8B2H,EAAE,GAAG5H,EAA5C;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0R,EAAE,GAAG3H,EAAL,GAAUwH,EAAE,GAAG3H,EAAf,GAAoB4H,EAAE,GAAG3H,EAAzB,GAA8B4H,EAAE,GAAG3H,EAA5C;AACA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS6X,gBAAT,CAA0B7X,GAA1B,EAA+BN,CAA/B,EAAkCmJ,IAAlC,EAAwCnH,GAAxC,EAA6C;AAClD;AACA,MAAIvC,IAAI,CAACU,GAAL,CAAS6B,GAAT,IAAgBzB,QAAQ,CAACnB,OAA7B,EAAsC;AACpC,WAAOqB,IAAI,CAACH,GAAD,EAAMN,CAAN,CAAX;AACD;;AACD,MAAIoY,UAAU,GAAG3Y,IAAI,CAACoD,IAAL,CAAUsG,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAlC,GAAwCA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAhE,CAAjB;AAEAnH,EAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACA,MAAIC,CAAC,GAAGxC,IAAI,CAACyC,GAAL,CAASF,GAAT,CAAR;AACA,MAAIkI,EAAE,GAAGjI,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAR,GAAciP,UAAvB;AACA,MAAIjO,EAAE,GAAGlI,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAR,GAAciP,UAAvB;AACA,MAAIhO,EAAE,GAAGnI,CAAC,GAAGkH,IAAI,CAAC,CAAD,CAAR,GAAciP,UAAvB;AACA,MAAI/N,EAAE,GAAG5K,IAAI,CAAC2C,GAAL,CAASJ,GAAT,CAAT;AAEA,MAAIsV,GAAG,GAAGtX,CAAC,CAAC,CAAD,CAAX;AAAA,MACIuX,GAAG,GAAGvX,CAAC,CAAC,CAAD,CADX;AAAA,MAEIwX,GAAG,GAAGxX,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIyX,GAAG,GAAGzX,CAAC,CAAC,CAAD,CAHX;AAIAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgX,GAAG,GAAGjN,EAAN,GAAWoN,GAAG,GAAGvN,EAAjB,GAAsBqN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiX,GAAG,GAAGlN,EAAN,GAAWoN,GAAG,GAAGtN,EAAjB,GAAsBqN,GAAG,GAAGtN,EAA5B,GAAiCoN,GAAG,GAAGlN,EAAhD;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkX,GAAG,GAAGnN,EAAN,GAAWoN,GAAG,GAAGrN,EAAjB,GAAsBkN,GAAG,GAAGnN,EAA5B,GAAiCoN,GAAG,GAAGrN,EAAhD;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmX,GAAG,GAAGpN,EAAN,GAAWiN,GAAG,GAAGpN,EAAjB,GAAsBqN,GAAG,GAAGpN,EAA5B,GAAiCqN,GAAG,GAAGpN,EAAhD;AAEA,MAAIE,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwK,EAAE,GAAGxK,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIyK,EAAE,GAAGzK,CAAC,CAAC,CAAD,CAHV;AAIAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAGP,EAAf,GAAoBK,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAA5C;AACA7J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAGN,EAAf,GAAoBK,EAAE,GAAGN,EAAzB,GAA8BI,EAAE,GAAGF,EAA5C;AACA9J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkK,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAGL,EAAf,GAAoBE,EAAE,GAAGH,EAAzB,GAA8BI,EAAE,GAAGL,EAA5C;AACA5J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASmK,EAAE,GAAGJ,EAAL,GAAUC,EAAE,GAAGJ,EAAf,GAAoBK,EAAE,GAAGJ,EAAzB,GAA8BK,EAAE,GAAGJ,EAA5C;AAEA,SAAO9J,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS6C,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASoB,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClC,MAAImY,GAAG,GAAGrY,CAAC,CAAC,CAAD,CAAX;AAAA,MACIsY,GAAG,GAAGtY,CAAC,CAAC,CAAD,CADX;AAAA,MAEIuY,GAAG,GAAGvY,CAAC,CAAC,CAAD,CAFX;AAAA,MAGIwY,GAAG,GAAGxY,CAAC,CAAC,CAAD,CAHX;AAAA,MAII0X,GAAG,GAAGxX,CAAC,CAAC,CAAD,CAJX;AAAA,MAKIyX,GAAG,GAAGzX,CAAC,CAAC,CAAD,CALX;AAAA,MAMI0X,GAAG,GAAG1X,CAAC,CAAC,CAAD,CANX;AAAA,MAOIuY,GAAG,GAAGvY,CAAC,CAAC,CAAD,CAPX;AAAA,MAQIoX,GAAG,GAAGtX,CAAC,CAAC,CAAD,CARX;AAAA,MASIuX,GAAG,GAAGvX,CAAC,CAAC,CAAD,CATX;AAAA,MAUIwX,GAAG,GAAGxX,CAAC,CAAC,CAAD,CAVX;AAAA,MAWIyX,GAAG,GAAGzX,CAAC,CAAC,CAAD,CAXX;AAAA,MAYI0Y,GAAG,GAAGxY,CAAC,CAAC,CAAD,CAZX;AAAA,MAaIyY,GAAG,GAAGzY,CAAC,CAAC,CAAD,CAbX;AAAA,MAcI0Y,GAAG,GAAG1Y,CAAC,CAAC,CAAD,CAdX;AAAA,MAeI2Y,GAAG,GAAG3Y,CAAC,CAAC,CAAD,CAfX;AAgBAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+X,GAAG,GAAGQ,GAAN,GAAYL,GAAG,GAAGE,GAAlB,GAAwBJ,GAAG,GAAGM,GAA9B,GAAoCL,GAAG,GAAGI,GAAnD;AACArY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgY,GAAG,GAAGO,GAAN,GAAYL,GAAG,GAAGG,GAAlB,GAAwBJ,GAAG,GAAGG,GAA9B,GAAoCL,GAAG,GAAGO,GAAnD;AACAtY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiY,GAAG,GAAGM,GAAN,GAAYL,GAAG,GAAGI,GAAlB,GAAwBP,GAAG,GAAGM,GAA9B,GAAoCL,GAAG,GAAGI,GAAnD;AACApY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkY,GAAG,GAAGK,GAAN,GAAYR,GAAG,GAAGK,GAAlB,GAAwBJ,GAAG,GAAGK,GAA9B,GAAoCJ,GAAG,GAAGK,GAAnD;AACAtY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS+X,GAAG,GAAGI,GAAN,GAAYD,GAAG,GAAGd,GAAlB,GAAwBY,GAAG,GAAGV,GAA9B,GAAoCW,GAAG,GAAGZ,GAA1C,GAAgDL,GAAG,GAAGuB,GAAtD,GAA4DpB,GAAG,GAAGiB,GAAlE,GAAwEnB,GAAG,GAAGqB,GAA9E,GAAoFpB,GAAG,GAAGmB,GAAnG;AACArY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgY,GAAG,GAAGG,GAAN,GAAYD,GAAG,GAAGb,GAAlB,GAAwBY,GAAG,GAAGb,GAA9B,GAAoCW,GAAG,GAAGT,GAA1C,GAAgDL,GAAG,GAAGsB,GAAtD,GAA4DpB,GAAG,GAAGkB,GAAlE,GAAwEnB,GAAG,GAAGkB,GAA9E,GAAoFpB,GAAG,GAAGsB,GAAnG;AACAtY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiY,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGZ,GAAlB,GAAwBS,GAAG,GAAGV,GAA9B,GAAoCW,GAAG,GAAGZ,GAA1C,GAAgDF,GAAG,GAAGqB,GAAtD,GAA4DpB,GAAG,GAAGmB,GAAlE,GAAwEtB,GAAG,GAAGqB,GAA9E,GAAoFpB,GAAG,GAAGmB,GAAnG;AACApY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASkY,GAAG,GAAGC,GAAN,GAAYJ,GAAG,GAAGX,GAAlB,GAAwBY,GAAG,GAAGX,GAA9B,GAAoCY,GAAG,GAAGX,GAA1C,GAAgDH,GAAG,GAAGoB,GAAtD,GAA4DvB,GAAG,GAAGoB,GAAlE,GAAwEnB,GAAG,GAAGoB,GAA9E,GAAoFnB,GAAG,GAAGoB,GAAnG;AACA,SAAOtY,GAAP;AACD;AAED;;;;;;AAIO,IAAIkD,GAAG,GAAG9B,QAAV;AAEP;;;;;;;;;;;;AASO,SAASW,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,IAAIqQ,GAAG,GAAGqG,IAAI,CAACrG,GAAf;AAEP;;;;;;;;;;;;;AAUO,SAASE,IAAT,CAAcvQ,GAAd,EAAmBN,CAAnB,EAAsBE,CAAtB,EAAyBmJ,CAAzB,EAA4B;AACjC,MAAIyP,EAAE,GAAG,IAAIzP,CAAb;AACA,MAAIsH,GAAG,CAAC3Q,CAAD,EAAIE,CAAJ,CAAH,GAAY,CAAhB,EAAmBmJ,CAAC,GAAG,CAACA,CAAL;AAEnB/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AACA/I,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO8Y,EAAP,GAAY5Y,CAAC,CAAC,CAAD,CAAD,GAAOmJ,CAA5B;AAEA,SAAO/I,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASa,MAAT,CAAgBb,GAAhB,EAAqBN,CAArB,EAAwB;AAC7B,MAAI+Y,KAAK,GAAGxI,aAAa,CAACvQ,CAAD,CAAzB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO+Y,KAAhB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAF,GAAQ+Y,KAAjB;AACAzY,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAO+Y,KAAhB;AACA,SAAOzY,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8U,SAAT,CAAmB9U,GAAnB,EAAwBN,CAAxB,EAA2B;AAChCM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,IAAIwP,MAAM,GAAGkH,IAAI,CAAClH,MAAlB;AAEP;;;;;;AAIO,IAAI1G,GAAG,GAAG0G,MAAV;AAEP;;;;;;;;;AAOO,IAAIS,aAAa,GAAGyG,IAAI,CAACzG,aAAzB;AAEP;;;;;;AAIO,IAAI0C,MAAM,GAAG1C,aAAb;AAEP;;;;;;;;;;;AAQO,SAASG,SAAT,CAAmBpQ,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC,MAAI0K,SAAS,GAAG6F,aAAa,CAACvQ,CAAD,CAA7B;;AACA,MAAI0K,SAAS,GAAG,CAAhB,EAAmB;AACjBA,IAAAA,SAAS,GAAGjL,IAAI,CAACoD,IAAL,CAAU6H,SAAV,CAAZ;AAEA,QAAItJ,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAD,GAAO0K,SAAhB;AACA,QAAIxJ,EAAE,GAAGlB,CAAC,CAAC,CAAD,CAAD,GAAO0K,SAAhB;AACA,QAAIrJ,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAAD,GAAO0K,SAAhB;AACA,QAAIpJ,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAAD,GAAO0K,SAAhB;AAEA,QAAI/I,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAAV;AACA,QAAI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAAV;AACA,QAAI6B,EAAE,GAAG7B,CAAC,CAAC,CAAD,CAAV;AACA,QAAI8B,EAAE,GAAG9B,CAAC,CAAC,CAAD,CAAV;AAEA,QAAIgZ,OAAO,GAAG5X,EAAE,GAAGO,EAAL,GAAUT,EAAE,GAAGU,EAAf,GAAoBP,EAAE,GAAGQ,EAAzB,GAA8BP,EAAE,GAAGQ,EAAjD;AAEAxB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAT;AACAd,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAT;AACAZ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASe,EAAT;AACAf,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASgB,EAAT;AAEAhB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACqB,EAAE,GAAGP,EAAE,GAAG4X,OAAX,IAAsBtO,SAA/B;AACApK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACsB,EAAE,GAAGV,EAAE,GAAG8X,OAAX,IAAsBtO,SAA/B;AACApK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACuB,EAAE,GAAGR,EAAE,GAAG2X,OAAX,IAAsBtO,SAA/B;AACApK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACwB,EAAE,GAAGR,EAAE,GAAG0X,OAAX,IAAsBtO,SAA/B;AACD;;AACD,SAAOpK,GAAP;AACD;AAED;;;;;;;;AAMO,SAASqC,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,WAAWA,CAAC,CAAC,CAAD,CAAZ,GAAkB,IAAlB,GAAyBA,CAAC,CAAC,CAAD,CAA1B,GAAgC,IAAhC,GAAuCA,CAAC,CAAC,CAAD,CAAxC,GAA8C,IAA9C,GAAqDA,CAAC,CAAC,CAAD,CAAtD,GAA4D,IAA5D,GAAmEA,CAAC,CAAC,CAAD,CAApE,GAA0E,IAA1E,GAAiFA,CAAC,CAAC,CAAD,CAAlF,GAAwF,IAAxF,GAA+FA,CAAC,CAAC,CAAD,CAAhG,GAAsG,IAAtG,GAA6GA,CAAC,CAAC,CAAD,CAA9G,GAAoH,GAA3H;AACD;AAED;;;;;;;;;AAOO,SAASqD,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA3B,IAAkCF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA5C,IAAmDF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA7D,IAAoEF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA9E,IAAqFF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAA/F,IAAsGF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAhH,IAAuHF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAxI;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAAA,MAEIqB,EAAE,GAAGrB,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIsB,EAAE,GAAGtB,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAAA,MAMIsI,EAAE,GAAGtI,CAAC,CAAC,CAAD,CANV;AAAA,MAOIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CAPV;AAQA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAAA,MAEI2B,EAAE,GAAG3B,CAAC,CAAC,CAAD,CAFV;AAAA,MAGI4B,EAAE,GAAG5B,CAAC,CAAC,CAAD,CAHV;AAAA,MAIImE,EAAE,GAAGnE,CAAC,CAAC,CAAD,CAJV;AAAA,MAKIoE,EAAE,GAAGpE,CAAC,CAAC,CAAD,CALV;AAAA,MAMIuI,EAAE,GAAGvI,CAAC,CAAC,CAAD,CANV;AAAA,MAOIwI,EAAE,GAAGxI,CAAC,CAAC,CAAD,CAPV;AAQA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAA7H,IAA0KnC,IAAI,CAACU,GAAL,CAASkB,EAAE,GAAGQ,EAAd,KAAqBtB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASkB,EAAT,CAAd,EAA4B5B,IAAI,CAACU,GAAL,CAAS0B,EAAT,CAA5B,CAAlN,IAA+PpC,IAAI,CAACU,GAAL,CAASmB,EAAE,GAAGQ,EAAd,KAAqBvB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmB,EAAT,CAAd,EAA4B7B,IAAI,CAACU,GAAL,CAAS2B,EAAT,CAA5B,CAAvS,IAAoVrC,IAAI,CAACU,GAAL,CAASgE,EAAE,GAAGE,EAAd,KAAqB9D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASgE,EAAT,CAAd,EAA4B1E,IAAI,CAACU,GAAL,CAASkE,EAAT,CAA5B,CAA5X,IAAya5E,IAAI,CAACU,GAAL,CAASiE,EAAE,GAAGE,EAAd,KAAqB/D,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiE,EAAT,CAAd,EAA4B3E,IAAI,CAACU,GAAL,CAASmE,EAAT,CAA5B,CAAjd,IAA8f7E,IAAI,CAACU,GAAL,CAASmI,EAAE,GAAGG,EAAd,KAAqBlI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASmI,EAAT,CAAd,EAA4B7I,IAAI,CAACU,GAAL,CAASsI,EAAT,CAA5B,CAAtiB,IAAmlBhJ,IAAI,CAACU,GAAL,CAASoI,EAAE,GAAGG,EAAd,KAAqBnI,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASoI,EAAT,CAAd,EAA4B9I,IAAI,CAACU,GAAL,CAASuI,EAAT,CAA5B,CAAloB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC30BD;;;;;;AAEA;;;;;AAKA;;;;;AAKO,SAASrI,MAAT,GAAkB;AACvB,MAAIC,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;;AACA,MAAIkB,QAAQ,CAAClB,UAAT,IAAuBC,YAA3B,EAAyC;AACvCgB,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACD;;AACD,SAAOA,GAAP;AACD;AAED;;;;;;;;AAMO,SAASE,KAAT,CAAeR,CAAf,EAAkB;AACvB,MAAIM,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASK,UAAT,CAAoBsF,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAI5F,GAAG,GAAG,IAAIC,QAAQ,CAAClB,UAAb,CAAwB,CAAxB,CAAV;AACAiB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA,SAAO5F,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASG,IAAT,CAAcH,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAV;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASU,GAAT,CAAaV,GAAb,EAAkB2F,CAAlB,EAAqBC,CAArB,EAAwB;AAC7B5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2F,CAAT;AACA3F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4F,CAAT;AACA,SAAO5F,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS6C,GAAT,CAAa7C,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS8C,QAAT,CAAkB9C,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASoB,QAAT,CAAkBpB,GAAlB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6B;AAClCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyP,MAAT,CAAgBzP,GAAhB,EAAqBN,CAArB,EAAwBE,CAAxB,EAA2B;AAChCI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS0P,IAAT,CAAc1P,GAAd,EAAmBN,CAAnB,EAAsB;AAC3BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACuQ,IAAL,CAAUhQ,CAAC,CAAC,CAAD,CAAX,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS2P,KAAT,CAAe3P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACwQ,KAAL,CAAWjQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS4P,GAAT,CAAa5P,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyQ,GAAL,CAASlQ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASF,GAAT,CAAaE,GAAb,EAAkBN,CAAlB,EAAqBE,CAArB,EAAwB;AAC7BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACW,GAAL,CAASJ,CAAC,CAAC,CAAD,CAAV,EAAeE,CAAC,CAAC,CAAD,CAAhB,CAAT;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS6P,KAAT,CAAe7P,GAAf,EAAoBN,CAApB,EAAuB;AAC5BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC0Q,KAAL,CAAWnQ,CAAC,CAAC,CAAD,CAAZ,CAAT;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS+B,KAAT,CAAe/B,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/BI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAhB;AACA,SAAOI,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAAS8P,WAAT,CAAqB9P,GAArB,EAA0BN,CAA1B,EAA6BE,CAA7B,EAAgCmC,KAAhC,EAAuC;AAC5C/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAD,GAAOmC,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;AAOO,SAAS+P,QAAT,CAAkBrQ,CAAlB,EAAqBE,CAArB,EAAwB;AAC7B,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AAAA,MACIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CADhB;AAEA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAP;AACD;AAED;;;;;;;;;AAOO,SAASoK,eAAT,CAAyBtQ,CAAzB,EAA4BE,CAA5B,EAA+B;AACpC,MAAI+F,CAAC,GAAG/F,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAhB;AAAA,MACIkG,CAAC,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CADhB;AAEA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAnB;AACD;AAED;;;;;;;;AAMO,SAAS4J,MAAT,CAAgB9P,CAAhB,EAAmB;AACxB,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEA,SAAOP,IAAI,CAACoD,IAAL,CAAUoD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAP;AACD;AAED;;;;;;;;AAMO,SAASqK,aAAT,CAAuBvQ,CAAvB,EAA0B;AAC/B,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEA,SAAOiG,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAnB;AACD;AAED;;;;;;;;;AAOO,SAASsK,MAAT,CAAgBlQ,GAAhB,EAAqBN,CAArB,EAAwB;AAC7BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACN,CAAC,CAAC,CAAD,CAAX;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASmQ,OAAT,CAAiBnQ,GAAjB,EAAsBN,CAAtB,EAAyB;AAC9BM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,MAAMN,CAAC,CAAC,CAAD,CAAhB;AACA,SAAOM,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASoQ,SAAT,CAAmBpQ,GAAnB,EAAwBN,CAAxB,EAA2B;AAChC,MAAIiG,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEA,MAAIoJ,GAAG,GAAGnD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB;;AACA,MAAIkD,GAAG,GAAG,CAAV,EAAa;AACX;AACAA,IAAAA,GAAG,GAAG,IAAI3J,IAAI,CAACoD,IAAL,CAAUuG,GAAV,CAAV;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOoJ,GAAhB;AACA9I,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASN,CAAC,CAAC,CAAD,CAAD,GAAOoJ,GAAhB;AACD;;AACD,SAAO9I,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASqQ,GAAT,CAAa3Q,CAAb,EAAgBE,CAAhB,EAAmB;AACxB,SAAOF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAR,GAAcF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAA7B;AACD;AAED;;;;;;;;;;;AASO,SAAS0Q,KAAT,CAAetQ,GAAf,EAAoBN,CAApB,EAAuBE,CAAvB,EAA0B;AAC/B,MAAIoG,CAAC,GAAGtG,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAR,GAAcF,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAA9B;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAlB;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgG,CAAT;AACA,SAAOhG,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASuQ,IAAT,CAAcvQ,GAAd,EAAmBN,CAAnB,EAAsBE,CAAtB,EAAyBmJ,CAAzB,EAA4B;AACjC,MAAIiB,EAAE,GAAGtK,CAAC,CAAC,CAAD,CAAV;AAAA,MACIuK,EAAE,GAAGvK,CAAC,CAAC,CAAD,CADV;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASgK,EAAE,GAAGjB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOoK,EAAX,CAAf;AACAhK,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASiK,EAAE,GAAGlB,CAAC,IAAInJ,CAAC,CAAC,CAAD,CAAD,GAAOqK,EAAX,CAAf;AACA,SAAOjK,GAAP;AACD;AAED;;;;;;;;;AAOO,SAASZ,MAAT,CAAgBY,GAAhB,EAAqB+B,KAArB,EAA4B;AACjCA,EAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;AACA,MAAIkP,CAAC,GAAGhR,QAAQ,CAACf,MAAT,KAAoB,GAApB,GAA0BC,IAAI,CAACK,EAAvC;AACAQ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAAC2C,GAAL,CAASmP,CAAT,IAAclP,KAAvB;AACA/B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASb,IAAI,CAACyC,GAAL,CAASqP,CAAT,IAAclP,KAAvB;AACA,SAAO/B,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS2Y,aAAT,CAAuB3Y,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAA3B;AACA5F,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAA3B;AACA,SAAO5F,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAAS4Y,cAAT,CAAwB5Y,GAAxB,EAA6BN,CAA7B,EAAgC0R,CAAhC,EAAmC;AACxC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAhC;AACApR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAhC;AACA,SAAOpR,GAAP;AACD;AAED;;;;;;;;;;;AASO,SAASqR,aAAT,CAAuBrR,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AAAA,MACIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CADT;AAEAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAhC;AACApR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,CAAD,CAAhC;AACA,SAAOpR,GAAP;AACD;AAED;;;;;;;;;;;;AAUO,SAASmR,aAAT,CAAuBnR,GAAvB,EAA4BN,CAA5B,EAA+B0R,CAA/B,EAAkC;AACvC,MAAIzL,CAAC,GAAGjG,CAAC,CAAC,CAAD,CAAT;AACA,MAAIkG,CAAC,GAAGlG,CAAC,CAAC,CAAD,CAAT;AACAM,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAhC;AACApR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASoR,CAAC,CAAC,CAAD,CAAD,GAAOzL,CAAP,GAAWyL,CAAC,CAAC,CAAD,CAAD,GAAOxL,CAAlB,GAAsBwL,CAAC,CAAC,EAAD,CAAhC;AACA,SAAOpR,GAAP;AACD;AAED;;;;;;;;;;AAQO,SAASyB,MAAT,CAAgBzB,GAAhB,EAAqBN,CAArB,EAAwBE,CAAxB,EAA2BiC,CAA3B,EAA8B;AACnC;AACA,MAAIgX,EAAE,GAAGnZ,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAjB;AAAA,MACIkZ,EAAE,GAAGpZ,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CADjB;AAAA,MAEImZ,IAAI,GAAG5Z,IAAI,CAACyC,GAAL,CAASC,CAAT,CAFX;AAAA,MAGImX,IAAI,GAAG7Z,IAAI,CAAC2C,GAAL,CAASD,CAAT,CAHX,CAFmC,CAOnC;;AACA7B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6Y,EAAE,GAAGG,IAAL,GAAYF,EAAE,GAAGC,IAAjB,GAAwBnZ,CAAC,CAAC,CAAD,CAAlC;AACAI,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS6Y,EAAE,GAAGE,IAAL,GAAYD,EAAE,GAAGE,IAAjB,GAAwBpZ,CAAC,CAAC,CAAD,CAAlC;AAEA,SAAOI,GAAP;AACD;AAED;;;;;;;;AAMO,SAASmS,KAAT,CAAezS,CAAf,EAAkBE,CAAlB,EAAqB;AAC1B,MAAIqO,EAAE,GAAGvO,CAAC,CAAC,CAAD,CAAV;AAAA,MACIyO,EAAE,GAAGzO,CAAC,CAAC,CAAD,CADV;AAAA,MAEIwG,EAAE,GAAGtG,CAAC,CAAC,CAAD,CAFV;AAAA,MAGIuG,EAAE,GAAGvG,CAAC,CAAC,CAAD,CAHV;AAKA,MAAIqZ,IAAI,GAAGhL,EAAE,GAAGA,EAAL,GAAUE,EAAE,GAAGA,EAA1B;;AACA,MAAI8K,IAAI,GAAG,CAAX,EAAc;AACZ;AACAA,IAAAA,IAAI,GAAG,IAAI9Z,IAAI,CAACoD,IAAL,CAAU0W,IAAV,CAAX;AACD;;AAED,MAAIC,IAAI,GAAGhT,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA1B;;AACA,MAAI+S,IAAI,GAAG,CAAX,EAAc;AACZ;AACAA,IAAAA,IAAI,GAAG,IAAI/Z,IAAI,CAACoD,IAAL,CAAU2W,IAAV,CAAX;AACD;;AAED,MAAI5G,MAAM,GAAG,CAACrE,EAAE,GAAG/H,EAAL,GAAUiI,EAAE,GAAGhI,EAAhB,IAAsB8S,IAAtB,GAA6BC,IAA1C;;AAEA,MAAI5G,MAAM,GAAG,GAAb,EAAkB;AAChB,WAAO,CAAP;AACD,GAFD,MAEO,IAAIA,MAAM,GAAG,CAAC,GAAd,EAAmB;AACxB,WAAOnT,IAAI,CAACK,EAAZ;AACD,GAFM,MAEA;AACL,WAAOL,IAAI,CAACoT,IAAL,CAAUD,MAAV,CAAP;AACD;AACF;AAED;;;;;;;;AAMO,SAASjQ,GAAT,CAAa3C,CAAb,EAAgB;AACrB,SAAO,UAAUA,CAAC,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA+B,GAAtC;AACD;AAED;;;;;;;;;AAOO,SAASqD,WAAT,CAAqBrD,CAArB,EAAwBE,CAAxB,EAA2B;AAChC,SAAOF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAV,IAAiBF,CAAC,CAAC,CAAD,CAAD,KAASE,CAAC,CAAC,CAAD,CAAlC;AACD;AAED;;;;;;;;;AAOO,SAASD,MAAT,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB;AAC3B,MAAIkB,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAV;AAAA,MACIkB,EAAE,GAAGlB,CAAC,CAAC,CAAD,CADV;AAEA,MAAI2B,EAAE,GAAGzB,CAAC,CAAC,CAAD,CAAV;AAAA,MACI0B,EAAE,GAAG1B,CAAC,CAAC,CAAD,CADV;AAEA,SAAOT,IAAI,CAACU,GAAL,CAASiB,EAAE,GAAGO,EAAd,KAAqBpB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASiB,EAAT,CAAd,EAA4B3B,IAAI,CAACU,GAAL,CAASwB,EAAT,CAA5B,CAAxC,IAAqFlC,IAAI,CAACU,GAAL,CAASe,EAAE,GAAGU,EAAd,KAAqBrB,QAAQ,CAACnB,OAAT,GAAmBK,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcX,IAAI,CAACU,GAAL,CAASe,EAAT,CAAd,EAA4BzB,IAAI,CAACU,GAAL,CAASyB,EAAT,CAA5B,CAApI;AACD;AAED;;;;;;AAIO,IAAIwH,GAAG,GAAG0G,MAAV;AAEP;;;;;;AAIO,IAAIrM,GAAG,GAAGL,QAAV;AAEP;;;;;;AAIO,IAAII,GAAG,GAAG9B,QAAV;AAEP;;;;;;AAIO,IAAIoR,GAAG,GAAG/C,MAAV;AAEP;;;;;;AAIO,IAAIgD,IAAI,GAAG1C,QAAX;AAEP;;;;;;AAIO,IAAI2C,OAAO,GAAG1C,eAAd;AAEP;;;;;;AAIO,IAAI2C,MAAM,GAAG1C,aAAb;AAEP;;;;;;;;;;;;;;;AAYO,IAAI2C,OAAO,GAAG,YAAY;AAC/B,MAAIC,GAAG,GAAG9S,MAAM,EAAhB;AAEA,SAAO,UAAUL,CAAV,EAAaoT,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,EAApC,EAAwCC,GAAxC,EAA6C;AAClD,QAAIC,CAAC,GAAG,KAAK,CAAb;AAAA,QACIC,CAAC,GAAG,KAAK,CADb;;AAEA,QAAI,CAACN,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAI,CAACC,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,QAAIC,KAAJ,EAAW;AACTI,MAAAA,CAAC,GAAGjU,IAAI,CAACyQ,GAAL,CAASoD,KAAK,GAAGF,MAAR,GAAiBC,MAA1B,EAAkCrT,CAAC,CAAC8P,MAApC,CAAJ;AACD,KAFD,MAEO;AACL4D,MAAAA,CAAC,GAAG1T,CAAC,CAAC8P,MAAN;AACD;;AAED,SAAK2D,CAAC,GAAGJ,MAAT,EAAiBI,CAAC,GAAGC,CAArB,EAAwBD,CAAC,IAAIL,MAA7B,EAAqC;AACnCD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAD,CAAV;AAAcN,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASnT,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAV;AACdF,MAAAA,EAAE,CAACJ,GAAD,EAAMA,GAAN,EAAWK,GAAX,CAAF;AACAxT,MAAAA,CAAC,CAACyT,CAAD,CAAD,GAAON,GAAG,CAAC,CAAD,CAAV;AAAcnT,MAAAA,CAAC,CAACyT,CAAC,GAAG,CAAL,CAAD,GAAWN,GAAG,CAAC,CAAD,CAAd;AACf;;AAED,WAAOnT,CAAP;AACD,GAxBD;AAyBD,CA5BoB,EAAd;;;;;;;;;;;ACplBP;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;ACTA;AAEA;AACA,IAAMyZ,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;eACiBA,OAAO,CAAC,WAAD;IAAhBzC,gBAAAA,MAER;;;AACA,IAAM0C,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,IAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB,EAEA;;AACA,IAAI3R,KAAJ,EAAWC,MAAX,EAAmB2R,UAAnB,EAEA;;AACA,IAAIC,GAAJ;AACA,IAAIC,OAAO,GAAG,KAAd;AACA,IAAIC,QAAJ;AACA,IAAIC,IAAI,GAAG,CAAX,EAEA;;AACA,IAAMC,WAAW,GAAG5a,IAAI,CAACK,EAAL,GAAU,CAA9B;AACA,IAAMuO,EAAE,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAX,EAEA;;AACA,IAAMiM,QAAQ,GAAG,CACf,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,CAAC,GAAX,CADe,EAEf,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAV,CAFe,EAGf,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAHe,EAIf,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,GAAV,CAJe,CAAjB,EAOA;;AACA,SAASC,MAAT,GAAkB;AAChBP,EAAAA,UAAU,GAAGQ,MAAM,CAACC,gBAApB;AACArS,EAAAA,KAAK,GAAGoS,MAAM,CAACE,UAAf;AACArS,EAAAA,MAAM,GAAGmS,MAAM,CAACG,WAAhB;AACAhB,EAAAA,MAAM,CAACvR,KAAP,GAAeA,KAAK,GAAG4R,UAAvB;AACAL,EAAAA,MAAM,CAACtR,MAAP,GAAgBA,MAAM,GAAG2R,UAAzB;AACAL,EAAAA,MAAM,CAACiB,KAAP,CAAaxS,KAAb,aAAwBA,KAAxB;AACAuR,EAAAA,MAAM,CAACiB,KAAP,CAAavS,MAAb,aAAyBA,MAAzB;AACD,EAED;;;AACA,SAASwS,OAAT,GAAmB;AACjB,MAAI,CAACX,OAAL,EAAc;AACdD,EAAAA,GAAG,GAAGa,qBAAqB,CAACD,OAAD,CAA3B;AACA,MAAME,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,MAAME,KAAK,GAAG,CAACF,GAAG,GAAGZ,QAAP,IAAmB,IAAjC;AACAC,EAAAA,IAAI,IAAIa,KAAR;AACAd,EAAAA,QAAQ,GAAGY,GAAX;AACAG,EAAAA,MAAM,CAACd,IAAD,CAAN;AACD,EAED;;;AACA,SAASc,MAAT,GAA0B;AAAA,MAAVd,IAAU,uEAAH,CAAG;AACxBN,EAAAA,OAAO,CAACqB,IAAR;AACArB,EAAAA,OAAO,CAACzX,KAAR,CAAc2X,UAAd,EAA0BA,UAA1B;AACAoB,EAAAA,IAAI,CAAChB,IAAD,CAAJ;AACAN,EAAAA,OAAO,CAACuB,OAAR;AACD,EAED;;;AACA,SAASD,IAAT,GAAwB;AAAA,MAAVhB,IAAU,uEAAH,CAAG;AACtB;AACAN,EAAAA,OAAO,CAACwB,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBlT,KAAxB,EAA+BC,MAA/B,EAFsB,CAItB;;AACAyR,EAAAA,OAAO,CAACyB,SAAR,GAAoB,SAApB;AACAzB,EAAAA,OAAO,CAAC0B,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBpT,KAAvB,EAA8BC,MAA9B;AACAyR,EAAAA,OAAO,CAACyB,SAAR,GAAoBzB,OAAO,CAAC2B,WAAR,GAAsB,OAA1C,CAPsB,CAStB;;AACA,MAAMhJ,KAAK,GAAG2H,IAAI,GAAG,GAAP,GAAa3a,IAAI,CAACK,EAAL,GAAU,CAArC;AACA,MAAM4b,aAAa,GAAG,IAAIjc,IAAI,CAACyC,GAAL,CAASkY,IAAI,GAAG,GAAhB,IAAuB,IAAjD;AACA,MAAMxE,EAAE,GAAGnW,IAAI,CAAC2C,GAAL,CAASqQ,KAAT,IAAkBiJ,aAA7B;AACA,MAAM5F,EAAE,GAAGrW,IAAI,CAACyC,GAAL,CAASuQ,KAAT,IAAkBiJ,aAA7B;AACA,MAAM7F,EAAE,GAAG,IAAIpW,IAAI,CAACyC,GAAL,CAASkY,IAAT,IAAiB,CAAhC,CAdsB,CAgBtB;;AACA,MAAMuB,QAAQ,GAAG,CAAC/F,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAjB,CAjBsB,CAmBtB;;AACA,MAAMxG,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CApBsB,CAsBtB;;AACA,MAAMnH,UAAU,GAAG8O,IAAI,CAACpK,WAAL,CACjB,EADiB,EAEjBwN,WAFiB,EAGjBjS,KAAK,GAAGC,MAHS,EAIjB,KAJiB,EAKjB,GALiB,CAAnB,CAvBsB,CA+BtB;;AACA,MAAMuT,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAOxT,KAAP,EAAcC,MAAd,CAAjB,CAhCsB,CAkCtB;;AACA,MAAMsO,IAAI,GAAGM,IAAI,CAAC/I,MAAL,CAAY,EAAZ,EAAgByN,QAAhB,EAA0BrM,MAA1B,EAAkCjB,EAAlC,CAAb,CAnCsB,CAqCtB;;AACA,MAAMwN,QAAQ,GAAG5E,IAAI,CAACvV,QAAL,CAAc,EAAd,EAAkByG,UAAlB,EAA8BwO,IAA9B,CAAjB,CAtCsB,CAwCtB;;AACA,MAAMmF,MAAM,GAAGxB,QAAQ,CAACyB,GAAT,CAAa,UAAAvJ,CAAC,EAAI;AAC/B,WAAOiH,OAAO,CAAC,EAAD,EAAKjH,CAAL,EAAQoJ,QAAR,EAAkBC,QAAlB,CAAd;AACD,GAFc,CAAf,CAzCsB,CA6CtB;;AACA/B,EAAAA,OAAO,CAACkC,SAAR;AACAF,EAAAA,MAAM,CAAC5I,OAAP,CAAe;AAAA;AAAA,QAAEjN,CAAF;AAAA,QAAKC,CAAL;;AAAA,WAAY4T,OAAO,CAACmC,MAAR,CAAehW,CAAf,EAAkBC,CAAlB,CAAZ;AAAA,GAAf;AACA4T,EAAAA,OAAO,CAACoC,SAAR;AACApC,EAAAA,OAAO,CAACqC,MAAR,GAjDsB,CAmDtB;;AACAL,EAAAA,MAAM,CAAC5I,OAAP,CAAe,UAAAkJ,KAAK,EAAI;AAAA,gCACPA,KADO;AAAA,QACfnW,CADe;AAAA,QACZC,CADY;;AAEtB4T,IAAAA,OAAO,CAACkC,SAAR;AACAlC,IAAAA,OAAO,CAACuC,GAAR,CAAYpW,CAAZ,EAAeC,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwBzG,IAAI,CAACK,EAAL,GAAU,CAAlC,EAAqC,KAArC;AACAga,IAAAA,OAAO,CAACwC,IAAR;AACD,GALD,EApDsB,CA2DtB;;AA3DsB,iBA4DP7C,OAAO,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,CAAL,EAAmBmC,QAAnB,EAA6BC,QAA7B,CA5DA;AAAA;AAAA,MA4Df5V,CA5De;AAAA,MA4DZC,CA5DY;;AA6DtB4T,EAAAA,OAAO,CAACkC,SAAR;AACAlC,EAAAA,OAAO,CAACuC,GAAR,CAAYpW,CAAZ,EAAeC,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwBzG,IAAI,CAACK,EAAL,GAAU,CAAlC,EAAqC,KAArC;AACAga,EAAAA,OAAO,CAACwC,IAAR;AACD,EAED;;;AACA/B,MAAM;AACNW,MAAM,IAEN;;AACA,IAAMqB,EAAE,GAAG3C,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAM2C,KAAK,GAAG5C,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;;AAEA,IAAM4C,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBD,EAAAA,KAAK,CAAC5B,KAAN,CAAY8B,OAAZ,GAAsBxC,OAAO,GAAG,MAAH,GAAY,EAAzC;AACAqC,EAAAA,EAAE,CAAC3B,KAAH,CAAS8B,OAAT,GAAmBxC,OAAO,GAAG,MAAH,GAAY,EAAtC;AACD,CAHD;;AAKA,IAAMyC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAClB;AACA,MAAI,CAAC1C,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,QAAQ,GAAGa,IAAI,CAACD,GAAL,EAAX;AACAF,IAAAA,OAAO;AACR;;AACD4B,EAAAA,MAAM;AACP,CARD;;AAUA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAAAD,EAAE,EAAI;AACjB;AACA,MAAI1C,OAAJ,EAAa;AACXA,IAAAA,OAAO,GAAG,KAAV;AACA4C,IAAAA,oBAAoB,CAAC7C,GAAD,CAApB;AACD;;AACDwC,EAAAA,MAAM;AACP,CAPD;;AASAA,MAAM;AAENjC,MAAM,CAACuC,gBAAP,CAAwB,WAAxB,EAAqCJ,KAArC,EAA4C;AAAEK,EAAAA,OAAO,EAAE;AAAX,CAA5C;AACAxC,MAAM,CAACuC,gBAAP,CAAwB,YAAxB,EAAsCJ,KAAtC,EAA6C;AAAEK,EAAAA,OAAO,EAAE;AAAX,CAA7C;AACAxC,MAAM,CAACuC,gBAAP,CAAwB,SAAxB,EAAmCF,IAAnC,EAAyC;AAAEG,EAAAA,OAAO,EAAE;AAAX,CAAzC;AACAxC,MAAM,CAACuC,gBAAP,CAAwB,UAAxB,EAAoCF,IAApC,EAA0C;AAAEG,EAAAA,OAAO,EAAE;AAAX,CAA1C,GAEA;AACA;AACA;AACA;;;AC1KA,IAAIC,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUtK,EAAV,EAAc;AACpB,WAAKoK,gBAAL,CAAsBG,IAAtB,CAA2BvK,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTwK,IAAAA,OAAO,EAAE,UAAUxK,EAAV,EAAc;AACrB,WAAKqK,iBAAL,CAAuBE,IAAvB,CAA4BvK,EAA5B;AACD;AATQ,GAAX;AAYA4J,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIW,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGf,MAAM,CAACC,MAAP,CAAcc,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIR,IAAI,GAAGkB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACjB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAAC7d,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIif,OAAO,GAAG,KAAd;AACApB,MAAAA,IAAI,CAACqB,MAAL,CAAY5L,OAAZ,CAAoB,UAAS6L,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIpB,IAAI,CAACqB,MAAL,CAAYQ,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACnf,IAAN,KAAe,KAAf,IAAwBmf,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIX,OAAJ,EAAa;AACXY,QAAAA,OAAO,CAACC,KAAR;AAEAjC,QAAAA,IAAI,CAACqB,MAAL,CAAY5L,OAAZ,CAAoB,UAAU6L,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAd,QAAAA,cAAc,CAAC/K,OAAf,CAAuB,UAAU5Q,CAAV,EAAa;AAClCsd,UAAAA,YAAY,CAACtd,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIgc,QAAQ,CAACuB,MAAb,EAAqB;AAAE;AAC5BvB,QAAAA,QAAQ,CAACuB,MAAT;AACD;AACF;;AAED,QAAIpC,IAAI,CAAC7d,IAAL,KAAc,QAAlB,EAA4B;AAC1B4e,MAAAA,EAAE,CAACsB,KAAH;;AACAtB,MAAAA,EAAE,CAACuB,OAAH,GAAa,YAAY;AACvBzB,QAAAA,QAAQ,CAACuB,MAAT;AACD,OAFD;AAGD;;AAED,QAAIpC,IAAI,CAAC7d,IAAL,KAAc,gBAAlB,EAAoC;AAClC6f,MAAAA,OAAO,CAACO,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAIxC,IAAI,CAAC7d,IAAL,KAAc,OAAlB,EAA2B;AACzB6f,MAAAA,OAAO,CAACS,KAAR,CAAc,kBAAkBzC,IAAI,CAACyC,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C1C,IAAI,CAACyC,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAAC7C,IAAD,CAAhC;AACA7D,MAAAA,QAAQ,CAAC2G,IAAT,CAAcC,WAAd,CAA0BH,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGzG,QAAQ,CAAC6G,cAAT,CAAwBxD,UAAxB,CAAd;;AACA,MAAIoD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACK,MAAR;AACD;AACF;;AAED,SAASJ,kBAAT,CAA4B7C,IAA5B,EAAkC;AAChC,MAAI4C,OAAO,GAAGzG,QAAQ,CAAC+G,aAAT,CAAuB,KAAvB,CAAd;AACAN,EAAAA,OAAO,CAAChB,EAAR,GAAapC,UAAb,CAFgC,CAIhC;;AACA,MAAIkD,OAAO,GAAGvG,QAAQ,CAAC+G,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGhH,QAAQ,CAAC+G,aAAT,CAAuB,KAAvB,CAAjB;AACAR,EAAAA,OAAO,CAACU,SAAR,GAAoBpD,IAAI,CAACyC,KAAL,CAAWC,OAA/B;AACAS,EAAAA,UAAU,CAACC,SAAX,GAAuBpD,IAAI,CAACyC,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACS,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EX,OAAO,CAACW,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOT,OAAP;AAED;;AAED,SAASU,UAAT,CAAoB3D,MAApB,EAA4BiC,EAA5B,EAAgC;AAC9B,MAAI2B,OAAO,GAAG5D,MAAM,CAAC4D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIxL,CAAJ,EAAO/R,CAAP,EAAUwd,GAAV;;AAEA,OAAKzL,CAAL,IAAUuL,OAAV,EAAmB;AACjB,SAAKtd,CAAL,IAAUsd,OAAO,CAACvL,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvByL,MAAAA,GAAG,GAAGF,OAAO,CAACvL,CAAD,CAAP,CAAW,CAAX,EAAc/R,CAAd,CAAN;;AACA,UAAIwd,GAAG,KAAK7B,EAAR,IAAe9f,KAAK,CAAC4hB,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACpR,MAAJ,GAAa,CAAd,CAAH,KAAwBuP,EAAjE,EAAsE;AACpE4B,QAAAA,OAAO,CAACnD,IAAR,CAAarI,CAAb;AACD;AACF;AACF;;AAED,MAAI2H,MAAM,CAACc,MAAX,EAAmB;AACjB+C,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeL,UAAU,CAAC3D,MAAM,CAACc,MAAR,EAAgBmB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO4B,OAAP;AACD;;AAED,SAAStB,QAAT,CAAkBvC,MAAlB,EAA0B2B,KAA1B,EAAiC;AAC/B,MAAIiC,OAAO,GAAG5D,MAAM,CAAC4D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACjC,MAAM,CAACc,MAAjC,EAAyC;AACvC,QAAI3K,EAAE,GAAG,IAAI8N,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CtC,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACgC,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAtB;AACA2B,IAAAA,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC9L,EAAD,EAAKwL,KAAK,CAACuC,IAAX,CAApB;AACD,GAJD,MAIO,IAAIlE,MAAM,CAACc,MAAX,EAAmB;AACxByB,IAAAA,QAAQ,CAACvC,MAAM,CAACc,MAAR,EAAgBa,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB9B,MAAxB,EAAgCiC,EAAhC,EAAoC;AAClC,MAAI2B,OAAO,GAAG5D,MAAM,CAAC4D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC3B,EAAD,CAAR,IAAgBjC,MAAM,CAACc,MAA3B,EAAmC;AACjC,WAAOgB,cAAc,CAAC9B,MAAM,CAACc,MAAR,EAAgBmB,EAAhB,CAArB;AACD;;AAED,MAAIrB,aAAa,CAACqB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDrB,EAAAA,aAAa,CAACqB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIkC,MAAM,GAAGnE,MAAM,CAACoE,KAAP,CAAanC,EAAb,CAAb;AAEApB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACV,MAAD,EAASiC,EAAT,CAApB;;AAEA,MAAIkC,MAAM,IAAIA,MAAM,CAAC/D,GAAjB,IAAwB+D,MAAM,CAAC/D,GAAP,CAAWG,gBAAX,CAA4B7N,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOiR,UAAU,CAAC5B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCoC,IAArC,CAA0C,UAAUpC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASO,YAAT,CAAsBxC,MAAtB,EAA8BiC,EAA9B,EAAkC;AAChC,MAAIkC,MAAM,GAAGnE,MAAM,CAACoE,KAAP,CAAanC,EAAb,CAAb;AACAjC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAI6D,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAC/D,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAI6D,MAAM,IAAIA,MAAM,CAAC/D,GAAjB,IAAwB+D,MAAM,CAAC/D,GAAP,CAAWI,iBAAX,CAA6B9N,MAAzD,EAAiE;AAC/DyR,IAAAA,MAAM,CAAC/D,GAAP,CAAWI,iBAAX,CAA6B1K,OAA7B,CAAqC,UAAUwO,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACtE,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAACoE,KAAP,CAAanC,EAAb,CAAP;AACAjC,EAAAA,MAAM,CAACiC,EAAD,CAAN;AAEAkC,EAAAA,MAAM,GAAGnE,MAAM,CAACoE,KAAP,CAAanC,EAAb,CAAT;;AACA,MAAIkC,MAAM,IAAIA,MAAM,CAAC/D,GAAjB,IAAwB+D,MAAM,CAAC/D,GAAP,CAAWG,gBAAX,CAA4B7N,MAAxD,EAAgE;AAC9DyR,IAAAA,MAAM,CAAC/D,GAAP,CAAWG,gBAAX,CAA4BzK,OAA5B,CAAoC,UAAUwO,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"04_3d-camera-in-canvas2d.e31bb0bc.js","sourceRoot":"..","sourcesContent":["module.exports = transformMat4\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4 (out, a, m) {\n  var x = a[0], y = a[1], z = a[2], w = a[3]\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w\n  return out\n}\n","module.exports = set\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set (out, x, y, z, w) {\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n","var transformMat4 = require('gl-vec4/transformMat4')\nvar set = require('gl-vec4/set')\n\nvar NEAR_RANGE = 0\nvar FAR_RANGE = 1\nvar tmp4 = [0, 0, 0, 0]\n\nmodule.exports = cameraProject\nfunction cameraProject (out, vec, viewport, combinedProjView) {\n  var vX = viewport[0],\n    vY = viewport[1],\n    vWidth = viewport[2],\n    vHeight = viewport[3],\n    n = NEAR_RANGE,\n    f = FAR_RANGE\n\n  // convert: clip space -> NDC -> window coords\n  // implicit 1.0 for w component\n  set(tmp4, vec[0], vec[1], vec[2], 1.0)\n\n  // transform into clip space\n  transformMat4(tmp4, tmp4, combinedProjView)\n\n  // now transform into NDC\n  var w = tmp4[3]\n  if (w !== 0) { // how to handle infinity here?\n    tmp4[0] = tmp4[0] / w\n    tmp4[1] = tmp4[1] / w\n    tmp4[2] = tmp4[2] / w\n  }\n\n  // and finally into window coordinates\n  // the foruth component is (1/clip.w)\n  // which is the same as gl_FragCoord.w\n  out[0] = vX + vWidth / 2 * tmp4[0] + (0 + vWidth / 2)\n  out[1] = vY + vHeight / 2 * tmp4[1] + (0 + vHeight / 2)\n  out[2] = (f - n) / 2 * tmp4[2] + (f + n) / 2\n  out[3] = w === 0 ? 0 : 1 / w\n  return out\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","//https://mattdesl.svbtle.com/bellwoods\n\n// Third-party dependencies\nconst project = require(\"camera-project\");\nconst { mat4 } = require(\"gl-matrix\");\n\n// Setup our 2D canvas\nconst canvas = document.querySelector(\"#canvas\");\nconst context = canvas.getContext(\"2d\");\n\n// Size properties\nlet width, height, pixelRatio;\n\n// Animation properties\nlet raf;\nlet playing = false;\nlet lastTime;\nlet time = 0;\n\n// 3D Camera properties\nconst fieldOfView = Math.PI / 4;\nconst up = [0, -1, 0];\n\n// Our 3D vertex data, a 2D square\nconst vertices = [\n  [-0.5, 0, -0.5],\n  [0.5, 0, -0.5],\n  [0.5, 0, 0.5],\n  [-0.5, 0, 0.5]\n];\n\n// Resizing the canvas\nfunction resize() {\n  pixelRatio = window.devicePixelRatio;\n  width = window.innerWidth;\n  height = window.innerHeight;\n  canvas.width = width * pixelRatio;\n  canvas.height = height * pixelRatio;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n}\n\n// Animation loop\nfunction animate() {\n  if (!playing) return;\n  raf = requestAnimationFrame(animate);\n  const now = Date.now();\n  const delta = (now - lastTime) / 1000;\n  time += delta;\n  lastTime = now;\n  render(time);\n}\n\n// Render the frame with retina scaling\nfunction render(time = 0) {\n  context.save();\n  context.scale(pixelRatio, pixelRatio);\n  draw(time);\n  context.restore();\n}\n\n// Submit the Canvas2D draw calls\nfunction draw(time = 0) {\n  // Clear buffer\n  context.clearRect(0, 0, width, height);\n\n  // Fill with background color\n  context.fillStyle = \"#E09992\";\n  context.fillRect(0, 0, width, height);\n  context.fillStyle = context.strokeStyle = \"white\";\n\n  // Orbit around the center with some variance\n  const angle = time * 0.5 + Math.PI / 4;\n  const orbitDistance = 2 + Math.sin(time * 0.5) * 0.25;\n  const cx = Math.cos(angle) * orbitDistance;\n  const cz = Math.sin(angle) * orbitDistance;\n  const cy = 2 + Math.sin(time) * 1;\n\n  // 3D Camera position\n  const position = [cx, cy, cz];\n\n  // Camera always looks toward world center\n  const target = [0, 0, 0];\n\n  // Create a projection matrix for perspective\n  const projection = mat4.perspective(\n    [],\n    fieldOfView,\n    width / height,\n    0.001,\n    100\n  );\n\n  // Define a viewport of the window\n  const viewport = [0, 0, width, height];\n\n  // Create a view matrix from the camera transformation\n  const view = mat4.lookAt([], position, target, up);\n\n  // Combine these for 3D to 2D conversion\n  const projView = mat4.multiply([], projection, view);\n\n  // Convert 3D vertices to 2D screen space points\n  const points = vertices.map(p => {\n    return project([], p, viewport, projView);\n  });\n\n  // Draw an outline around the points\n  context.beginPath();\n  points.forEach(([x, y]) => context.lineTo(x, y));\n  context.closePath();\n  context.stroke();\n\n  // Render circles at each vertex\n  points.forEach(point => {\n    const [x, y] = point;\n    context.beginPath();\n    context.arc(x, y, 2, 0, Math.PI * 2, false);\n    context.fill();\n  });\n\n  // Project a little \"dot\" floating above the center\n  const [x, y] = project([], [0, 0.35, 0], viewport, projView);\n  context.beginPath();\n  context.arc(x, y, 4, 0, Math.PI * 2, false);\n  context.fill();\n}\n\n// Resize initially and draw first frame\nresize();\nrender();\n\n// Handle interactions\nconst el = document.querySelector(\"#text\");\nconst cover = document.querySelector(\"#cover\");\n\nconst update = () => {\n  cover.style.display = playing ? \"none\" : \"\";\n  el.style.display = playing ? \"none\" : \"\";\n};\n\nconst start = ev => {\n  // ev.preventDefault();\n  if (!playing) {\n    playing = true;\n    lastTime = Date.now();\n    animate();\n  }\n  update();\n};\n\nconst stop = ev => {\n  // ev.preventDefault();\n  if (playing) {\n    playing = false;\n    cancelAnimationFrame(raf);\n  }\n  update();\n};\n\nupdate();\n\nwindow.addEventListener(\"mousedown\", start, { passive: false });\nwindow.addEventListener(\"touchstart\", start, { passive: false });\nwindow.addEventListener(\"mouseup\", stop, { passive: false });\nwindow.addEventListener(\"touchend\", stop, { passive: false });\n\n// Avoid iOS drag events\n// document.addEventListener(\"touchmove\", ev => ev.preventDefault(), {\n//   passive: false\n// });\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}